type AddonParameterListResult {
  id:String
  value:String
}
input ClusterTargetInput {
  cloud_provider:String
  cluster_id:String
  kind:String
  multi_az:Boolean
  region:String
}
type ClusterTargetResult {
  cloud_provider:String
  cluster_id:String
  kind:String
  multi_az:Boolean
  region:String
}
"Schema for the request to update a data plane cluster's status"
input ConnectorClusterInput {
  href:String
  id:String
  kind:String
  metadata:ConnectorClusterMetadataInput
  status:String
}
type ConnectorClusterListItemsMetadataResult {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
type ConnectorClusterListItemsResult {
  href:String
  id:String
  kind:String
  metadata:ConnectorClusterListItemsMetadataResult
  status:String
}
type ConnectorClusterListResult {
  items:[ConnectorClusterListItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
input ConnectorClusterMetadataInput {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
type ConnectorClusterMetadataResult {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
"Schema for the request to update a data plane cluster's status"
type ConnectorClusterResult {
  href:String
  id:String
  kind:String
  metadata:ConnectorClusterMetadataResult
  status:String
}
"A connector holds the configuration to connect a Kafka topic to another system."
input ConnectorInput {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetInput
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsInput
  kind:String
  metadata:ConnectorMetadataInput
  status:String
}
type ConnectorListItemsMetadataResult {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
type ConnectorListItemsResult {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetResult
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsResult
  kind:String
  metadata:ConnectorListItemsMetadataResult
  status:String
}
type ConnectorListResult {
  items:[ConnectorListItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
input ConnectorMetadataInput {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
type ConnectorMetadataResult {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
"A connector holds the configuration to connect a Kafka topic to another system."
type ConnectorResult {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetResult
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsResult
  kind:String
  metadata:ConnectorMetadataResult
  status:String
}
type ConnectorTypeListItemsResult {
  "Version of the connector type."
  channels:[String]
  "A description of the connector."
  description:String
  href:String
  "URL to an icon of the connector."
  icon_href:String
  id:String
  "A json schema that can be used to validate a connectors connector_spec field."
  json_schema:JSON
  kind:String
  "labels used to categorize the connector"
  labels:[String]
  "Name of the connector type."
  name:String
  "Version of the connector type."
  version:String
}
type ConnectorTypeListResult {
  items:[ConnectorTypeListItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
"Represents a connector type supported by the API"
type ConnectorTypeResult {
  "Version of the connector type."
  channels:[String]
  "A description of the connector."
  description:String
  href:String
  "URL to an icon of the connector."
  icon_href:String
  id:String
  "A json schema that can be used to validate a connectors connector_spec field."
  json_schema:JSON
  kind:String
  "labels used to categorize the connector"
  labels:[String]
  "Name of the connector type."
  name:String
  "Version of the connector type."
  version:String
}
type ErrorResult {
  code:String
  href:String
  id:String
  kind:String
  operation_id:String
  reason:String
}
"a JSON encoded object"
scalar JSON
input KafkaConnectionSettingsInput {
  bootstrap_server:String
  client_id:String
  client_secret:String
}
type KafkaConnectionSettingsResult {
  bootstrap_server:String
  client_id:String
  client_secret:String
}
type Mutation {
  """
    Create a new connector
    
    **endpoint:** `POST /api/connector_mgmt/v1/kafka_connectors`
    """
  createConnector(
    body:ConnectorInput!,
    "Perform the action in an asynchronous manner"
    async:Boolean!
  ):ConnectorResult
  """
    Create a new connector cluster
    
    **endpoint:** `POST /api/connector_mgmt/v1/kafka_connector_clusters`
    """
  createConnectorCluster(
    body:ConnectorClusterInput!,
    "Perform the action in an asynchronous manner"
    async:Boolean!
  ):ConnectorClusterResult
  """
    Delete a connector
    
    **endpoint:** `DELETE /api/connector_mgmt/v1/kafka_connectors/{id}`
    """
  deleteConnector(id:String!):ErrorResult
  """
    Delete a connector cluster
    
    **endpoint:** `DELETE /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}`
    """
  deleteConnectorCluster(connector_cluster_id:String!):ErrorResult
  """
    patch a connector
    
    **endpoint:** `PATCH /api/connector_mgmt/v1/kafka_connectors/{id}`
    """
  patchConnector(id:String!):ConnectorResult
}
type Query {
  """
    Get a connector
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connectors/{id}`
    """
  getConnector(id:String!):ConnectorResult
  """
    Get a connector cluster
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}`
    """
  getConnectorCluster(connector_cluster_id:String!):ConnectorClusterResult
  """
    Get a connector cluster's addon parameters
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/addon_parameters`
    """
  getConnectorClusterAddonParameters(connector_cluster_id:String!):[AddonParameterListResult]
  """
    Get a connector type by id
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_types/{connector_type_id}`
    """
  getConnectorTypeByID(connector_type_id:String!):ConnectorTypeResult
  """
    Returns a list of connector clusters
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters`
    """
  listConnectorClusters(
    "Page index"
    page:String,
    "Number of items in each page"
    size:String
  ):ConnectorClusterListResult
  """
    Returns a list of connector types
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_types`
    """
  listConnectorTypes(
    "Page index"
    page:String,
    "Number of items in each page"
    size:String
  ):ConnectorTypeListResult
  """
    Returns a list of connector types
    
    **endpoint:** `GET /api/connector_mgmt/v1/kafka_connectors`
    """
  listConnectors(
    "Page index"
    page:String,
    "Number of items in each page"
    size:String,
    "The kafka cluster id"
    kafka_id:String
  ):ConnectorListResult
}
schema {
  mutation: Mutation
  query: Query
}
