input ClusterTargetInput {
  cloud_provider:String
  cluster_id:String
  kind:String
  multi_az:Boolean
  region:String
}
type ClusterTargetResult {
  cloud_provider:String
  cluster_id:String
  kind:String
  multi_az:Boolean
  region:String
}
"Schema for the request to update a data plane cluster's status"
input ConnectorClusterInput {
  href:String
  id:String
  kind:String
  metadata:Mutation_CreateConnectorCluster_body_MetadataInput
  status:String
}
type ConnectorClusterListResult {
  items:[Query_ListConnectorClusters_DefaultResponse_ItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
"Schema for the request to update a data plane cluster's status"
type ConnectorClusterResult {
  href:String
  id:String
  kind:String
  metadata:Mutation_CreateConnectorCluster_DefaultResponse_MetadataResult
  status:String
}
"A connector holds the configuration to connect a Kafka topic to another system."
input ConnectorInput {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetInput
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsInput
  kind:String
  metadata:Mutation_CreateConnector_body_MetadataInput
  status:String
}
type ConnectorListResult {
  items:[Query_ListConnectors_DefaultResponse_ItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
"A connector holds the configuration to connect a Kafka topic to another system."
type ConnectorResult {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetResult
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsResult
  kind:String
  metadata:Mutation_CreateConnector_DefaultResponse_MetadataResult
  status:String
}
type ConnectorTypeListResult {
  items:[Query_ListConnectorTypes_DefaultResponse_ItemsResult]
  kind:String
  page:Int
  size:Int
  total:Int
}
"Represents a connector type supported by the API"
type ConnectorTypeResult {
  "Version of the connector type."
  channels:[String]
  "A description of the connector."
  description:String
  href:String
  "URL to an icon of the connector."
  icon_href:String
  id:String
  "A json schema that can be used to validate a connectors connector_spec field."
  json_schema:JSON
  kind:String
  "labels used to categorize the connector"
  labels:[String]
  "Name of the connector type."
  name:String
  "Version of the connector type."
  version:String
}
type ErrorResult {
  code:String
  href:String
  id:String
  kind:String
  operation_id:String
  reason:String
}
"a JSON encoded object"
scalar JSON
input KafkaConnectionSettingsInput {
  bootstrap_server:String
  client_id:String
  client_secret:String
}
type KafkaConnectionSettingsResult {
  bootstrap_server:String
  client_id:String
  client_secret:String
}
type Mutation {
  "**endpoint:** `POST /api/connector_mgmt/v1/kafka_connectors`"
  createConnector(body:ConnectorInput!,   
    "Perform the action in an asynchronous manner"
    async:Boolean!
  ):ConnectorResult
  "**endpoint:** `POST /api/connector_mgmt/v1/kafka_connector_clusters`"
  createConnectorCluster(body:ConnectorClusterInput!,   
    "Perform the action in an asynchronous manner"
    async:Boolean!
  ):ConnectorClusterResult
  "**endpoint:** `DELETE /api/connector_mgmt/v1/kafka_connectors/{id}`"
  deleteConnector(id:String!):ErrorResult
  "**endpoint:** `DELETE /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}`"
  deleteConnectorCluster(connector_cluster_id:String!):ErrorResult
  "**endpoint:** `PATCH /api/connector_mgmt/v1/kafka_connectors/{id}`"
  patchConnector(id:String!):ConnectorResult
}
type Mutation_CreateConnectorCluster_DefaultResponse_MetadataResult {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
input Mutation_CreateConnectorCluster_body_MetadataInput {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
type Mutation_CreateConnector_DefaultResponse_MetadataResult {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
input Mutation_CreateConnector_body_MetadataInput {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
type Query {
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connectors/{id}`"
  getConnector(id:String!):ConnectorResult
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}`"
  getConnectorCluster(connector_cluster_id:String!):ConnectorClusterResult
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/addon_parameters`"
  getConnectorClusterAddonParameters(connector_cluster_id:String!):[Query_GetConnectorClusterAddonParameters_DefaultResponseResult]
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_types/{connector_type_id}`"
  getConnectorTypeByID(connector_type_id:String!):ConnectorTypeResult
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_clusters`"
  listConnectorClusters(  
    "Page index"
    page:String,   
    "Number of items in each page"
    size:String
  ):ConnectorClusterListResult
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connector_types`"
  listConnectorTypes(  
    "Page index"
    page:String,   
    "Number of items in each page"
    size:String
  ):ConnectorTypeListResult
  "**endpoint:** `GET /api/connector_mgmt/v1/kafka_connectors`"
  listConnectors(  
    "Page index"
    page:String,   
    "Number of items in each page"
    size:String,   
    "The kafka cluster id"
    kafka_id:String
  ):ConnectorListResult
}
type Query_GetConnectorClusterAddonParameters_DefaultResponseResult {
  id:String
  value:String
}
type Query_ListConnectorClusters_DefaultResponse_ItemsResult {
  href:String
  id:String
  kind:String
  metadata:Query_ListConnectorClusters_DefaultResponse_Items_MetadataResult
  status:String
}
type Query_ListConnectorClusters_DefaultResponse_Items_MetadataResult {
  created_at:String
  name:String
  owner:String
  updated_at:String
}
type Query_ListConnectorTypes_DefaultResponse_ItemsResult {
  "Version of the connector type."
  channels:[String]
  "A description of the connector."
  description:String
  href:String
  "URL to an icon of the connector."
  icon_href:String
  id:String
  "A json schema that can be used to validate a connectors connector_spec field."
  json_schema:JSON
  kind:String
  "labels used to categorize the connector"
  labels:[String]
  "Name of the connector type."
  name:String
  "Version of the connector type."
  version:String
}
type Query_ListConnectors_DefaultResponse_ItemsResult {
  channel:String
  connector_spec:JSON
  connector_type_id:String
  deployment_location:ClusterTargetResult
  desired_state:String
  href:String
  id:String
  kafka:KafkaConnectionSettingsResult
  kind:String
  metadata:Query_ListConnectors_DefaultResponse_Items_MetadataResult
  status:String
}
type Query_ListConnectors_DefaultResponse_Items_MetadataResult {
  created_at:String
  kafka_id:String
  name:String
  owner:String
  resource_version:Int
  updated_at:String
}
schema {
  mutation: Mutation
  query: Query
}
