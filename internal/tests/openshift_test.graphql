type Mutation {
  """
    connect POST requests to instantiatebinary of BuildConfig
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}/instantiatebinary`
    """
  connectBuildOpenshiftIoV1PostNamespacedBuildConfigInstantiatebinary(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    connect POST requests to webhooks of BuildConfig
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks`
    """
  connectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooks(namespace:String!, name:String!):String
  """
    connect POST requests to webhooks of BuildConfig
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks/{path}`
    """
  connectBuildOpenshiftIoV1PostNamespacedBuildConfigWebhooksWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect DELETE requests to proxy of Pod
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1DeleteNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect DELETE requests to proxy of Pod
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1DeleteNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect DELETE requests to proxy of Service
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1DeleteNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect DELETE requests to proxy of Service
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1DeleteNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect DELETE requests to proxy of Node
    
    **endpoint:** `DELETE /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1DeleteNodeProxy(name:String!):String
  """
    connect DELETE requests to proxy of Node
    
    **endpoint:** `DELETE /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1DeleteNodeProxyWithPath(name:String!, path:String!):String
  """
    connect OPTIONS requests to proxy of Pod
    
    **endpoint:** `OPTIONS /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1OptionsNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect OPTIONS requests to proxy of Pod
    
    **endpoint:** `OPTIONS /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1OptionsNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect OPTIONS requests to proxy of Service
    
    **endpoint:** `OPTIONS /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1OptionsNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect OPTIONS requests to proxy of Service
    
    **endpoint:** `OPTIONS /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1OptionsNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect OPTIONS requests to proxy of Node
    
    **endpoint:** `OPTIONS /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1OptionsNodeProxy(name:String!):String
  """
    connect OPTIONS requests to proxy of Node
    
    **endpoint:** `OPTIONS /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1OptionsNodeProxyWithPath(name:String!, path:String!):String
  """
    connect PATCH requests to proxy of Pod
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1PatchNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect PATCH requests to proxy of Pod
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1PatchNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect PATCH requests to proxy of Service
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1PatchNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect PATCH requests to proxy of Service
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1PatchNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect PATCH requests to proxy of Node
    
    **endpoint:** `PATCH /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1PatchNodeProxy(name:String!):String
  """
    connect PATCH requests to proxy of Node
    
    **endpoint:** `PATCH /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1PatchNodeProxyWithPath(name:String!, path:String!):String
  """
    connect POST requests to attach of Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/attach`
    """
  connectCoreV1PostNamespacedPodAttach(namespace:String!, name:String!):String
  """
    connect POST requests to exec of Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/exec`
    """
  connectCoreV1PostNamespacedPodExec(namespace:String!, name:String!):String
  """
    connect POST requests to portforward of Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/portforward`
    """
  connectCoreV1PostNamespacedPodPortforward(namespace:String!, name:String!):String
  """
    connect POST requests to proxy of Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1PostNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect POST requests to proxy of Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1PostNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect POST requests to proxy of Service
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1PostNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect POST requests to proxy of Service
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1PostNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect POST requests to proxy of Node
    
    **endpoint:** `POST /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1PostNodeProxy(name:String!):String
  """
    connect POST requests to proxy of Node
    
    **endpoint:** `POST /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1PostNodeProxyWithPath(name:String!, path:String!):String
  """
    connect PUT requests to proxy of Pod
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1PutNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect PUT requests to proxy of Pod
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1PutNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect PUT requests to proxy of Service
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1PutNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect PUT requests to proxy of Service
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1PutNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect PUT requests to proxy of Node
    
    **endpoint:** `PUT /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1PutNodeProxy(name:String!):String
  """
    connect PUT requests to proxy of Node
    
    **endpoint:** `PUT /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1PutNodeProxyWithPath(name:String!, path:String!):String
  """
    connect POST requests to instantiatebinary of BuildConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/buildconfigs/{name}/instantiatebinary`
    """
  connectPostNamespacedBuildConfigInstantiatebinary(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    connect POST requests to webhooks of BuildConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks`
    """
  connectPostNamespacedBuildConfigWebhooks(namespace:String!, name:String!):String
  """
    connect POST requests to webhooks of BuildConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks/{path}`
    """
  connectPostNamespacedBuildConfigWebhooksWithPath(namespace:String!, name:String!, path:String!):String
  """
    create a MutatingWebhookConfiguration
    
    **endpoint:** `POST /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations`
    """
  createAdmissionregistrationV1beta1MutatingWebhookConfiguration(body:io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput!):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  """
    create a ValidatingWebhookConfiguration
    
    **endpoint:** `POST /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations`
    """
  createAdmissionregistrationV1beta1ValidatingWebhookConfiguration(body:io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput!):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  """
    create an APIService
    
    **endpoint:** `POST /apis/apiregistration.k8s.io/v1/apiservices`
    """
  createApiregistrationV1APIService(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    create an APIService
    
    **endpoint:** `POST /apis/apiregistration.k8s.io/v1beta1/apiservices`
    """
  createApiregistrationV1beta1APIService(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    create a DeploymentConfig
    
    **endpoint:** `POST /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs`
    """
  createAppsOpenshiftIoV1NamespacedDeploymentConfig(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    create instantiate of a DeploymentConfig
    
    **endpoint:** `POST /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/instantiate`
    """
  createAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiate(body:com_github_openshift_api_apps_v1_DeploymentRequestInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentRequestResult
  """
    create rollback of a DeploymentConfig
    
    **endpoint:** `POST /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/rollback`
    """
  createAppsOpenshiftIoV1NamespacedDeploymentConfigRollback(body:com_github_openshift_api_apps_v1_DeploymentConfigRollbackInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigRollbackResult
  """
    create a ControllerRevision
    
    **endpoint:** `POST /apis/apps/v1/namespaces/{namespace}/controllerrevisions`
    """
  createAppsV1NamespacedControllerRevision(body:io_k8s_api_apps_v1_ControllerRevisionInput!, namespace:String!):io_k8s_api_apps_v1_ControllerRevisionResult
  """
    create a DaemonSet
    
    **endpoint:** `POST /apis/apps/v1/namespaces/{namespace}/daemonsets`
    """
  createAppsV1NamespacedDaemonSet(body:io_k8s_api_apps_v1_DaemonSetInput!, namespace:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    create a Deployment
    
    **endpoint:** `POST /apis/apps/v1/namespaces/{namespace}/deployments`
    """
  createAppsV1NamespacedDeployment(body:io_k8s_api_apps_v1_DeploymentInput!, namespace:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    create a ReplicaSet
    
    **endpoint:** `POST /apis/apps/v1/namespaces/{namespace}/replicasets`
    """
  createAppsV1NamespacedReplicaSet(body:io_k8s_api_apps_v1_ReplicaSetInput!, namespace:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    create a StatefulSet
    
    **endpoint:** `POST /apis/apps/v1/namespaces/{namespace}/statefulsets`
    """
  createAppsV1NamespacedStatefulSet(body:io_k8s_api_apps_v1_StatefulSetInput!, namespace:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    create a ControllerRevision
    
    **endpoint:** `POST /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions`
    """
  createAppsV1beta1NamespacedControllerRevision(body:io_k8s_api_apps_v1beta1_ControllerRevisionInput!, namespace:String!):io_k8s_api_apps_v1beta1_ControllerRevisionResult
  """
    create a Deployment
    
    **endpoint:** `POST /apis/apps/v1beta1/namespaces/{namespace}/deployments`
    """
  createAppsV1beta1NamespacedDeployment(body:io_k8s_api_apps_v1beta1_DeploymentInput!, namespace:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    create rollback of a Deployment
    
    **endpoint:** `POST /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/rollback`
    """
  createAppsV1beta1NamespacedDeploymentRollback(body:io_k8s_api_apps_v1beta1_DeploymentRollbackInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentRollbackResult
  """
    create a StatefulSet
    
    **endpoint:** `POST /apis/apps/v1beta1/namespaces/{namespace}/statefulsets`
    """
  createAppsV1beta1NamespacedStatefulSet(body:io_k8s_api_apps_v1beta1_StatefulSetInput!, namespace:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    create a ControllerRevision
    
    **endpoint:** `POST /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions`
    """
  createAppsV1beta2NamespacedControllerRevision(body:io_k8s_api_apps_v1beta2_ControllerRevisionInput!, namespace:String!):io_k8s_api_apps_v1beta2_ControllerRevisionResult
  """
    create a DaemonSet
    
    **endpoint:** `POST /apis/apps/v1beta2/namespaces/{namespace}/daemonsets`
    """
  createAppsV1beta2NamespacedDaemonSet(body:io_k8s_api_apps_v1beta2_DaemonSetInput!, namespace:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    create a Deployment
    
    **endpoint:** `POST /apis/apps/v1beta2/namespaces/{namespace}/deployments`
    """
  createAppsV1beta2NamespacedDeployment(body:io_k8s_api_apps_v1beta2_DeploymentInput!, namespace:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    create a ReplicaSet
    
    **endpoint:** `POST /apis/apps/v1beta2/namespaces/{namespace}/replicasets`
    """
  createAppsV1beta2NamespacedReplicaSet(body:io_k8s_api_apps_v1beta2_ReplicaSetInput!, namespace:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    create a StatefulSet
    
    **endpoint:** `POST /apis/apps/v1beta2/namespaces/{namespace}/statefulsets`
    """
  createAppsV1beta2NamespacedStatefulSet(body:io_k8s_api_apps_v1beta2_StatefulSetInput!, namespace:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    create a TokenReview
    
    **endpoint:** `POST /apis/authentication.k8s.io/v1/tokenreviews`
    """
  createAuthenticationV1TokenReview(body:io_k8s_api_authentication_v1_TokenReviewInput!):io_k8s_api_authentication_v1_TokenReviewResult
  """
    create a TokenReview
    
    **endpoint:** `POST /apis/authentication.k8s.io/v1beta1/tokenreviews`
    """
  createAuthenticationV1beta1TokenReview(body:io_k8s_api_authentication_v1beta1_TokenReviewInput!):io_k8s_api_authentication_v1beta1_TokenReviewResult
  """
    create a ClusterRole
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/clusterroles`
    """
  createAuthorizationOpenshiftIoV1ClusterRole(body:com_github_openshift_api_authorization_v1_ClusterRoleInput!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    create a ClusterRoleBinding
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/clusterrolebindings`
    """
  createAuthorizationOpenshiftIoV1ClusterRoleBinding(body:com_github_openshift_api_authorization_v1_ClusterRoleBindingInput!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    create a LocalResourceAccessReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/localresourceaccessreviews`
    """
  createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview(body:com_github_openshift_api_authorization_v1_LocalResourceAccessReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_LocalResourceAccessReviewResult
  """
    create a LocalSubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/localsubjectaccessreviews`
    """
  createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview(body:com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewResult
  """
    create a Role
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles`
    """
  createAuthorizationOpenshiftIoV1NamespacedRole(body:com_github_openshift_api_authorization_v1_RoleInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    create a RoleBinding
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings`
    """
  createAuthorizationOpenshiftIoV1NamespacedRoleBinding(body:com_github_openshift_api_authorization_v1_RoleBindingInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    create a RoleBindingRestriction
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(body:com_github_openshift_api_authorization_v1_RoleBindingRestrictionInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    create a SelfSubjectRulesReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/selfsubjectrulesreviews`
    """
  createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview(body:com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewResult
  """
    create a SubjectRulesReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/namespaces/{namespace}/subjectrulesreviews`
    """
  createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview(body:com_github_openshift_api_authorization_v1_SubjectRulesReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_SubjectRulesReviewResult
  """
    create a ResourceAccessReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/resourceaccessreviews`
    """
  createAuthorizationOpenshiftIoV1ResourceAccessReview(body:com_github_openshift_api_authorization_v1_ResourceAccessReviewInput!):com_github_openshift_api_authorization_v1_ResourceAccessReviewResult
  """
    create a SubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.openshift.io/v1/subjectaccessreviews`
    """
  createAuthorizationOpenshiftIoV1SubjectAccessReview(body:com_github_openshift_api_authorization_v1_SubjectAccessReviewInput!):com_github_openshift_api_authorization_v1_SubjectAccessReviewResult
  """
    create a LocalSubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews`
    """
  createAuthorizationV1NamespacedLocalSubjectAccessReview(body:io_k8s_api_authorization_v1_LocalSubjectAccessReviewInput!, namespace:String!):io_k8s_api_authorization_v1_LocalSubjectAccessReviewResult
  """
    create a SelfSubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1/selfsubjectaccessreviews`
    """
  createAuthorizationV1SelfSubjectAccessReview(body:io_k8s_api_authorization_v1_SelfSubjectAccessReviewInput!):io_k8s_api_authorization_v1_SelfSubjectAccessReviewResult
  """
    create a SelfSubjectRulesReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1/selfsubjectrulesreviews`
    """
  createAuthorizationV1SelfSubjectRulesReview(body:io_k8s_api_authorization_v1_SelfSubjectRulesReviewInput!):io_k8s_api_authorization_v1_SelfSubjectRulesReviewResult
  """
    create a SubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1/subjectaccessreviews`
    """
  createAuthorizationV1SubjectAccessReview(body:io_k8s_api_authorization_v1_SubjectAccessReviewInput!):io_k8s_api_authorization_v1_SubjectAccessReviewResult
  """
    create a LocalSubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews`
    """
  createAuthorizationV1beta1NamespacedLocalSubjectAccessReview(body:io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewInput!, namespace:String!):io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewResult
  """
    create a SelfSubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews`
    """
  createAuthorizationV1beta1SelfSubjectAccessReview(body:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewInput!):io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewResult
  """
    create a SelfSubjectRulesReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1beta1/selfsubjectrulesreviews`
    """
  createAuthorizationV1beta1SelfSubjectRulesReview(body:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewInput!):io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewResult
  """
    create a SubjectAccessReview
    
    **endpoint:** `POST /apis/authorization.k8s.io/v1beta1/subjectaccessreviews`
    """
  createAuthorizationV1beta1SubjectAccessReview(body:io_k8s_api_authorization_v1beta1_SubjectAccessReviewInput!):io_k8s_api_authorization_v1beta1_SubjectAccessReviewResult
  """
    create a HorizontalPodAutoscaler
    
    **endpoint:** `POST /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  createAutoscalingV1NamespacedHorizontalPodAutoscaler(body:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!, namespace:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    create a HorizontalPodAutoscaler
    
    **endpoint:** `POST /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  createAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(body:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!, namespace:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    create a Job
    
    **endpoint:** `POST /apis/batch/v1/namespaces/{namespace}/jobs`
    """
  createBatchV1NamespacedJob(body:io_k8s_api_batch_v1_JobInput!, namespace:String!):io_k8s_api_batch_v1_JobResult
  """
    create a CronJob
    
    **endpoint:** `POST /apis/batch/v1beta1/namespaces/{namespace}/cronjobs`
    """
  createBatchV1beta1NamespacedCronJob(body:io_k8s_api_batch_v1beta1_CronJobInput!, namespace:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    create a Build
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/builds`
    """
  createBuildOpenshiftIoV1NamespacedBuild(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!):com_github_openshift_api_build_v1_BuildResult
  """
    create clone of a Build
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}/clone`
    """
  createBuildOpenshiftIoV1NamespacedBuildClone(body:com_github_openshift_api_build_v1_BuildRequestInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildRequestResult
  """
    create a BuildConfig
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs`
    """
  createBuildOpenshiftIoV1NamespacedBuildConfig(body:com_github_openshift_api_build_v1_BuildConfigInput!, namespace:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    create instantiate of a BuildConfig
    
    **endpoint:** `POST /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}/instantiate`
    """
  createBuildOpenshiftIoV1NamespacedBuildConfigInstantiate(body:com_github_openshift_api_build_v1_BuildRequestInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    create a CertificateSigningRequest
    
    **endpoint:** `POST /apis/certificates.k8s.io/v1beta1/certificatesigningrequests`
    """
  createCertificatesV1beta1CertificateSigningRequest(body:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    create a ClusterNetwork
    
    **endpoint:** `POST /oapi/v1/clusternetworks`
    """
  createClusterNetwork(body:com_github_openshift_api_network_v1_ClusterNetworkInput!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    create a ClusterResourceQuota
    
    **endpoint:** `POST /oapi/v1/clusterresourcequotas`
    """
  createClusterResourceQuota(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    create a ClusterRole
    
    **endpoint:** `POST /oapi/v1/clusterroles`
    """
  createClusterRole(body:com_github_openshift_api_authorization_v1_ClusterRoleInput!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    create a ClusterRoleBinding
    
    **endpoint:** `POST /oapi/v1/clusterrolebindings`
    """
  createClusterRoleBinding(body:com_github_openshift_api_authorization_v1_ClusterRoleBindingInput!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    create a Namespace
    
    **endpoint:** `POST /api/v1/namespaces`
    """
  createCoreV1Namespace(body:io_k8s_api_core_v1_NamespaceInput!):io_k8s_api_core_v1_NamespaceResult
  """
    create a Binding
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/bindings`
    """
  createCoreV1NamespacedBinding(body:io_k8s_api_core_v1_BindingInput!, namespace:String!):io_k8s_api_core_v1_BindingResult
  """
    create a ConfigMap
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/configmaps`
    """
  createCoreV1NamespacedConfigMap(body:io_k8s_api_core_v1_ConfigMapInput!, namespace:String!):io_k8s_api_core_v1_ConfigMapResult
  """
    create Endpoints
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/endpoints`
    """
  createCoreV1NamespacedEndpoints(body:io_k8s_api_core_v1_EndpointsInput!, namespace:String!):io_k8s_api_core_v1_EndpointsResult
  """
    create an Event
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/events`
    """
  createCoreV1NamespacedEvent(body:io_k8s_api_core_v1_EventInput!, namespace:String!):io_k8s_api_core_v1_EventResult
  """
    create a LimitRange
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/limitranges`
    """
  createCoreV1NamespacedLimitRange(body:io_k8s_api_core_v1_LimitRangeInput!, namespace:String!):io_k8s_api_core_v1_LimitRangeResult
  """
    create a PersistentVolumeClaim
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/persistentvolumeclaims`
    """
  createCoreV1NamespacedPersistentVolumeClaim(body:io_k8s_api_core_v1_PersistentVolumeClaimInput!, namespace:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    create a Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods`
    """
  createCoreV1NamespacedPod(body:io_k8s_api_core_v1_PodInput!, namespace:String!):io_k8s_api_core_v1_PodResult
  """
    create binding of a Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/binding`
    """
  createCoreV1NamespacedPodBinding(body:io_k8s_api_core_v1_BindingInput!, namespace:String!, name:String!):io_k8s_api_core_v1_BindingResult
  """
    create eviction of a Pod
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/pods/{name}/eviction`
    """
  createCoreV1NamespacedPodEviction(body:io_k8s_api_policy_v1beta1_EvictionInput!, namespace:String!, name:String!):io_k8s_api_policy_v1beta1_EvictionResult
  """
    create a PodTemplate
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/podtemplates`
    """
  createCoreV1NamespacedPodTemplate(body:io_k8s_api_core_v1_PodTemplateInput!, namespace:String!):io_k8s_api_core_v1_PodTemplateResult
  """
    create a ReplicationController
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/replicationcontrollers`
    """
  createCoreV1NamespacedReplicationController(body:io_k8s_api_core_v1_ReplicationControllerInput!, namespace:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    create a ResourceQuota
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/resourcequotas`
    """
  createCoreV1NamespacedResourceQuota(body:io_k8s_api_core_v1_ResourceQuotaInput!, namespace:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    create a Secret
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/secrets`
    """
  createCoreV1NamespacedSecret(body:io_k8s_api_core_v1_SecretInput!, namespace:String!):io_k8s_api_core_v1_SecretResult
  """
    create a Service
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/services`
    """
  createCoreV1NamespacedService(body:io_k8s_api_core_v1_ServiceInput!, namespace:String!):io_k8s_api_core_v1_ServiceResult
  """
    create a ServiceAccount
    
    **endpoint:** `POST /api/v1/namespaces/{namespace}/serviceaccounts`
    """
  createCoreV1NamespacedServiceAccount(body:io_k8s_api_core_v1_ServiceAccountInput!, namespace:String!):io_k8s_api_core_v1_ServiceAccountResult
  """
    create a Node
    
    **endpoint:** `POST /api/v1/nodes`
    """
  createCoreV1Node(body:io_k8s_api_core_v1_NodeInput!):io_k8s_api_core_v1_NodeResult
  """
    create a PersistentVolume
    
    **endpoint:** `POST /api/v1/persistentvolumes`
    """
  createCoreV1PersistentVolume(body:io_k8s_api_core_v1_PersistentVolumeInput!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    create SecurityContextConstraints
    
    **endpoint:** `POST /api/v1/securitycontextconstraints`
    """
  createCoreV1SecurityContextConstraints(body:com_github_openshift_api_security_v1_SecurityContextConstraintsInput!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    create an Event
    
    **endpoint:** `POST /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events`
    """
  createEventsV1beta1NamespacedEvent(body:io_k8s_api_events_v1beta1_EventInput!, namespace:String!):io_k8s_api_events_v1beta1_EventResult
  """
    create a DaemonSet
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets`
    """
  createExtensionsV1beta1NamespacedDaemonSet(body:io_k8s_api_extensions_v1beta1_DaemonSetInput!, namespace:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    create a Deployment
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/deployments`
    """
  createExtensionsV1beta1NamespacedDeployment(body:io_k8s_api_extensions_v1beta1_DeploymentInput!, namespace:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    create rollback of a Deployment
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback`
    """
  createExtensionsV1beta1NamespacedDeploymentRollback(body:io_k8s_api_extensions_v1beta1_DeploymentRollbackInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentRollbackResult
  """
    create an Ingress
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/ingresses`
    """
  createExtensionsV1beta1NamespacedIngress(body:io_k8s_api_extensions_v1beta1_IngressInput!, namespace:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    create a NetworkPolicy
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies`
    """
  createExtensionsV1beta1NamespacedNetworkPolicy(body:io_k8s_api_extensions_v1beta1_NetworkPolicyInput!, namespace:String!):io_k8s_api_extensions_v1beta1_NetworkPolicyResult
  """
    create a ReplicaSet
    
    **endpoint:** `POST /apis/extensions/v1beta1/namespaces/{namespace}/replicasets`
    """
  createExtensionsV1beta1NamespacedReplicaSet(body:io_k8s_api_extensions_v1beta1_ReplicaSetInput!, namespace:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    create a PodSecurityPolicy
    
    **endpoint:** `POST /apis/extensions/v1beta1/podsecuritypolicies`
    """
  createExtensionsV1beta1PodSecurityPolicy(body:io_k8s_api_extensions_v1beta1_PodSecurityPolicyInput!):io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult
  """
    create a Group
    
    **endpoint:** `POST /oapi/v1/groups`
    """
  createGroup(body:com_github_openshift_api_user_v1_GroupInput!):com_github_openshift_api_user_v1_GroupResult
  """
    create a HostSubnet
    
    **endpoint:** `POST /oapi/v1/hostsubnets`
    """
  createHostSubnet(body:com_github_openshift_api_network_v1_HostSubnetInput!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    create an Identity
    
    **endpoint:** `POST /oapi/v1/identities`
    """
  createIdentity(body:com_github_openshift_api_user_v1_IdentityInput!):com_github_openshift_api_user_v1_IdentityResult
  """
    create an Image
    
    **endpoint:** `POST /oapi/v1/images`
    """
  createImage(body:com_github_openshift_api_image_v1_ImageInput!):com_github_openshift_api_image_v1_ImageResult
  """
    create an Image
    
    **endpoint:** `POST /apis/image.openshift.io/v1/images`
    """
  createImageOpenshiftIoV1Image(body:com_github_openshift_api_image_v1_ImageInput!):com_github_openshift_api_image_v1_ImageResult
  """
    create an ImageSignature
    
    **endpoint:** `POST /apis/image.openshift.io/v1/imagesignatures`
    """
  createImageOpenshiftIoV1ImageSignature(body:com_github_openshift_api_image_v1_ImageSignatureInput!):com_github_openshift_api_image_v1_ImageSignatureResult
  """
    create an ImageStream
    
    **endpoint:** `POST /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams`
    """
  createImageOpenshiftIoV1NamespacedImageStream(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    create an ImageStreamImport
    
    **endpoint:** `POST /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamimports`
    """
  createImageOpenshiftIoV1NamespacedImageStreamImport(body:com_github_openshift_api_image_v1_ImageStreamImportInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamImportResult
  """
    create an ImageStreamMapping
    
    **endpoint:** `POST /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreammappings`
    """
  createImageOpenshiftIoV1NamespacedImageStreamMapping(body:com_github_openshift_api_image_v1_ImageStreamMappingInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamMappingResult
  """
    create an ImageStreamTag
    
    **endpoint:** `POST /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags`
    """
  createImageOpenshiftIoV1NamespacedImageStreamTag(body:com_github_openshift_api_image_v1_ImageStreamTagInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    create an ImageSignature
    
    **endpoint:** `POST /oapi/v1/imagesignatures`
    """
  createImageSignature(body:com_github_openshift_api_image_v1_ImageSignatureInput!):com_github_openshift_api_image_v1_ImageSignatureResult
  """
    create a Build
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/builds`
    """
  createNamespacedBuild(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!):com_github_openshift_api_build_v1_BuildResult
  """
    create clone of a Build
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/builds/{name}/clone`
    """
  createNamespacedBuildClone(body:com_github_openshift_api_build_v1_BuildRequestInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildRequestResult
  """
    create a BuildConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/buildconfigs`
    """
  createNamespacedBuildConfig(body:com_github_openshift_api_build_v1_BuildConfigInput!, namespace:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    create instantiate of a BuildConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/buildconfigs/{name}/instantiate`
    """
  createNamespacedBuildConfigInstantiate(body:com_github_openshift_api_build_v1_BuildRequestInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    create a DeploymentConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/deploymentconfigs`
    """
  createNamespacedDeploymentConfig(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    create instantiate of a DeploymentConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/instantiate`
    """
  createNamespacedDeploymentConfigInstantiate(body:com_github_openshift_api_apps_v1_DeploymentRequestInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentRequestResult
  """
    create rollback of a DeploymentConfig
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/rollback`
    """
  createNamespacedDeploymentConfigRollback(body:com_github_openshift_api_apps_v1_DeploymentConfigRollbackInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigRollbackResult
  """
    create an EgressNetworkPolicy
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  createNamespacedEgressNetworkPolicy(body:com_github_openshift_api_network_v1_EgressNetworkPolicyInput!, namespace:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    create an ImageStream
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/imagestreams`
    """
  createNamespacedImageStream(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    create an ImageStreamImport
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/imagestreamimports`
    """
  createNamespacedImageStreamImport(body:com_github_openshift_api_image_v1_ImageStreamImportInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamImportResult
  """
    create an ImageStreamMapping
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/imagestreammappings`
    """
  createNamespacedImageStreamMapping(body:com_github_openshift_api_image_v1_ImageStreamMappingInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamMappingResult
  """
    create an ImageStreamTag
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/imagestreamtags`
    """
  createNamespacedImageStreamTag(body:com_github_openshift_api_image_v1_ImageStreamTagInput!, namespace:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    create a LocalResourceAccessReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/localresourceaccessreviews`
    """
  createNamespacedLocalResourceAccessReview(body:com_github_openshift_api_authorization_v1_LocalResourceAccessReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_LocalResourceAccessReviewResult
  """
    create a LocalSubjectAccessReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/localsubjectaccessreviews`
    """
  createNamespacedLocalSubjectAccessReview(body:com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewResult
  """
    create a PodSecurityPolicyReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/podsecuritypolicyreviews`
    """
  createNamespacedPodSecurityPolicyReview(body:com_github_openshift_api_security_v1_PodSecurityPolicyReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicyReviewResult
  """
    create a PodSecurityPolicySelfSubjectReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/podsecuritypolicyselfsubjectreviews`
    """
  createNamespacedPodSecurityPolicySelfSubjectReview(body:com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewResult
  """
    create a PodSecurityPolicySubjectReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/podsecuritypolicysubjectreviews`
    """
  createNamespacedPodSecurityPolicySubjectReview(body:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewResult
  """
    create a Template
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/processedtemplates`
    """
  createNamespacedProcessedTemplate(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    create a Template
    
    **endpoint:** `POST /apis/template.openshift.io/v1/namespaces/{namespace}/processedtemplates`
    """
  createNamespacedProcessedTemplateV1(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    create a Role
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/roles`
    """
  createNamespacedRole(body:com_github_openshift_api_authorization_v1_RoleInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    create a RoleBinding
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/rolebindings`
    """
  createNamespacedRoleBinding(body:com_github_openshift_api_authorization_v1_RoleBindingInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    create a RoleBindingRestriction
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  createNamespacedRoleBindingRestriction(body:com_github_openshift_api_authorization_v1_RoleBindingRestrictionInput!, namespace:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    create a Route
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/routes`
    """
  createNamespacedRoute(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!):com_github_openshift_api_route_v1_RouteResult
  """
    create a SelfSubjectRulesReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/selfsubjectrulesreviews`
    """
  createNamespacedSelfSubjectRulesReview(body:com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewResult
  """
    create a SubjectRulesReview
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/subjectrulesreviews`
    """
  createNamespacedSubjectRulesReview(body:com_github_openshift_api_authorization_v1_SubjectRulesReviewInput!, namespace:String!):com_github_openshift_api_authorization_v1_SubjectRulesReviewResult
  """
    create a Template
    
    **endpoint:** `POST /oapi/v1/namespaces/{namespace}/templates`
    """
  createNamespacedTemplate(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    create a NetNamespace
    
    **endpoint:** `POST /oapi/v1/netnamespaces`
    """
  createNetNamespace(body:com_github_openshift_api_network_v1_NetNamespaceInput!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    create a ClusterNetwork
    
    **endpoint:** `POST /apis/network.openshift.io/v1/clusternetworks`
    """
  createNetworkOpenshiftIoV1ClusterNetwork(body:com_github_openshift_api_network_v1_ClusterNetworkInput!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    create a HostSubnet
    
    **endpoint:** `POST /apis/network.openshift.io/v1/hostsubnets`
    """
  createNetworkOpenshiftIoV1HostSubnet(body:com_github_openshift_api_network_v1_HostSubnetInput!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    create an EgressNetworkPolicy
    
    **endpoint:** `POST /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  createNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(body:com_github_openshift_api_network_v1_EgressNetworkPolicyInput!, namespace:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    create a NetNamespace
    
    **endpoint:** `POST /apis/network.openshift.io/v1/netnamespaces`
    """
  createNetworkOpenshiftIoV1NetNamespace(body:com_github_openshift_api_network_v1_NetNamespaceInput!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    create a NetworkPolicy
    
    **endpoint:** `POST /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`
    """
  createNetworkingV1NamespacedNetworkPolicy(body:io_k8s_api_networking_v1_NetworkPolicyInput!, namespace:String!):io_k8s_api_networking_v1_NetworkPolicyResult
  """
    create an OAuthAccessToken
    
    **endpoint:** `POST /oapi/v1/oauthaccesstokens`
    """
  createOAuthAccessToken(body:com_github_openshift_api_oauth_v1_OAuthAccessTokenInput!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    create an OAuthAuthorizeToken
    
    **endpoint:** `POST /oapi/v1/oauthauthorizetokens`
    """
  createOAuthAuthorizeToken(body:com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenInput!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    create an OAuthClient
    
    **endpoint:** `POST /oapi/v1/oauthclients`
    """
  createOAuthClient(body:com_github_openshift_api_oauth_v1_OAuthClientInput!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    create an OAuthClientAuthorization
    
    **endpoint:** `POST /oapi/v1/oauthclientauthorizations`
    """
  createOAuthClientAuthorization(body:com_github_openshift_api_oauth_v1_OAuthClientAuthorizationInput!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    create an OAuthAccessToken
    
    **endpoint:** `POST /apis/oauth.openshift.io/v1/oauthaccesstokens`
    """
  createOauthOpenshiftIoV1OAuthAccessToken(body:com_github_openshift_api_oauth_v1_OAuthAccessTokenInput!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    create an OAuthAuthorizeToken
    
    **endpoint:** `POST /apis/oauth.openshift.io/v1/oauthauthorizetokens`
    """
  createOauthOpenshiftIoV1OAuthAuthorizeToken(body:com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenInput!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    create an OAuthClient
    
    **endpoint:** `POST /apis/oauth.openshift.io/v1/oauthclients`
    """
  createOauthOpenshiftIoV1OAuthClient(body:com_github_openshift_api_oauth_v1_OAuthClientInput!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    create an OAuthClientAuthorization
    
    **endpoint:** `POST /apis/oauth.openshift.io/v1/oauthclientauthorizations`
    """
  createOauthOpenshiftIoV1OAuthClientAuthorization(body:com_github_openshift_api_oauth_v1_OAuthClientAuthorizationInput!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    create a PodDisruptionBudget
    
    **endpoint:** `POST /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets`
    """
  createPolicyV1beta1NamespacedPodDisruptionBudget(body:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!, namespace:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    create a PodSecurityPolicy
    
    **endpoint:** `POST /apis/policy/v1beta1/podsecuritypolicies`
    """
  createPolicyV1beta1PodSecurityPolicy(body:io_k8s_api_policy_v1beta1_PodSecurityPolicyInput!):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  """
    create a Project
    
    **endpoint:** `POST /oapi/v1/projects`
    """
  createProject(body:com_github_openshift_api_project_v1_ProjectInput!):com_github_openshift_api_project_v1_ProjectResult
  """
    create a Project
    
    **endpoint:** `POST /apis/project.openshift.io/v1/projects`
    """
  createProjectOpenshiftIoV1Project(body:com_github_openshift_api_project_v1_ProjectInput!):com_github_openshift_api_project_v1_ProjectResult
  """
    create a ProjectRequest
    
    **endpoint:** `POST /apis/project.openshift.io/v1/projectrequests`
    """
  createProjectOpenshiftIoV1ProjectRequest(body:com_github_openshift_api_project_v1_ProjectRequestInput!):com_github_openshift_api_project_v1_ProjectRequestResult
  """
    create a ProjectRequest
    
    **endpoint:** `POST /oapi/v1/projectrequests`
    """
  createProjectRequest(body:com_github_openshift_api_project_v1_ProjectRequestInput!):com_github_openshift_api_project_v1_ProjectRequestResult
  """
    create a ClusterResourceQuota
    
    **endpoint:** `POST /apis/quota.openshift.io/v1/clusterresourcequotas`
    """
  createQuotaOpenshiftIoV1ClusterResourceQuota(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    create a ClusterRole
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1/clusterroles`
    """
  createRbacAuthorizationV1ClusterRole(body:io_k8s_api_rbac_v1_ClusterRoleInput!):io_k8s_api_rbac_v1_ClusterRoleResult
  """
    create a ClusterRoleBinding
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1/clusterrolebindings`
    """
  createRbacAuthorizationV1ClusterRoleBinding(body:io_k8s_api_rbac_v1_ClusterRoleBindingInput!):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  """
    create a Role
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`
    """
  createRbacAuthorizationV1NamespacedRole(body:io_k8s_api_rbac_v1_RoleInput!, namespace:String!):io_k8s_api_rbac_v1_RoleResult
  """
    create a RoleBinding
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`
    """
  createRbacAuthorizationV1NamespacedRoleBinding(body:io_k8s_api_rbac_v1_RoleBindingInput!, namespace:String!):io_k8s_api_rbac_v1_RoleBindingResult
  """
    create a ClusterRole
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1beta1/clusterroles`
    """
  createRbacAuthorizationV1beta1ClusterRole(body:io_k8s_api_rbac_v1beta1_ClusterRoleInput!):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  """
    create a ClusterRoleBinding
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings`
    """
  createRbacAuthorizationV1beta1ClusterRoleBinding(body:io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput!):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  """
    create a Role
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles`
    """
  createRbacAuthorizationV1beta1NamespacedRole(body:io_k8s_api_rbac_v1beta1_RoleInput!, namespace:String!):io_k8s_api_rbac_v1beta1_RoleResult
  """
    create a RoleBinding
    
    **endpoint:** `POST /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings`
    """
  createRbacAuthorizationV1beta1NamespacedRoleBinding(body:io_k8s_api_rbac_v1beta1_RoleBindingInput!, namespace:String!):io_k8s_api_rbac_v1beta1_RoleBindingResult
  """
    create a ResourceAccessReview
    
    **endpoint:** `POST /oapi/v1/resourceaccessreviews`
    """
  createResourceAccessReview(body:com_github_openshift_api_authorization_v1_ResourceAccessReviewInput!):com_github_openshift_api_authorization_v1_ResourceAccessReviewResult
  """
    create a Route
    
    **endpoint:** `POST /apis/route.openshift.io/v1/namespaces/{namespace}/routes`
    """
  createRouteOpenshiftIoV1NamespacedRoute(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!):com_github_openshift_api_route_v1_RouteResult
  """
    create a PriorityClass
    
    **endpoint:** `POST /apis/scheduling.k8s.io/v1beta1/priorityclasses`
    """
  createSchedulingV1beta1PriorityClass(body:io_k8s_api_scheduling_v1beta1_PriorityClassInput!):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  """
    create a PodSecurityPolicyReview
    
    **endpoint:** `POST /apis/security.openshift.io/v1/namespaces/{namespace}/podsecuritypolicyreviews`
    """
  createSecurityOpenshiftIoV1NamespacedPodSecurityPolicyReview(body:com_github_openshift_api_security_v1_PodSecurityPolicyReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicyReviewResult
  """
    create a PodSecurityPolicySelfSubjectReview
    
    **endpoint:** `POST /apis/security.openshift.io/v1/namespaces/{namespace}/podsecuritypolicyselfsubjectreviews`
    """
  createSecurityOpenshiftIoV1NamespacedPodSecurityPolicySelfSubjectReview(body:com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewResult
  """
    create a PodSecurityPolicySubjectReview
    
    **endpoint:** `POST /apis/security.openshift.io/v1/namespaces/{namespace}/podsecuritypolicysubjectreviews`
    """
  createSecurityOpenshiftIoV1NamespacedPodSecurityPolicySubjectReview(body:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewInput!, namespace:String!):com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewResult
  """
    create a RangeAllocation
    
    **endpoint:** `POST /apis/security.openshift.io/v1/rangeallocations`
    """
  createSecurityOpenshiftIoV1RangeAllocation(body:com_github_openshift_api_security_v1_RangeAllocationInput!):com_github_openshift_api_security_v1_RangeAllocationResult
  """
    create SecurityContextConstraints
    
    **endpoint:** `POST /apis/security.openshift.io/v1/securitycontextconstraints`
    """
  createSecurityOpenshiftIoV1SecurityContextConstraints(body:com_github_openshift_api_security_v1_SecurityContextConstraintsInput!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    create a StorageClass
    
    **endpoint:** `POST /apis/storage.k8s.io/v1/storageclasses`
    """
  createStorageV1StorageClass(body:io_k8s_api_storage_v1_StorageClassInput!):io_k8s_api_storage_v1_StorageClassResult
  """
    create a StorageClass
    
    **endpoint:** `POST /apis/storage.k8s.io/v1beta1/storageclasses`
    """
  createStorageV1beta1StorageClass(body:io_k8s_api_storage_v1beta1_StorageClassInput!):io_k8s_api_storage_v1beta1_StorageClassResult
  """
    create a VolumeAttachment
    
    **endpoint:** `POST /apis/storage.k8s.io/v1beta1/volumeattachments`
    """
  createStorageV1beta1VolumeAttachment(body:io_k8s_api_storage_v1beta1_VolumeAttachmentInput!):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  """
    create a SubjectAccessReview
    
    **endpoint:** `POST /oapi/v1/subjectaccessreviews`
    """
  createSubjectAccessReview(body:com_github_openshift_api_authorization_v1_SubjectAccessReviewInput!):com_github_openshift_api_authorization_v1_SubjectAccessReviewResult
  """
    create a BrokerTemplateInstance
    
    **endpoint:** `POST /apis/template.openshift.io/v1/brokertemplateinstances`
    """
  createTemplateOpenshiftIoV1BrokerTemplateInstance(body:com_github_openshift_api_template_v1_BrokerTemplateInstanceInput!):com_github_openshift_api_template_v1_BrokerTemplateInstanceResult
  """
    create a Template
    
    **endpoint:** `POST /apis/template.openshift.io/v1/namespaces/{namespace}/templates`
    """
  createTemplateOpenshiftIoV1NamespacedTemplate(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    create a TemplateInstance
    
    **endpoint:** `POST /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances`
    """
  createTemplateOpenshiftIoV1NamespacedTemplateInstance(body:com_github_openshift_api_template_v1_TemplateInstanceInput!, namespace:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    create an User
    
    **endpoint:** `POST /oapi/v1/users`
    """
  createUser(body:com_github_openshift_api_user_v1_UserInput!):com_github_openshift_api_user_v1_UserResult
  """
    create an UserIdentityMapping
    
    **endpoint:** `POST /oapi/v1/useridentitymappings`
    """
  createUserIdentityMapping(body:com_github_openshift_api_user_v1_UserIdentityMappingInput!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    create a Group
    
    **endpoint:** `POST /apis/user.openshift.io/v1/groups`
    """
  createUserOpenshiftIoV1Group(body:com_github_openshift_api_user_v1_GroupInput!):com_github_openshift_api_user_v1_GroupResult
  """
    create an Identity
    
    **endpoint:** `POST /apis/user.openshift.io/v1/identities`
    """
  createUserOpenshiftIoV1Identity(body:com_github_openshift_api_user_v1_IdentityInput!):com_github_openshift_api_user_v1_IdentityResult
  """
    create an User
    
    **endpoint:** `POST /apis/user.openshift.io/v1/users`
    """
  createUserOpenshiftIoV1User(body:com_github_openshift_api_user_v1_UserInput!):com_github_openshift_api_user_v1_UserResult
  """
    create an UserIdentityMapping
    
    **endpoint:** `POST /apis/user.openshift.io/v1/useridentitymappings`
    """
  createUserOpenshiftIoV1UserIdentityMapping(body:com_github_openshift_api_user_v1_UserIdentityMappingInput!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    delete collection of MutatingWebhookConfiguration
    
    **endpoint:** `DELETE /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations`
    """
  deleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfiguration(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ValidatingWebhookConfiguration
    
    **endpoint:** `DELETE /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations`
    """
  deleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfiguration(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a MutatingWebhookConfiguration
    
    **endpoint:** `DELETE /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}`
    """
  deleteAdmissionregistrationV1beta1MutatingWebhookConfiguration(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ValidatingWebhookConfiguration
    
    **endpoint:** `DELETE /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}`
    """
  deleteAdmissionregistrationV1beta1ValidatingWebhookConfiguration(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an APIService
    
    **endpoint:** `DELETE /apis/apiregistration.k8s.io/v1/apiservices/{name}`
    """
  deleteApiregistrationV1APIService(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of APIService
    
    **endpoint:** `DELETE /apis/apiregistration.k8s.io/v1/apiservices`
    """
  deleteApiregistrationV1CollectionAPIService(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an APIService
    
    **endpoint:** `DELETE /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}`
    """
  deleteApiregistrationV1beta1APIService(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of APIService
    
    **endpoint:** `DELETE /apis/apiregistration.k8s.io/v1beta1/apiservices`
    """
  deleteApiregistrationV1beta1CollectionAPIService(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of DeploymentConfig
    
    **endpoint:** `DELETE /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs`
    """
  deleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a DeploymentConfig
    
    **endpoint:** `DELETE /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  deleteAppsOpenshiftIoV1NamespacedDeploymentConfig(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/controllerrevisions`
    """
  deleteAppsV1CollectionNamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of DaemonSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/daemonsets`
    """
  deleteAppsV1CollectionNamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Deployment
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/deployments`
    """
  deleteAppsV1CollectionNamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ReplicaSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/replicasets`
    """
  deleteAppsV1CollectionNamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/statefulsets`
    """
  deleteAppsV1CollectionNamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  deleteAppsV1NamespacedControllerRevision(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a DaemonSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`
    """
  deleteAppsV1NamespacedDaemonSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Deployment
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/deployments/{name}`
    """
  deleteAppsV1NamespacedDeployment(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ReplicaSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/replicasets/{name}`
    """
  deleteAppsV1NamespacedReplicaSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`
    """
  deleteAppsV1NamespacedStatefulSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions`
    """
  deleteAppsV1beta1CollectionNamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Deployment
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/deployments`
    """
  deleteAppsV1beta1CollectionNamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/statefulsets`
    """
  deleteAppsV1beta1CollectionNamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  deleteAppsV1beta1NamespacedControllerRevision(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Deployment
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  deleteAppsV1beta1NamespacedDeployment(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}`
    """
  deleteAppsV1beta1NamespacedStatefulSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions`
    """
  deleteAppsV1beta2CollectionNamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of DaemonSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/daemonsets`
    """
  deleteAppsV1beta2CollectionNamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Deployment
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/deployments`
    """
  deleteAppsV1beta2CollectionNamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ReplicaSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/replicasets`
    """
  deleteAppsV1beta2CollectionNamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/statefulsets`
    """
  deleteAppsV1beta2CollectionNamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ControllerRevision
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}`
    """
  deleteAppsV1beta2NamespacedControllerRevision(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a DaemonSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}`
    """
  deleteAppsV1beta2NamespacedDaemonSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Deployment
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}`
    """
  deleteAppsV1beta2NamespacedDeployment(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ReplicaSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}`
    """
  deleteAppsV1beta2NamespacedReplicaSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a StatefulSet
    
    **endpoint:** `DELETE /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}`
    """
  deleteAppsV1beta2NamespacedStatefulSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRole
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/clusterroles/{name}`
    """
  deleteAuthorizationOpenshiftIoV1ClusterRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRoleBinding
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/clusterrolebindings/{name}`
    """
  deleteAuthorizationOpenshiftIoV1ClusterRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of RoleBindingRestriction
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Role
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles/{name}`
    """
  deleteAuthorizationOpenshiftIoV1NamespacedRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBinding
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBindingRestriction
    
    **endpoint:** `DELETE /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of HorizontalPodAutoscaler
    
    **endpoint:** `DELETE /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a HorizontalPodAutoscaler
    
    **endpoint:** `DELETE /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  deleteAutoscalingV1NamespacedHorizontalPodAutoscaler(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of HorizontalPodAutoscaler
    
    **endpoint:** `DELETE /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a HorizontalPodAutoscaler
    
    **endpoint:** `DELETE /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  deleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Job
    
    **endpoint:** `DELETE /apis/batch/v1/namespaces/{namespace}/jobs`
    """
  deleteBatchV1CollectionNamespacedJob(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Job
    
    **endpoint:** `DELETE /apis/batch/v1/namespaces/{namespace}/jobs/{name}`
    """
  deleteBatchV1NamespacedJob(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of CronJob
    
    **endpoint:** `DELETE /apis/batch/v1beta1/namespaces/{namespace}/cronjobs`
    """
  deleteBatchV1beta1CollectionNamespacedCronJob(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a CronJob
    
    **endpoint:** `DELETE /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}`
    """
  deleteBatchV1beta1NamespacedCronJob(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Build
    
    **endpoint:** `DELETE /apis/build.openshift.io/v1/namespaces/{namespace}/builds`
    """
  deleteBuildOpenshiftIoV1CollectionNamespacedBuild(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of BuildConfig
    
    **endpoint:** `DELETE /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs`
    """
  deleteBuildOpenshiftIoV1CollectionNamespacedBuildConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Build
    
    **endpoint:** `DELETE /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}`
    """
  deleteBuildOpenshiftIoV1NamespacedBuild(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a BuildConfig
    
    **endpoint:** `DELETE /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  deleteBuildOpenshiftIoV1NamespacedBuildConfig(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a CertificateSigningRequest
    
    **endpoint:** `DELETE /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}`
    """
  deleteCertificatesV1beta1CertificateSigningRequest(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of CertificateSigningRequest
    
    **endpoint:** `DELETE /apis/certificates.k8s.io/v1beta1/certificatesigningrequests`
    """
  deleteCertificatesV1beta1CollectionCertificateSigningRequest(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterNetwork
    
    **endpoint:** `DELETE /oapi/v1/clusternetworks/{name}`
    """
  deleteClusterNetwork(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterResourceQuota
    
    **endpoint:** `DELETE /oapi/v1/clusterresourcequotas/{name}`
    """
  deleteClusterResourceQuota(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRole
    
    **endpoint:** `DELETE /oapi/v1/clusterroles/{name}`
    """
  deleteClusterRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRoleBinding
    
    **endpoint:** `DELETE /oapi/v1/clusterrolebindings/{name}`
    """
  deleteClusterRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterNetwork
    
    **endpoint:** `DELETE /oapi/v1/clusternetworks`
    """
  deleteCollectionClusterNetwork(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterResourceQuota
    
    **endpoint:** `DELETE /oapi/v1/clusterresourcequotas`
    """
  deleteCollectionClusterResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Group
    
    **endpoint:** `DELETE /oapi/v1/groups`
    """
  deleteCollectionGroup(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of HostSubnet
    
    **endpoint:** `DELETE /oapi/v1/hostsubnets`
    """
  deleteCollectionHostSubnet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Identity
    
    **endpoint:** `DELETE /oapi/v1/identities`
    """
  deleteCollectionIdentity(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Image
    
    **endpoint:** `DELETE /oapi/v1/images`
    """
  deleteCollectionImage(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Build
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/builds`
    """
  deleteCollectionNamespacedBuild(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of BuildConfig
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/buildconfigs`
    """
  deleteCollectionNamespacedBuildConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of DeploymentConfig
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/deploymentconfigs`
    """
  deleteCollectionNamespacedDeploymentConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of EgressNetworkPolicy
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  deleteCollectionNamespacedEgressNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ImageStream
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/imagestreams`
    """
  deleteCollectionNamespacedImageStream(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of RoleBindingRestriction
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  deleteCollectionNamespacedRoleBindingRestriction(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Route
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/routes`
    """
  deleteCollectionNamespacedRoute(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Template
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/templates`
    """
  deleteCollectionNamespacedTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of NetNamespace
    
    **endpoint:** `DELETE /oapi/v1/netnamespaces`
    """
  deleteCollectionNetNamespace(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthAccessToken
    
    **endpoint:** `DELETE /oapi/v1/oauthaccesstokens`
    """
  deleteCollectionOAuthAccessToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthAuthorizeToken
    
    **endpoint:** `DELETE /oapi/v1/oauthauthorizetokens`
    """
  deleteCollectionOAuthAuthorizeToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthClient
    
    **endpoint:** `DELETE /oapi/v1/oauthclients`
    """
  deleteCollectionOAuthClient(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthClientAuthorization
    
    **endpoint:** `DELETE /oapi/v1/oauthclientauthorizations`
    """
  deleteCollectionOAuthClientAuthorization(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of User
    
    **endpoint:** `DELETE /oapi/v1/users`
    """
  deleteCollectionUser(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ConfigMap
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/configmaps`
    """
  deleteCoreV1CollectionNamespacedConfigMap(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Endpoints
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/endpoints`
    """
  deleteCoreV1CollectionNamespacedEndpoints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Event
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/events`
    """
  deleteCoreV1CollectionNamespacedEvent(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of LimitRange
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/limitranges`
    """
  deleteCoreV1CollectionNamespacedLimitRange(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PersistentVolumeClaim
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/persistentvolumeclaims`
    """
  deleteCoreV1CollectionNamespacedPersistentVolumeClaim(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Pod
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/pods`
    """
  deleteCoreV1CollectionNamespacedPod(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PodTemplate
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/podtemplates`
    """
  deleteCoreV1CollectionNamespacedPodTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ReplicationController
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/replicationcontrollers`
    """
  deleteCoreV1CollectionNamespacedReplicationController(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ResourceQuota
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/resourcequotas`
    """
  deleteCoreV1CollectionNamespacedResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Secret
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/secrets`
    """
  deleteCoreV1CollectionNamespacedSecret(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ServiceAccount
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/serviceaccounts`
    """
  deleteCoreV1CollectionNamespacedServiceAccount(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Node
    
    **endpoint:** `DELETE /api/v1/nodes`
    """
  deleteCoreV1CollectionNode(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PersistentVolume
    
    **endpoint:** `DELETE /api/v1/persistentvolumes`
    """
  deleteCoreV1CollectionPersistentVolume(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of SecurityContextConstraints
    
    **endpoint:** `DELETE /api/v1/securitycontextconstraints`
    """
  deleteCoreV1CollectionSecurityContextConstraints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Namespace
    
    **endpoint:** `DELETE /api/v1/namespaces/{name}`
    """
  deleteCoreV1Namespace(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ConfigMap
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/configmaps/{name}`
    """
  deleteCoreV1NamespacedConfigMap(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete Endpoints
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/endpoints/{name}`
    """
  deleteCoreV1NamespacedEndpoints(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Event
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/events/{name}`
    """
  deleteCoreV1NamespacedEvent(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a LimitRange
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/limitranges/{name}`
    """
  deleteCoreV1NamespacedLimitRange(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PersistentVolumeClaim
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`
    """
  deleteCoreV1NamespacedPersistentVolumeClaim(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Pod
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/pods/{name}`
    """
  deleteCoreV1NamespacedPod(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PodTemplate
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/podtemplates/{name}`
    """
  deleteCoreV1NamespacedPodTemplate(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ReplicationController
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/replicationcontrollers/{name}`
    """
  deleteCoreV1NamespacedReplicationController(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ResourceQuota
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/resourcequotas/{name}`
    """
  deleteCoreV1NamespacedResourceQuota(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Secret
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/secrets/{name}`
    """
  deleteCoreV1NamespacedSecret(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Service
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/services/{name}`
    """
  deleteCoreV1NamespacedService(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ServiceAccount
    
    **endpoint:** `DELETE /api/v1/namespaces/{namespace}/serviceaccounts/{name}`
    """
  deleteCoreV1NamespacedServiceAccount(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Node
    
    **endpoint:** `DELETE /api/v1/nodes/{name}`
    """
  deleteCoreV1Node(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PersistentVolume
    
    **endpoint:** `DELETE /api/v1/persistentvolumes/{name}`
    """
  deleteCoreV1PersistentVolume(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete SecurityContextConstraints
    
    **endpoint:** `DELETE /api/v1/securitycontextconstraints/{name}`
    """
  deleteCoreV1SecurityContextConstraints(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Event
    
    **endpoint:** `DELETE /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events`
    """
  deleteEventsV1beta1CollectionNamespacedEvent(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Event
    
    **endpoint:** `DELETE /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events/{name}`
    """
  deleteEventsV1beta1NamespacedEvent(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of DaemonSet
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets`
    """
  deleteExtensionsV1beta1CollectionNamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Deployment
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/deployments`
    """
  deleteExtensionsV1beta1CollectionNamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Ingress
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/ingresses`
    """
  deleteExtensionsV1beta1CollectionNamespacedIngress(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of NetworkPolicy
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies`
    """
  deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ReplicaSet
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/replicasets`
    """
  deleteExtensionsV1beta1CollectionNamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PodSecurityPolicy
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/podsecuritypolicies`
    """
  deleteExtensionsV1beta1CollectionPodSecurityPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a DaemonSet
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}`
    """
  deleteExtensionsV1beta1NamespacedDaemonSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Deployment
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  deleteExtensionsV1beta1NamespacedDeployment(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Ingress
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}`
    """
  deleteExtensionsV1beta1NamespacedIngress(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a NetworkPolicy
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}`
    """
  deleteExtensionsV1beta1NamespacedNetworkPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ReplicaSet
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}`
    """
  deleteExtensionsV1beta1NamespacedReplicaSet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PodSecurityPolicy
    
    **endpoint:** `DELETE /apis/extensions/v1beta1/podsecuritypolicies/{name}`
    """
  deleteExtensionsV1beta1PodSecurityPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Group
    
    **endpoint:** `DELETE /oapi/v1/groups/{name}`
    """
  deleteGroup(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a HostSubnet
    
    **endpoint:** `DELETE /oapi/v1/hostsubnets/{name}`
    """
  deleteHostSubnet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Identity
    
    **endpoint:** `DELETE /oapi/v1/identities/{name}`
    """
  deleteIdentity(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Image
    
    **endpoint:** `DELETE /oapi/v1/images/{name}`
    """
  deleteImage(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Image
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/images`
    """
  deleteImageOpenshiftIoV1CollectionImage(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ImageStream
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams`
    """
  deleteImageOpenshiftIoV1CollectionNamespacedImageStream(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Image
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/images/{name}`
    """
  deleteImageOpenshiftIoV1Image(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageSignature
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/imagesignatures/{name}`
    """
  deleteImageOpenshiftIoV1ImageSignature(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageStream
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  deleteImageOpenshiftIoV1NamespacedImageStream(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageStreamTag
    
    **endpoint:** `DELETE /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  deleteImageOpenshiftIoV1NamespacedImageStreamTag(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageSignature
    
    **endpoint:** `DELETE /oapi/v1/imagesignatures/{name}`
    """
  deleteImageSignature(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Build
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/builds/{name}`
    """
  deleteNamespacedBuild(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a BuildConfig
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  deleteNamespacedBuildConfig(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a DeploymentConfig
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  deleteNamespacedDeploymentConfig(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an EgressNetworkPolicy
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  deleteNamespacedEgressNetworkPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageStream
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  deleteNamespacedImageStream(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an ImageStreamTag
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  deleteNamespacedImageStreamTag(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Role
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/roles/{name}`
    """
  deleteNamespacedRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBinding
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  deleteNamespacedRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBindingRestriction
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  deleteNamespacedRoleBindingRestriction(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Route
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/routes/{name}`
    """
  deleteNamespacedRoute(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Template
    
    **endpoint:** `DELETE /oapi/v1/namespaces/{namespace}/templates/{name}`
    """
  deleteNamespacedTemplate(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a NetNamespace
    
    **endpoint:** `DELETE /oapi/v1/netnamespaces/{name}`
    """
  deleteNetNamespace(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterNetwork
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/clusternetworks/{name}`
    """
  deleteNetworkOpenshiftIoV1ClusterNetwork(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterNetwork
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/clusternetworks`
    """
  deleteNetworkOpenshiftIoV1CollectionClusterNetwork(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of HostSubnet
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/hostsubnets`
    """
  deleteNetworkOpenshiftIoV1CollectionHostSubnet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of EgressNetworkPolicy
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  deleteNetworkOpenshiftIoV1CollectionNamespacedEgressNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of NetNamespace
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/netnamespaces`
    """
  deleteNetworkOpenshiftIoV1CollectionNetNamespace(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a HostSubnet
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/hostsubnets/{name}`
    """
  deleteNetworkOpenshiftIoV1HostSubnet(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an EgressNetworkPolicy
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  deleteNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a NetNamespace
    
    **endpoint:** `DELETE /apis/network.openshift.io/v1/netnamespaces/{name}`
    """
  deleteNetworkOpenshiftIoV1NetNamespace(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of NetworkPolicy
    
    **endpoint:** `DELETE /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`
    """
  deleteNetworkingV1CollectionNamespacedNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a NetworkPolicy
    
    **endpoint:** `DELETE /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`
    """
  deleteNetworkingV1NamespacedNetworkPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthAccessToken
    
    **endpoint:** `DELETE /oapi/v1/oauthaccesstokens/{name}`
    """
  deleteOAuthAccessToken(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthAuthorizeToken
    
    **endpoint:** `DELETE /oapi/v1/oauthauthorizetokens/{name}`
    """
  deleteOAuthAuthorizeToken(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthClient
    
    **endpoint:** `DELETE /oapi/v1/oauthclients/{name}`
    """
  deleteOAuthClient(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthClientAuthorization
    
    **endpoint:** `DELETE /oapi/v1/oauthclientauthorizations/{name}`
    """
  deleteOAuthClientAuthorization(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthAccessToken
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthaccesstokens`
    """
  deleteOauthOpenshiftIoV1CollectionOAuthAccessToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthAuthorizeToken
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthauthorizetokens`
    """
  deleteOauthOpenshiftIoV1CollectionOAuthAuthorizeToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthClient
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthclients`
    """
  deleteOauthOpenshiftIoV1CollectionOAuthClient(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of OAuthClientAuthorization
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthclientauthorizations`
    """
  deleteOauthOpenshiftIoV1CollectionOAuthClientAuthorization(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthAccessToken
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthaccesstokens/{name}`
    """
  deleteOauthOpenshiftIoV1OAuthAccessToken(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthAuthorizeToken
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthauthorizetokens/{name}`
    """
  deleteOauthOpenshiftIoV1OAuthAuthorizeToken(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthClient
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthclients/{name}`
    """
  deleteOauthOpenshiftIoV1OAuthClient(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an OAuthClientAuthorization
    
    **endpoint:** `DELETE /apis/oauth.openshift.io/v1/oauthclientauthorizations/{name}`
    """
  deleteOauthOpenshiftIoV1OAuthClientAuthorization(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PodDisruptionBudget
    
    **endpoint:** `DELETE /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets`
    """
  deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PodSecurityPolicy
    
    **endpoint:** `DELETE /apis/policy/v1beta1/podsecuritypolicies`
    """
  deletePolicyV1beta1CollectionPodSecurityPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PodDisruptionBudget
    
    **endpoint:** `DELETE /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}`
    """
  deletePolicyV1beta1NamespacedPodDisruptionBudget(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PodSecurityPolicy
    
    **endpoint:** `DELETE /apis/policy/v1beta1/podsecuritypolicies/{name}`
    """
  deletePolicyV1beta1PodSecurityPolicy(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Project
    
    **endpoint:** `DELETE /oapi/v1/projects/{name}`
    """
  deleteProject(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Project
    
    **endpoint:** `DELETE /apis/project.openshift.io/v1/projects/{name}`
    """
  deleteProjectOpenshiftIoV1Project(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterResourceQuota
    
    **endpoint:** `DELETE /apis/quota.openshift.io/v1/clusterresourcequotas/{name}`
    """
  deleteQuotaOpenshiftIoV1ClusterResourceQuota(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterResourceQuota
    
    **endpoint:** `DELETE /apis/quota.openshift.io/v1/clusterresourcequotas`
    """
  deleteQuotaOpenshiftIoV1CollectionClusterResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRole
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`
    """
  deleteRbacAuthorizationV1ClusterRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`
    """
  deleteRbacAuthorizationV1ClusterRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterRole
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/clusterroles`
    """
  deleteRbacAuthorizationV1CollectionClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterRoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/clusterrolebindings`
    """
  deleteRbacAuthorizationV1CollectionClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Role
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`
    """
  deleteRbacAuthorizationV1CollectionNamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of RoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`
    """
  deleteRbacAuthorizationV1CollectionNamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Role
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`
    """
  deleteRbacAuthorizationV1NamespacedRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  deleteRbacAuthorizationV1NamespacedRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRole
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/clusterroles/{name}`
    """
  deleteRbacAuthorizationV1beta1ClusterRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a ClusterRoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/{name}`
    """
  deleteRbacAuthorizationV1beta1ClusterRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterRole
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/clusterroles`
    """
  deleteRbacAuthorizationV1beta1CollectionClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of ClusterRoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings`
    """
  deleteRbacAuthorizationV1beta1CollectionClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Role
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles`
    """
  deleteRbacAuthorizationV1beta1CollectionNamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of RoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings`
    """
  deleteRbacAuthorizationV1beta1CollectionNamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Role
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles/{name}`
    """
  deleteRbacAuthorizationV1beta1NamespacedRole(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RoleBinding
    
    **endpoint:** `DELETE /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings/{name}`
    """
  deleteRbacAuthorizationV1beta1NamespacedRoleBinding(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Route
    
    **endpoint:** `DELETE /apis/route.openshift.io/v1/namespaces/{namespace}/routes`
    """
  deleteRouteOpenshiftIoV1CollectionNamespacedRoute(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Route
    
    **endpoint:** `DELETE /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}`
    """
  deleteRouteOpenshiftIoV1NamespacedRoute(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of PriorityClass
    
    **endpoint:** `DELETE /apis/scheduling.k8s.io/v1beta1/priorityclasses`
    """
  deleteSchedulingV1beta1CollectionPriorityClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a PriorityClass
    
    **endpoint:** `DELETE /apis/scheduling.k8s.io/v1beta1/priorityclasses/{name}`
    """
  deleteSchedulingV1beta1PriorityClass(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of RangeAllocation
    
    **endpoint:** `DELETE /apis/security.openshift.io/v1/rangeallocations`
    """
  deleteSecurityOpenshiftIoV1CollectionRangeAllocation(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of SecurityContextConstraints
    
    **endpoint:** `DELETE /apis/security.openshift.io/v1/securitycontextconstraints`
    """
  deleteSecurityOpenshiftIoV1CollectionSecurityContextConstraints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a RangeAllocation
    
    **endpoint:** `DELETE /apis/security.openshift.io/v1/rangeallocations/{name}`
    """
  deleteSecurityOpenshiftIoV1RangeAllocation(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete SecurityContextConstraints
    
    **endpoint:** `DELETE /apis/security.openshift.io/v1/securitycontextconstraints/{name}`
    """
  deleteSecurityOpenshiftIoV1SecurityContextConstraints(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of StorageClass
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1/storageclasses`
    """
  deleteStorageV1CollectionStorageClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a StorageClass
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1/storageclasses/{name}`
    """
  deleteStorageV1StorageClass(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of StorageClass
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1beta1/storageclasses`
    """
  deleteStorageV1beta1CollectionStorageClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of VolumeAttachment
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1beta1/volumeattachments`
    """
  deleteStorageV1beta1CollectionVolumeAttachment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a StorageClass
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1beta1/storageclasses/{name}`
    """
  deleteStorageV1beta1StorageClass(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a VolumeAttachment
    
    **endpoint:** `DELETE /apis/storage.k8s.io/v1beta1/volumeattachments/{name}`
    """
  deleteStorageV1beta1VolumeAttachment(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a BrokerTemplateInstance
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/brokertemplateinstances/{name}`
    """
  deleteTemplateOpenshiftIoV1BrokerTemplateInstance(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of BrokerTemplateInstance
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/brokertemplateinstances`
    """
  deleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstance(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Template
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/namespaces/{namespace}/templates`
    """
  deleteTemplateOpenshiftIoV1CollectionNamespacedTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of TemplateInstance
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances`
    """
  deleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstance(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Template
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/namespaces/{namespace}/templates/{name}`
    """
  deleteTemplateOpenshiftIoV1NamespacedTemplate(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a TemplateInstance
    
    **endpoint:** `DELETE /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}`
    """
  deleteTemplateOpenshiftIoV1NamespacedTemplateInstance(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, namespace:String!, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an User
    
    **endpoint:** `DELETE /oapi/v1/users/{name}`
    """
  deleteUser(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an UserIdentityMapping
    
    **endpoint:** `DELETE /oapi/v1/useridentitymappings/{name}`
    """
  deleteUserIdentityMapping(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Group
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/groups`
    """
  deleteUserOpenshiftIoV1CollectionGroup(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of Identity
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/identities`
    """
  deleteUserOpenshiftIoV1CollectionIdentity(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete collection of User
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/users`
    """
  deleteUserOpenshiftIoV1CollectionUser(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete a Group
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/groups/{name}`
    """
  deleteUserOpenshiftIoV1Group(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an Identity
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/identities/{name}`
    """
  deleteUserOpenshiftIoV1Identity(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an User
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/users/{name}`
    """
  deleteUserOpenshiftIoV1User(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    delete an UserIdentityMapping
    
    **endpoint:** `DELETE /apis/user.openshift.io/v1/useridentitymappings/{name}`
    """
  deleteUserOpenshiftIoV1UserIdentityMapping(body:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
    gracePeriodSeconds:Int,   
    "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
    orphanDependents:Boolean,   
    "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
    propagationPolicy:String, name:String!
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    partially update the specified MutatingWebhookConfiguration
    
    **endpoint:** `PATCH /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}`
    """
  patchAdmissionregistrationV1beta1MutatingWebhookConfiguration(name:String!):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  """
    partially update the specified ValidatingWebhookConfiguration
    
    **endpoint:** `PATCH /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}`
    """
  patchAdmissionregistrationV1beta1ValidatingWebhookConfiguration(name:String!):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  """
    partially update the specified APIService
    
    **endpoint:** `PATCH /apis/apiregistration.k8s.io/v1/apiservices/{name}`
    """
  patchApiregistrationV1APIService(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    partially update status of the specified APIService
    
    **endpoint:** `PATCH /apis/apiregistration.k8s.io/v1/apiservices/{name}/status`
    """
  patchApiregistrationV1APIServiceStatus(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    partially update the specified APIService
    
    **endpoint:** `PATCH /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}`
    """
  patchApiregistrationV1beta1APIService(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    partially update status of the specified APIService
    
    **endpoint:** `PATCH /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}/status`
    """
  patchApiregistrationV1beta1APIServiceStatus(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    partially update the specified DeploymentConfig
    
    **endpoint:** `PATCH /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  patchAppsOpenshiftIoV1NamespacedDeploymentConfig(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    partially update scale of the specified DeploymentConfig
    
    **endpoint:** `PATCH /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  patchAppsOpenshiftIoV1NamespacedDeploymentConfigScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    partially update status of the specified DeploymentConfig
    
    **endpoint:** `PATCH /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  patchAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    partially update the specified ControllerRevision
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  patchAppsV1NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_api_apps_v1_ControllerRevisionResult
  """
    partially update the specified DaemonSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`
    """
  patchAppsV1NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    partially update status of the specified DaemonSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  patchAppsV1NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    partially update the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/deployments/{name}`
    """
  patchAppsV1NamespacedDeployment(namespace:String!, name:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    partially update scale of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale`
    """
  patchAppsV1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    partially update status of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/deployments/{name}/status`
    """
  patchAppsV1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    partially update the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/replicasets/{name}`
    """
  patchAppsV1NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    partially update scale of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  patchAppsV1NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    partially update status of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status`
    """
  patchAppsV1NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    partially update the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`
    """
  patchAppsV1NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    partially update scale of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  patchAppsV1NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    partially update status of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  patchAppsV1NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    partially update the specified ControllerRevision
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  patchAppsV1beta1NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ControllerRevisionResult
  """
    partially update the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  patchAppsV1beta1NamespacedDeployment(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    partially update scale of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  patchAppsV1beta1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    partially update status of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  patchAppsV1beta1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    partially update the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}`
    """
  patchAppsV1beta1NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    partially update scale of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  patchAppsV1beta1NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    partially update status of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  patchAppsV1beta1NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    partially update the specified ControllerRevision
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}`
    """
  patchAppsV1beta2NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ControllerRevisionResult
  """
    partially update the specified DaemonSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}`
    """
  patchAppsV1beta2NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    partially update status of the specified DaemonSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status`
    """
  patchAppsV1beta2NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    partially update the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}`
    """
  patchAppsV1beta2NamespacedDeployment(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    partially update scale of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale`
    """
  patchAppsV1beta2NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    partially update status of the specified Deployment
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status`
    """
  patchAppsV1beta2NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    partially update the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}`
    """
  patchAppsV1beta2NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    partially update scale of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale`
    """
  patchAppsV1beta2NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    partially update status of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status`
    """
  patchAppsV1beta2NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    partially update the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}`
    """
  patchAppsV1beta2NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    partially update scale of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  patchAppsV1beta2NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    partially update status of the specified StatefulSet
    
    **endpoint:** `PATCH /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status`
    """
  patchAppsV1beta2NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    partially update the specified ClusterRole
    
    **endpoint:** `PATCH /apis/authorization.openshift.io/v1/clusterroles/{name}`
    """
  patchAuthorizationOpenshiftIoV1ClusterRole(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    partially update the specified ClusterRoleBinding
    
    **endpoint:** `PATCH /apis/authorization.openshift.io/v1/clusterrolebindings/{name}`
    """
  patchAuthorizationOpenshiftIoV1ClusterRoleBinding(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    partially update the specified Role
    
    **endpoint:** `PATCH /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles/{name}`
    """
  patchAuthorizationOpenshiftIoV1NamespacedRole(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    partially update the specified RoleBinding
    
    **endpoint:** `PATCH /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  patchAuthorizationOpenshiftIoV1NamespacedRoleBinding(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    partially update the specified RoleBindingRestriction
    
    **endpoint:** `PATCH /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    partially update the specified HorizontalPodAutoscaler
    
    **endpoint:** `PATCH /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  patchAutoscalingV1NamespacedHorizontalPodAutoscaler(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    partially update status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `PATCH /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    partially update the specified HorizontalPodAutoscaler
    
    **endpoint:** `PATCH /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  patchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(namespace:String!, name:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    partially update status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `PATCH /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  patchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(namespace:String!, name:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    partially update the specified Job
    
    **endpoint:** `PATCH /apis/batch/v1/namespaces/{namespace}/jobs/{name}`
    """
  patchBatchV1NamespacedJob(namespace:String!, name:String!):io_k8s_api_batch_v1_JobResult
  """
    partially update status of the specified Job
    
    **endpoint:** `PATCH /apis/batch/v1/namespaces/{namespace}/jobs/{name}/status`
    """
  patchBatchV1NamespacedJobStatus(namespace:String!, name:String!):io_k8s_api_batch_v1_JobResult
  """
    partially update the specified CronJob
    
    **endpoint:** `PATCH /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}`
    """
  patchBatchV1beta1NamespacedCronJob(namespace:String!, name:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    partially update status of the specified CronJob
    
    **endpoint:** `PATCH /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}/status`
    """
  patchBatchV1beta1NamespacedCronJobStatus(namespace:String!, name:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    partially update the specified Build
    
    **endpoint:** `PATCH /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}`
    """
  patchBuildOpenshiftIoV1NamespacedBuild(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    partially update the specified BuildConfig
    
    **endpoint:** `PATCH /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  patchBuildOpenshiftIoV1NamespacedBuildConfig(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    partially update the specified CertificateSigningRequest
    
    **endpoint:** `PATCH /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}`
    """
  patchCertificatesV1beta1CertificateSigningRequest(name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    partially update status of the specified CertificateSigningRequest
    
    **endpoint:** `PATCH /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/status`
    """
  patchCertificatesV1beta1CertificateSigningRequestStatus(name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    partially update the specified ClusterNetwork
    
    **endpoint:** `PATCH /oapi/v1/clusternetworks/{name}`
    """
  patchClusterNetwork(name:String!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    partially update the specified ClusterResourceQuota
    
    **endpoint:** `PATCH /oapi/v1/clusterresourcequotas/{name}`
    """
  patchClusterResourceQuota(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    partially update status of the specified ClusterResourceQuota
    
    **endpoint:** `PATCH /oapi/v1/clusterresourcequotas/{name}/status`
    """
  patchClusterResourceQuotaStatus(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    partially update the specified ClusterRole
    
    **endpoint:** `PATCH /oapi/v1/clusterroles/{name}`
    """
  patchClusterRole(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    partially update the specified ClusterRoleBinding
    
    **endpoint:** `PATCH /oapi/v1/clusterrolebindings/{name}`
    """
  patchClusterRoleBinding(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    partially update the specified Namespace
    
    **endpoint:** `PATCH /api/v1/namespaces/{name}`
    """
  patchCoreV1Namespace(name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    partially update status of the specified Namespace
    
    **endpoint:** `PATCH /api/v1/namespaces/{name}/status`
    """
  patchCoreV1NamespaceStatus(name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    partially update the specified ConfigMap
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/configmaps/{name}`
    """
  patchCoreV1NamespacedConfigMap(namespace:String!, name:String!):io_k8s_api_core_v1_ConfigMapResult
  """
    partially update the specified Endpoints
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/endpoints/{name}`
    """
  patchCoreV1NamespacedEndpoints(namespace:String!, name:String!):io_k8s_api_core_v1_EndpointsResult
  """
    partially update the specified Event
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/events/{name}`
    """
  patchCoreV1NamespacedEvent(namespace:String!, name:String!):io_k8s_api_core_v1_EventResult
  """
    partially update the specified LimitRange
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/limitranges/{name}`
    """
  patchCoreV1NamespacedLimitRange(namespace:String!, name:String!):io_k8s_api_core_v1_LimitRangeResult
  """
    partially update the specified PersistentVolumeClaim
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`
    """
  patchCoreV1NamespacedPersistentVolumeClaim(namespace:String!, name:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    partially update status of the specified PersistentVolumeClaim
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status`
    """
  patchCoreV1NamespacedPersistentVolumeClaimStatus(namespace:String!, name:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    partially update the specified Pod
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/pods/{name}`
    """
  patchCoreV1NamespacedPod(namespace:String!, name:String!):io_k8s_api_core_v1_PodResult
  """
    partially update status of the specified Pod
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/pods/{name}/status`
    """
  patchCoreV1NamespacedPodStatus(namespace:String!, name:String!):io_k8s_api_core_v1_PodResult
  """
    partially update the specified PodTemplate
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/podtemplates/{name}`
    """
  patchCoreV1NamespacedPodTemplate(namespace:String!, name:String!):io_k8s_api_core_v1_PodTemplateResult
  """
    partially update the specified ReplicationController
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/replicationcontrollers/{name}`
    """
  patchCoreV1NamespacedReplicationController(namespace:String!, name:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    partially update scale of the specified ReplicationController
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  patchCoreV1NamespacedReplicationControllerScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    partially update status of the specified ReplicationController
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status`
    """
  patchCoreV1NamespacedReplicationControllerStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    partially update the specified ResourceQuota
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/resourcequotas/{name}`
    """
  patchCoreV1NamespacedResourceQuota(namespace:String!, name:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    partially update status of the specified ResourceQuota
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/resourcequotas/{name}/status`
    """
  patchCoreV1NamespacedResourceQuotaStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    partially update the specified Secret
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/secrets/{name}`
    """
  patchCoreV1NamespacedSecret(namespace:String!, name:String!):io_k8s_api_core_v1_SecretResult
  """
    partially update the specified Service
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/services/{name}`
    """
  patchCoreV1NamespacedService(namespace:String!, name:String!):io_k8s_api_core_v1_ServiceResult
  """
    partially update the specified ServiceAccount
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/serviceaccounts/{name}`
    """
  patchCoreV1NamespacedServiceAccount(namespace:String!, name:String!):io_k8s_api_core_v1_ServiceAccountResult
  """
    partially update status of the specified Service
    
    **endpoint:** `PATCH /api/v1/namespaces/{namespace}/services/{name}/status`
    """
  patchCoreV1NamespacedServiceStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ServiceResult
  """
    partially update the specified Node
    
    **endpoint:** `PATCH /api/v1/nodes/{name}`
    """
  patchCoreV1Node(name:String!):io_k8s_api_core_v1_NodeResult
  """
    partially update status of the specified Node
    
    **endpoint:** `PATCH /api/v1/nodes/{name}/status`
    """
  patchCoreV1NodeStatus(name:String!):io_k8s_api_core_v1_NodeResult
  """
    partially update the specified PersistentVolume
    
    **endpoint:** `PATCH /api/v1/persistentvolumes/{name}`
    """
  patchCoreV1PersistentVolume(name:String!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    partially update status of the specified PersistentVolume
    
    **endpoint:** `PATCH /api/v1/persistentvolumes/{name}/status`
    """
  patchCoreV1PersistentVolumeStatus(name:String!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    partially update the specified SecurityContextConstraints
    
    **endpoint:** `PATCH /api/v1/securitycontextconstraints/{name}`
    """
  patchCoreV1SecurityContextConstraints(name:String!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    partially update the specified Event
    
    **endpoint:** `PATCH /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events/{name}`
    """
  patchEventsV1beta1NamespacedEvent(namespace:String!, name:String!):io_k8s_api_events_v1beta1_EventResult
  """
    partially update the specified DaemonSet
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}`
    """
  patchExtensionsV1beta1NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    partially update status of the specified DaemonSet
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  patchExtensionsV1beta1NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    partially update the specified Deployment
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  patchExtensionsV1beta1NamespacedDeployment(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    partially update scale of the specified Deployment
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  patchExtensionsV1beta1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    partially update status of the specified Deployment
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  patchExtensionsV1beta1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    partially update the specified Ingress
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}`
    """
  patchExtensionsV1beta1NamespacedIngress(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    partially update status of the specified Ingress
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status`
    """
  patchExtensionsV1beta1NamespacedIngressStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    partially update the specified NetworkPolicy
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}`
    """
  patchExtensionsV1beta1NamespacedNetworkPolicy(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_NetworkPolicyResult
  """
    partially update the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}`
    """
  patchExtensionsV1beta1NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    partially update scale of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  patchExtensionsV1beta1NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    partially update status of the specified ReplicaSet
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status`
    """
  patchExtensionsV1beta1NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    partially update scale of the specified ReplicationControllerDummy
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  patchExtensionsV1beta1NamespacedReplicationControllerDummyScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    partially update the specified PodSecurityPolicy
    
    **endpoint:** `PATCH /apis/extensions/v1beta1/podsecuritypolicies/{name}`
    """
  patchExtensionsV1beta1PodSecurityPolicy(name:String!):io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult
  """
    partially update the specified Group
    
    **endpoint:** `PATCH /oapi/v1/groups/{name}`
    """
  patchGroup(name:String!):com_github_openshift_api_user_v1_GroupResult
  """
    partially update the specified HostSubnet
    
    **endpoint:** `PATCH /oapi/v1/hostsubnets/{name}`
    """
  patchHostSubnet(name:String!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    partially update the specified Identity
    
    **endpoint:** `PATCH /oapi/v1/identities/{name}`
    """
  patchIdentity(name:String!):com_github_openshift_api_user_v1_IdentityResult
  """
    partially update the specified Image
    
    **endpoint:** `PATCH /oapi/v1/images/{name}`
    """
  patchImage(name:String!):com_github_openshift_api_image_v1_ImageResult
  """
    partially update the specified Image
    
    **endpoint:** `PATCH /apis/image.openshift.io/v1/images/{name}`
    """
  patchImageOpenshiftIoV1Image(name:String!):com_github_openshift_api_image_v1_ImageResult
  """
    partially update the specified ImageStream
    
    **endpoint:** `PATCH /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  patchImageOpenshiftIoV1NamespacedImageStream(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    partially update status of the specified ImageStream
    
    **endpoint:** `PATCH /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  patchImageOpenshiftIoV1NamespacedImageStreamStatus(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    partially update the specified ImageStreamTag
    
    **endpoint:** `PATCH /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  patchImageOpenshiftIoV1NamespacedImageStreamTag(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    partially update the specified Build
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/builds/{name}`
    """
  patchNamespacedBuild(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    partially update the specified BuildConfig
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  patchNamespacedBuildConfig(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    partially update the specified DeploymentConfig
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  patchNamespacedDeploymentConfig(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    partially update scale of the specified DeploymentConfig
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  patchNamespacedDeploymentConfigScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    partially update status of the specified DeploymentConfig
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  patchNamespacedDeploymentConfigStatus(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    partially update the specified EgressNetworkPolicy
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  patchNamespacedEgressNetworkPolicy(namespace:String!, name:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    partially update the specified ImageStream
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  patchNamespacedImageStream(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    partially update status of the specified ImageStream
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  patchNamespacedImageStreamStatus(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    partially update the specified ImageStreamTag
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  patchNamespacedImageStreamTag(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    partially update the specified Role
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/roles/{name}`
    """
  patchNamespacedRole(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    partially update the specified RoleBinding
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  patchNamespacedRoleBinding(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    partially update the specified RoleBindingRestriction
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  patchNamespacedRoleBindingRestriction(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    partially update the specified Route
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/routes/{name}`
    """
  patchNamespacedRoute(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    partially update status of the specified Route
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/routes/{name}/status`
    """
  patchNamespacedRouteStatus(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    partially update the specified Template
    
    **endpoint:** `PATCH /oapi/v1/namespaces/{namespace}/templates/{name}`
    """
  patchNamespacedTemplate(namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    partially update the specified NetNamespace
    
    **endpoint:** `PATCH /oapi/v1/netnamespaces/{name}`
    """
  patchNetNamespace(name:String!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    partially update the specified ClusterNetwork
    
    **endpoint:** `PATCH /apis/network.openshift.io/v1/clusternetworks/{name}`
    """
  patchNetworkOpenshiftIoV1ClusterNetwork(name:String!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    partially update the specified HostSubnet
    
    **endpoint:** `PATCH /apis/network.openshift.io/v1/hostsubnets/{name}`
    """
  patchNetworkOpenshiftIoV1HostSubnet(name:String!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    partially update the specified EgressNetworkPolicy
    
    **endpoint:** `PATCH /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  patchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(namespace:String!, name:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    partially update the specified NetNamespace
    
    **endpoint:** `PATCH /apis/network.openshift.io/v1/netnamespaces/{name}`
    """
  patchNetworkOpenshiftIoV1NetNamespace(name:String!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    partially update the specified NetworkPolicy
    
    **endpoint:** `PATCH /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`
    """
  patchNetworkingV1NamespacedNetworkPolicy(namespace:String!, name:String!):io_k8s_api_networking_v1_NetworkPolicyResult
  """
    partially update the specified OAuthAccessToken
    
    **endpoint:** `PATCH /oapi/v1/oauthaccesstokens/{name}`
    """
  patchOAuthAccessToken(name:String!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    partially update the specified OAuthAuthorizeToken
    
    **endpoint:** `PATCH /oapi/v1/oauthauthorizetokens/{name}`
    """
  patchOAuthAuthorizeToken(name:String!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    partially update the specified OAuthClient
    
    **endpoint:** `PATCH /oapi/v1/oauthclients/{name}`
    """
  patchOAuthClient(name:String!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    partially update the specified OAuthClientAuthorization
    
    **endpoint:** `PATCH /oapi/v1/oauthclientauthorizations/{name}`
    """
  patchOAuthClientAuthorization(name:String!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    partially update the specified OAuthAccessToken
    
    **endpoint:** `PATCH /apis/oauth.openshift.io/v1/oauthaccesstokens/{name}`
    """
  patchOauthOpenshiftIoV1OAuthAccessToken(name:String!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    partially update the specified OAuthAuthorizeToken
    
    **endpoint:** `PATCH /apis/oauth.openshift.io/v1/oauthauthorizetokens/{name}`
    """
  patchOauthOpenshiftIoV1OAuthAuthorizeToken(name:String!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    partially update the specified OAuthClient
    
    **endpoint:** `PATCH /apis/oauth.openshift.io/v1/oauthclients/{name}`
    """
  patchOauthOpenshiftIoV1OAuthClient(name:String!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    partially update the specified OAuthClientAuthorization
    
    **endpoint:** `PATCH /apis/oauth.openshift.io/v1/oauthclientauthorizations/{name}`
    """
  patchOauthOpenshiftIoV1OAuthClientAuthorization(name:String!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    partially update the specified PodDisruptionBudget
    
    **endpoint:** `PATCH /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}`
    """
  patchPolicyV1beta1NamespacedPodDisruptionBudget(namespace:String!, name:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    partially update status of the specified PodDisruptionBudget
    
    **endpoint:** `PATCH /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}/status`
    """
  patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus(namespace:String!, name:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    partially update the specified PodSecurityPolicy
    
    **endpoint:** `PATCH /apis/policy/v1beta1/podsecuritypolicies/{name}`
    """
  patchPolicyV1beta1PodSecurityPolicy(name:String!):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  """
    partially update the specified Project
    
    **endpoint:** `PATCH /oapi/v1/projects/{name}`
    """
  patchProject(name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    partially update the specified Project
    
    **endpoint:** `PATCH /apis/project.openshift.io/v1/projects/{name}`
    """
  patchProjectOpenshiftIoV1Project(name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    partially update the specified ClusterResourceQuota
    
    **endpoint:** `PATCH /apis/quota.openshift.io/v1/clusterresourcequotas/{name}`
    """
  patchQuotaOpenshiftIoV1ClusterResourceQuota(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    partially update status of the specified ClusterResourceQuota
    
    **endpoint:** `PATCH /apis/quota.openshift.io/v1/clusterresourcequotas/{name}/status`
    """
  patchQuotaOpenshiftIoV1ClusterResourceQuotaStatus(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    partially update the specified ClusterRole
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`
    """
  patchRbacAuthorizationV1ClusterRole(name:String!):io_k8s_api_rbac_v1_ClusterRoleResult
  """
    partially update the specified ClusterRoleBinding
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`
    """
  patchRbacAuthorizationV1ClusterRoleBinding(name:String!):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  """
    partially update the specified Role
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`
    """
  patchRbacAuthorizationV1NamespacedRole(namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleResult
  """
    partially update the specified RoleBinding
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  patchRbacAuthorizationV1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleBindingResult
  """
    partially update the specified ClusterRole
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1beta1/clusterroles/{name}`
    """
  patchRbacAuthorizationV1beta1ClusterRole(name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  """
    partially update the specified ClusterRoleBinding
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/{name}`
    """
  patchRbacAuthorizationV1beta1ClusterRoleBinding(name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  """
    partially update the specified Role
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles/{name}`
    """
  patchRbacAuthorizationV1beta1NamespacedRole(namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleResult
  """
    partially update the specified RoleBinding
    
    **endpoint:** `PATCH /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings/{name}`
    """
  patchRbacAuthorizationV1beta1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleBindingResult
  """
    partially update the specified Route
    
    **endpoint:** `PATCH /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}`
    """
  patchRouteOpenshiftIoV1NamespacedRoute(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    partially update status of the specified Route
    
    **endpoint:** `PATCH /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}/status`
    """
  patchRouteOpenshiftIoV1NamespacedRouteStatus(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    partially update the specified PriorityClass
    
    **endpoint:** `PATCH /apis/scheduling.k8s.io/v1beta1/priorityclasses/{name}`
    """
  patchSchedulingV1beta1PriorityClass(name:String!):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  """
    partially update the specified RangeAllocation
    
    **endpoint:** `PATCH /apis/security.openshift.io/v1/rangeallocations/{name}`
    """
  patchSecurityOpenshiftIoV1RangeAllocation(name:String!):com_github_openshift_api_security_v1_RangeAllocationResult
  """
    partially update the specified SecurityContextConstraints
    
    **endpoint:** `PATCH /apis/security.openshift.io/v1/securitycontextconstraints/{name}`
    """
  patchSecurityOpenshiftIoV1SecurityContextConstraints(name:String!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    partially update the specified StorageClass
    
    **endpoint:** `PATCH /apis/storage.k8s.io/v1/storageclasses/{name}`
    """
  patchStorageV1StorageClass(name:String!):io_k8s_api_storage_v1_StorageClassResult
  """
    partially update the specified StorageClass
    
    **endpoint:** `PATCH /apis/storage.k8s.io/v1beta1/storageclasses/{name}`
    """
  patchStorageV1beta1StorageClass(name:String!):io_k8s_api_storage_v1beta1_StorageClassResult
  """
    partially update the specified VolumeAttachment
    
    **endpoint:** `PATCH /apis/storage.k8s.io/v1beta1/volumeattachments/{name}`
    """
  patchStorageV1beta1VolumeAttachment(name:String!):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  """
    partially update the specified BrokerTemplateInstance
    
    **endpoint:** `PATCH /apis/template.openshift.io/v1/brokertemplateinstances/{name}`
    """
  patchTemplateOpenshiftIoV1BrokerTemplateInstance(name:String!):com_github_openshift_api_template_v1_BrokerTemplateInstanceResult
  """
    partially update the specified Template
    
    **endpoint:** `PATCH /apis/template.openshift.io/v1/namespaces/{namespace}/templates/{name}`
    """
  patchTemplateOpenshiftIoV1NamespacedTemplate(namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    partially update the specified TemplateInstance
    
    **endpoint:** `PATCH /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}`
    """
  patchTemplateOpenshiftIoV1NamespacedTemplateInstance(namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    partially update status of the specified TemplateInstance
    
    **endpoint:** `PATCH /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}/status`
    """
  patchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    partially update the specified User
    
    **endpoint:** `PATCH /oapi/v1/users/{name}`
    """
  patchUser(name:String!):com_github_openshift_api_user_v1_UserResult
  """
    partially update the specified UserIdentityMapping
    
    **endpoint:** `PATCH /oapi/v1/useridentitymappings/{name}`
    """
  patchUserIdentityMapping(name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    partially update the specified Group
    
    **endpoint:** `PATCH /apis/user.openshift.io/v1/groups/{name}`
    """
  patchUserOpenshiftIoV1Group(name:String!):com_github_openshift_api_user_v1_GroupResult
  """
    partially update the specified Identity
    
    **endpoint:** `PATCH /apis/user.openshift.io/v1/identities/{name}`
    """
  patchUserOpenshiftIoV1Identity(name:String!):com_github_openshift_api_user_v1_IdentityResult
  """
    partially update the specified User
    
    **endpoint:** `PATCH /apis/user.openshift.io/v1/users/{name}`
    """
  patchUserOpenshiftIoV1User(name:String!):com_github_openshift_api_user_v1_UserResult
  """
    partially update the specified UserIdentityMapping
    
    **endpoint:** `PATCH /apis/user.openshift.io/v1/useridentitymappings/{name}`
    """
  patchUserOpenshiftIoV1UserIdentityMapping(name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    replace the specified MutatingWebhookConfiguration
    
    **endpoint:** `PUT /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}`
    """
  replaceAdmissionregistrationV1beta1MutatingWebhookConfiguration(body:io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput!, name:String!):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  """
    replace the specified ValidatingWebhookConfiguration
    
    **endpoint:** `PUT /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}`
    """
  replaceAdmissionregistrationV1beta1ValidatingWebhookConfiguration(body:io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput!, name:String!):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  """
    replace the specified APIService
    
    **endpoint:** `PUT /apis/apiregistration.k8s.io/v1/apiservices/{name}`
    """
  replaceApiregistrationV1APIService(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!, name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    replace status of the specified APIService
    
    **endpoint:** `PUT /apis/apiregistration.k8s.io/v1/apiservices/{name}/status`
    """
  replaceApiregistrationV1APIServiceStatus(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!, name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    replace the specified APIService
    
    **endpoint:** `PUT /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}`
    """
  replaceApiregistrationV1beta1APIService(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!, name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    replace status of the specified APIService
    
    **endpoint:** `PUT /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}/status`
    """
  replaceApiregistrationV1beta1APIServiceStatus(body:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!, name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    replace the specified DeploymentConfig
    
    **endpoint:** `PUT /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  replaceAppsOpenshiftIoV1NamespacedDeploymentConfig(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    replace scale of the specified DeploymentConfig
    
    **endpoint:** `PUT /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  replaceAppsOpenshiftIoV1NamespacedDeploymentConfigScale(body:io_k8s_api_extensions_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    replace status of the specified DeploymentConfig
    
    **endpoint:** `PUT /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  replaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    replace the specified ControllerRevision
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  replaceAppsV1NamespacedControllerRevision(body:io_k8s_api_apps_v1_ControllerRevisionInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_ControllerRevisionResult
  """
    replace the specified DaemonSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`
    """
  replaceAppsV1NamespacedDaemonSet(body:io_k8s_api_apps_v1_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    replace status of the specified DaemonSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  replaceAppsV1NamespacedDaemonSetStatus(body:io_k8s_api_apps_v1_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    replace the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/deployments/{name}`
    """
  replaceAppsV1NamespacedDeployment(body:io_k8s_api_apps_v1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    replace scale of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale`
    """
  replaceAppsV1NamespacedDeploymentScale(body:io_k8s_api_autoscaling_v1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    replace status of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/deployments/{name}/status`
    """
  replaceAppsV1NamespacedDeploymentStatus(body:io_k8s_api_apps_v1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    replace the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/replicasets/{name}`
    """
  replaceAppsV1NamespacedReplicaSet(body:io_k8s_api_apps_v1_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    replace scale of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  replaceAppsV1NamespacedReplicaSetScale(body:io_k8s_api_autoscaling_v1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    replace status of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status`
    """
  replaceAppsV1NamespacedReplicaSetStatus(body:io_k8s_api_apps_v1_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    replace the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`
    """
  replaceAppsV1NamespacedStatefulSet(body:io_k8s_api_apps_v1_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    replace scale of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  replaceAppsV1NamespacedStatefulSetScale(body:io_k8s_api_autoscaling_v1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    replace status of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  replaceAppsV1NamespacedStatefulSetStatus(body:io_k8s_api_apps_v1_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    replace the specified ControllerRevision
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  replaceAppsV1beta1NamespacedControllerRevision(body:io_k8s_api_apps_v1beta1_ControllerRevisionInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ControllerRevisionResult
  """
    replace the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  replaceAppsV1beta1NamespacedDeployment(body:io_k8s_api_apps_v1beta1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    replace scale of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  replaceAppsV1beta1NamespacedDeploymentScale(body:io_k8s_api_apps_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    replace status of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  replaceAppsV1beta1NamespacedDeploymentStatus(body:io_k8s_api_apps_v1beta1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    replace the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}`
    """
  replaceAppsV1beta1NamespacedStatefulSet(body:io_k8s_api_apps_v1beta1_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    replace scale of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  replaceAppsV1beta1NamespacedStatefulSetScale(body:io_k8s_api_apps_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    replace status of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  replaceAppsV1beta1NamespacedStatefulSetStatus(body:io_k8s_api_apps_v1beta1_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    replace the specified ControllerRevision
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}`
    """
  replaceAppsV1beta2NamespacedControllerRevision(body:io_k8s_api_apps_v1beta2_ControllerRevisionInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ControllerRevisionResult
  """
    replace the specified DaemonSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}`
    """
  replaceAppsV1beta2NamespacedDaemonSet(body:io_k8s_api_apps_v1beta2_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    replace status of the specified DaemonSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status`
    """
  replaceAppsV1beta2NamespacedDaemonSetStatus(body:io_k8s_api_apps_v1beta2_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    replace the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}`
    """
  replaceAppsV1beta2NamespacedDeployment(body:io_k8s_api_apps_v1beta2_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    replace scale of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale`
    """
  replaceAppsV1beta2NamespacedDeploymentScale(body:io_k8s_api_apps_v1beta2_ScaleInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    replace status of the specified Deployment
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status`
    """
  replaceAppsV1beta2NamespacedDeploymentStatus(body:io_k8s_api_apps_v1beta2_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    replace the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}`
    """
  replaceAppsV1beta2NamespacedReplicaSet(body:io_k8s_api_apps_v1beta2_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    replace scale of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale`
    """
  replaceAppsV1beta2NamespacedReplicaSetScale(body:io_k8s_api_apps_v1beta2_ScaleInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    replace status of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status`
    """
  replaceAppsV1beta2NamespacedReplicaSetStatus(body:io_k8s_api_apps_v1beta2_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    replace the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}`
    """
  replaceAppsV1beta2NamespacedStatefulSet(body:io_k8s_api_apps_v1beta2_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    replace scale of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  replaceAppsV1beta2NamespacedStatefulSetScale(body:io_k8s_api_apps_v1beta2_ScaleInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    replace status of the specified StatefulSet
    
    **endpoint:** `PUT /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status`
    """
  replaceAppsV1beta2NamespacedStatefulSetStatus(body:io_k8s_api_apps_v1beta2_StatefulSetInput!, namespace:String!, name:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    replace the specified ClusterRole
    
    **endpoint:** `PUT /apis/authorization.openshift.io/v1/clusterroles/{name}`
    """
  replaceAuthorizationOpenshiftIoV1ClusterRole(body:com_github_openshift_api_authorization_v1_ClusterRoleInput!, name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    replace the specified ClusterRoleBinding
    
    **endpoint:** `PUT /apis/authorization.openshift.io/v1/clusterrolebindings/{name}`
    """
  replaceAuthorizationOpenshiftIoV1ClusterRoleBinding(body:com_github_openshift_api_authorization_v1_ClusterRoleBindingInput!, name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    replace the specified Role
    
    **endpoint:** `PUT /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles/{name}`
    """
  replaceAuthorizationOpenshiftIoV1NamespacedRole(body:com_github_openshift_api_authorization_v1_RoleInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    replace the specified RoleBinding
    
    **endpoint:** `PUT /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding(body:com_github_openshift_api_authorization_v1_RoleBindingInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    replace the specified RoleBindingRestriction
    
    **endpoint:** `PUT /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(body:com_github_openshift_api_authorization_v1_RoleBindingRestrictionInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    replace the specified HorizontalPodAutoscaler
    
    **endpoint:** `PUT /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  replaceAutoscalingV1NamespacedHorizontalPodAutoscaler(body:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    replace status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `PUT /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(body:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    replace the specified HorizontalPodAutoscaler
    
    **endpoint:** `PUT /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(body:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    replace status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `PUT /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(body:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    replace the specified Job
    
    **endpoint:** `PUT /apis/batch/v1/namespaces/{namespace}/jobs/{name}`
    """
  replaceBatchV1NamespacedJob(body:io_k8s_api_batch_v1_JobInput!, namespace:String!, name:String!):io_k8s_api_batch_v1_JobResult
  """
    replace status of the specified Job
    
    **endpoint:** `PUT /apis/batch/v1/namespaces/{namespace}/jobs/{name}/status`
    """
  replaceBatchV1NamespacedJobStatus(body:io_k8s_api_batch_v1_JobInput!, namespace:String!, name:String!):io_k8s_api_batch_v1_JobResult
  """
    replace the specified CronJob
    
    **endpoint:** `PUT /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}`
    """
  replaceBatchV1beta1NamespacedCronJob(body:io_k8s_api_batch_v1beta1_CronJobInput!, namespace:String!, name:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    replace status of the specified CronJob
    
    **endpoint:** `PUT /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}/status`
    """
  replaceBatchV1beta1NamespacedCronJobStatus(body:io_k8s_api_batch_v1beta1_CronJobInput!, namespace:String!, name:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    replace the specified Build
    
    **endpoint:** `PUT /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}`
    """
  replaceBuildOpenshiftIoV1NamespacedBuild(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    replace the specified BuildConfig
    
    **endpoint:** `PUT /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  replaceBuildOpenshiftIoV1NamespacedBuildConfig(body:com_github_openshift_api_build_v1_BuildConfigInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    replace details of the specified Build
    
    **endpoint:** `PUT /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}/details`
    """
  replaceBuildOpenshiftIoV1NamespacedBuildDetails(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    replace the specified CertificateSigningRequest
    
    **endpoint:** `PUT /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}`
    """
  replaceCertificatesV1beta1CertificateSigningRequest(body:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!, name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    replace approval of the specified CertificateSigningRequest
    
    **endpoint:** `PUT /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/approval`
    """
  replaceCertificatesV1beta1CertificateSigningRequestApproval(body:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!, name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    replace status of the specified CertificateSigningRequest
    
    **endpoint:** `PUT /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/status`
    """
  replaceCertificatesV1beta1CertificateSigningRequestStatus(body:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!, name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    replace the specified ClusterNetwork
    
    **endpoint:** `PUT /oapi/v1/clusternetworks/{name}`
    """
  replaceClusterNetwork(body:com_github_openshift_api_network_v1_ClusterNetworkInput!, name:String!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    replace the specified ClusterResourceQuota
    
    **endpoint:** `PUT /oapi/v1/clusterresourcequotas/{name}`
    """
  replaceClusterResourceQuota(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!, name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    replace status of the specified ClusterResourceQuota
    
    **endpoint:** `PUT /oapi/v1/clusterresourcequotas/{name}/status`
    """
  replaceClusterResourceQuotaStatus(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!, name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    replace the specified ClusterRole
    
    **endpoint:** `PUT /oapi/v1/clusterroles/{name}`
    """
  replaceClusterRole(body:com_github_openshift_api_authorization_v1_ClusterRoleInput!, name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    replace the specified ClusterRoleBinding
    
    **endpoint:** `PUT /oapi/v1/clusterrolebindings/{name}`
    """
  replaceClusterRoleBinding(body:com_github_openshift_api_authorization_v1_ClusterRoleBindingInput!, name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    replace the specified Namespace
    
    **endpoint:** `PUT /api/v1/namespaces/{name}`
    """
  replaceCoreV1Namespace(body:io_k8s_api_core_v1_NamespaceInput!, name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    replace finalize of the specified Namespace
    
    **endpoint:** `PUT /api/v1/namespaces/{name}/finalize`
    """
  replaceCoreV1NamespaceFinalize(body:io_k8s_api_core_v1_NamespaceInput!, name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    replace status of the specified Namespace
    
    **endpoint:** `PUT /api/v1/namespaces/{name}/status`
    """
  replaceCoreV1NamespaceStatus(body:io_k8s_api_core_v1_NamespaceInput!, name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    replace the specified ConfigMap
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/configmaps/{name}`
    """
  replaceCoreV1NamespacedConfigMap(body:io_k8s_api_core_v1_ConfigMapInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ConfigMapResult
  """
    replace the specified Endpoints
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/endpoints/{name}`
    """
  replaceCoreV1NamespacedEndpoints(body:io_k8s_api_core_v1_EndpointsInput!, namespace:String!, name:String!):io_k8s_api_core_v1_EndpointsResult
  """
    replace the specified Event
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/events/{name}`
    """
  replaceCoreV1NamespacedEvent(body:io_k8s_api_core_v1_EventInput!, namespace:String!, name:String!):io_k8s_api_core_v1_EventResult
  """
    replace the specified LimitRange
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/limitranges/{name}`
    """
  replaceCoreV1NamespacedLimitRange(body:io_k8s_api_core_v1_LimitRangeInput!, namespace:String!, name:String!):io_k8s_api_core_v1_LimitRangeResult
  """
    replace the specified PersistentVolumeClaim
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`
    """
  replaceCoreV1NamespacedPersistentVolumeClaim(body:io_k8s_api_core_v1_PersistentVolumeClaimInput!, namespace:String!, name:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    replace status of the specified PersistentVolumeClaim
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status`
    """
  replaceCoreV1NamespacedPersistentVolumeClaimStatus(body:io_k8s_api_core_v1_PersistentVolumeClaimInput!, namespace:String!, name:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    replace the specified Pod
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/pods/{name}`
    """
  replaceCoreV1NamespacedPod(body:io_k8s_api_core_v1_PodInput!, namespace:String!, name:String!):io_k8s_api_core_v1_PodResult
  """
    replace status of the specified Pod
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/pods/{name}/status`
    """
  replaceCoreV1NamespacedPodStatus(body:io_k8s_api_core_v1_PodInput!, namespace:String!, name:String!):io_k8s_api_core_v1_PodResult
  """
    replace the specified PodTemplate
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/podtemplates/{name}`
    """
  replaceCoreV1NamespacedPodTemplate(body:io_k8s_api_core_v1_PodTemplateInput!, namespace:String!, name:String!):io_k8s_api_core_v1_PodTemplateResult
  """
    replace the specified ReplicationController
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/replicationcontrollers/{name}`
    """
  replaceCoreV1NamespacedReplicationController(body:io_k8s_api_core_v1_ReplicationControllerInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    replace scale of the specified ReplicationController
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  replaceCoreV1NamespacedReplicationControllerScale(body:io_k8s_api_autoscaling_v1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    replace status of the specified ReplicationController
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status`
    """
  replaceCoreV1NamespacedReplicationControllerStatus(body:io_k8s_api_core_v1_ReplicationControllerInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    replace the specified ResourceQuota
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/resourcequotas/{name}`
    """
  replaceCoreV1NamespacedResourceQuota(body:io_k8s_api_core_v1_ResourceQuotaInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    replace status of the specified ResourceQuota
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/resourcequotas/{name}/status`
    """
  replaceCoreV1NamespacedResourceQuotaStatus(body:io_k8s_api_core_v1_ResourceQuotaInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    replace the specified Secret
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/secrets/{name}`
    """
  replaceCoreV1NamespacedSecret(body:io_k8s_api_core_v1_SecretInput!, namespace:String!, name:String!):io_k8s_api_core_v1_SecretResult
  """
    replace the specified Service
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/services/{name}`
    """
  replaceCoreV1NamespacedService(body:io_k8s_api_core_v1_ServiceInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ServiceResult
  """
    replace the specified ServiceAccount
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/serviceaccounts/{name}`
    """
  replaceCoreV1NamespacedServiceAccount(body:io_k8s_api_core_v1_ServiceAccountInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ServiceAccountResult
  """
    replace status of the specified Service
    
    **endpoint:** `PUT /api/v1/namespaces/{namespace}/services/{name}/status`
    """
  replaceCoreV1NamespacedServiceStatus(body:io_k8s_api_core_v1_ServiceInput!, namespace:String!, name:String!):io_k8s_api_core_v1_ServiceResult
  """
    replace the specified Node
    
    **endpoint:** `PUT /api/v1/nodes/{name}`
    """
  replaceCoreV1Node(body:io_k8s_api_core_v1_NodeInput!, name:String!):io_k8s_api_core_v1_NodeResult
  """
    replace status of the specified Node
    
    **endpoint:** `PUT /api/v1/nodes/{name}/status`
    """
  replaceCoreV1NodeStatus(body:io_k8s_api_core_v1_NodeInput!, name:String!):io_k8s_api_core_v1_NodeResult
  """
    replace the specified PersistentVolume
    
    **endpoint:** `PUT /api/v1/persistentvolumes/{name}`
    """
  replaceCoreV1PersistentVolume(body:io_k8s_api_core_v1_PersistentVolumeInput!, name:String!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    replace status of the specified PersistentVolume
    
    **endpoint:** `PUT /api/v1/persistentvolumes/{name}/status`
    """
  replaceCoreV1PersistentVolumeStatus(body:io_k8s_api_core_v1_PersistentVolumeInput!, name:String!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    replace the specified SecurityContextConstraints
    
    **endpoint:** `PUT /api/v1/securitycontextconstraints/{name}`
    """
  replaceCoreV1SecurityContextConstraints(body:com_github_openshift_api_security_v1_SecurityContextConstraintsInput!, name:String!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    replace the specified Event
    
    **endpoint:** `PUT /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events/{name}`
    """
  replaceEventsV1beta1NamespacedEvent(body:io_k8s_api_events_v1beta1_EventInput!, namespace:String!, name:String!):io_k8s_api_events_v1beta1_EventResult
  """
    replace the specified DaemonSet
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}`
    """
  replaceExtensionsV1beta1NamespacedDaemonSet(body:io_k8s_api_extensions_v1beta1_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    replace status of the specified DaemonSet
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  replaceExtensionsV1beta1NamespacedDaemonSetStatus(body:io_k8s_api_extensions_v1beta1_DaemonSetInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    replace the specified Deployment
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  replaceExtensionsV1beta1NamespacedDeployment(body:io_k8s_api_extensions_v1beta1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    replace scale of the specified Deployment
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  replaceExtensionsV1beta1NamespacedDeploymentScale(body:io_k8s_api_extensions_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    replace status of the specified Deployment
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  replaceExtensionsV1beta1NamespacedDeploymentStatus(body:io_k8s_api_extensions_v1beta1_DeploymentInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    replace the specified Ingress
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}`
    """
  replaceExtensionsV1beta1NamespacedIngress(body:io_k8s_api_extensions_v1beta1_IngressInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    replace status of the specified Ingress
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status`
    """
  replaceExtensionsV1beta1NamespacedIngressStatus(body:io_k8s_api_extensions_v1beta1_IngressInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    replace the specified NetworkPolicy
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}`
    """
  replaceExtensionsV1beta1NamespacedNetworkPolicy(body:io_k8s_api_extensions_v1beta1_NetworkPolicyInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_NetworkPolicyResult
  """
    replace the specified ReplicaSet
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}`
    """
  replaceExtensionsV1beta1NamespacedReplicaSet(body:io_k8s_api_extensions_v1beta1_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    replace scale of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  replaceExtensionsV1beta1NamespacedReplicaSetScale(body:io_k8s_api_extensions_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    replace status of the specified ReplicaSet
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status`
    """
  replaceExtensionsV1beta1NamespacedReplicaSetStatus(body:io_k8s_api_extensions_v1beta1_ReplicaSetInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    replace scale of the specified ReplicationControllerDummy
    
    **endpoint:** `PUT /apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  replaceExtensionsV1beta1NamespacedReplicationControllerDummyScale(body:io_k8s_api_extensions_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    replace the specified PodSecurityPolicy
    
    **endpoint:** `PUT /apis/extensions/v1beta1/podsecuritypolicies/{name}`
    """
  replaceExtensionsV1beta1PodSecurityPolicy(body:io_k8s_api_extensions_v1beta1_PodSecurityPolicyInput!, name:String!):io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult
  """
    replace the specified Group
    
    **endpoint:** `PUT /oapi/v1/groups/{name}`
    """
  replaceGroup(body:com_github_openshift_api_user_v1_GroupInput!, name:String!):com_github_openshift_api_user_v1_GroupResult
  """
    replace the specified HostSubnet
    
    **endpoint:** `PUT /oapi/v1/hostsubnets/{name}`
    """
  replaceHostSubnet(body:com_github_openshift_api_network_v1_HostSubnetInput!, name:String!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    replace the specified Identity
    
    **endpoint:** `PUT /oapi/v1/identities/{name}`
    """
  replaceIdentity(body:com_github_openshift_api_user_v1_IdentityInput!, name:String!):com_github_openshift_api_user_v1_IdentityResult
  """
    replace the specified Image
    
    **endpoint:** `PUT /oapi/v1/images/{name}`
    """
  replaceImage(body:com_github_openshift_api_image_v1_ImageInput!, name:String!):com_github_openshift_api_image_v1_ImageResult
  """
    replace the specified Image
    
    **endpoint:** `PUT /apis/image.openshift.io/v1/images/{name}`
    """
  replaceImageOpenshiftIoV1Image(body:com_github_openshift_api_image_v1_ImageInput!, name:String!):com_github_openshift_api_image_v1_ImageResult
  """
    replace the specified ImageStream
    
    **endpoint:** `PUT /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  replaceImageOpenshiftIoV1NamespacedImageStream(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    replace status of the specified ImageStream
    
    **endpoint:** `PUT /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  replaceImageOpenshiftIoV1NamespacedImageStreamStatus(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    replace the specified ImageStreamTag
    
    **endpoint:** `PUT /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  replaceImageOpenshiftIoV1NamespacedImageStreamTag(body:com_github_openshift_api_image_v1_ImageStreamTagInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    replace the specified Build
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/builds/{name}`
    """
  replaceNamespacedBuild(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    replace the specified BuildConfig
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  replaceNamespacedBuildConfig(body:com_github_openshift_api_build_v1_BuildConfigInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildConfigResult
  """
    replace details of the specified Build
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/builds/{name}/details`
    """
  replaceNamespacedBuildDetails(body:com_github_openshift_api_build_v1_BuildInput!, namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildResult
  """
    replace the specified DeploymentConfig
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  replaceNamespacedDeploymentConfig(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    replace scale of the specified DeploymentConfig
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  replaceNamespacedDeploymentConfigScale(body:io_k8s_api_extensions_v1beta1_ScaleInput!, namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    replace status of the specified DeploymentConfig
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  replaceNamespacedDeploymentConfigStatus(body:com_github_openshift_api_apps_v1_DeploymentConfigInput!, namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    replace the specified EgressNetworkPolicy
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  replaceNamespacedEgressNetworkPolicy(body:com_github_openshift_api_network_v1_EgressNetworkPolicyInput!, namespace:String!, name:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    replace the specified ImageStream
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  replaceNamespacedImageStream(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    replace status of the specified ImageStream
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  replaceNamespacedImageStreamStatus(body:com_github_openshift_api_image_v1_ImageStreamInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    replace the specified ImageStreamTag
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  replaceNamespacedImageStreamTag(body:com_github_openshift_api_image_v1_ImageStreamTagInput!, namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    replace the specified Role
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/roles/{name}`
    """
  replaceNamespacedRole(body:com_github_openshift_api_authorization_v1_RoleInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    replace the specified RoleBinding
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  replaceNamespacedRoleBinding(body:com_github_openshift_api_authorization_v1_RoleBindingInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    replace the specified RoleBindingRestriction
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  replaceNamespacedRoleBindingRestriction(body:com_github_openshift_api_authorization_v1_RoleBindingRestrictionInput!, namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    replace the specified Route
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/routes/{name}`
    """
  replaceNamespacedRoute(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    replace status of the specified Route
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/routes/{name}/status`
    """
  replaceNamespacedRouteStatus(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    replace the specified Template
    
    **endpoint:** `PUT /oapi/v1/namespaces/{namespace}/templates/{name}`
    """
  replaceNamespacedTemplate(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    replace the specified NetNamespace
    
    **endpoint:** `PUT /oapi/v1/netnamespaces/{name}`
    """
  replaceNetNamespace(body:com_github_openshift_api_network_v1_NetNamespaceInput!, name:String!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    replace the specified ClusterNetwork
    
    **endpoint:** `PUT /apis/network.openshift.io/v1/clusternetworks/{name}`
    """
  replaceNetworkOpenshiftIoV1ClusterNetwork(body:com_github_openshift_api_network_v1_ClusterNetworkInput!, name:String!):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    replace the specified HostSubnet
    
    **endpoint:** `PUT /apis/network.openshift.io/v1/hostsubnets/{name}`
    """
  replaceNetworkOpenshiftIoV1HostSubnet(body:com_github_openshift_api_network_v1_HostSubnetInput!, name:String!):com_github_openshift_api_network_v1_HostSubnetResult
  """
    replace the specified EgressNetworkPolicy
    
    **endpoint:** `PUT /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  replaceNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(body:com_github_openshift_api_network_v1_EgressNetworkPolicyInput!, namespace:String!, name:String!):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    replace the specified NetNamespace
    
    **endpoint:** `PUT /apis/network.openshift.io/v1/netnamespaces/{name}`
    """
  replaceNetworkOpenshiftIoV1NetNamespace(body:com_github_openshift_api_network_v1_NetNamespaceInput!, name:String!):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    replace the specified NetworkPolicy
    
    **endpoint:** `PUT /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`
    """
  replaceNetworkingV1NamespacedNetworkPolicy(body:io_k8s_api_networking_v1_NetworkPolicyInput!, namespace:String!, name:String!):io_k8s_api_networking_v1_NetworkPolicyResult
  """
    replace the specified OAuthAccessToken
    
    **endpoint:** `PUT /oapi/v1/oauthaccesstokens/{name}`
    """
  replaceOAuthAccessToken(body:com_github_openshift_api_oauth_v1_OAuthAccessTokenInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    replace the specified OAuthAuthorizeToken
    
    **endpoint:** `PUT /oapi/v1/oauthauthorizetokens/{name}`
    """
  replaceOAuthAuthorizeToken(body:com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    replace the specified OAuthClient
    
    **endpoint:** `PUT /oapi/v1/oauthclients/{name}`
    """
  replaceOAuthClient(body:com_github_openshift_api_oauth_v1_OAuthClientInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    replace the specified OAuthClientAuthorization
    
    **endpoint:** `PUT /oapi/v1/oauthclientauthorizations/{name}`
    """
  replaceOAuthClientAuthorization(body:com_github_openshift_api_oauth_v1_OAuthClientAuthorizationInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    replace the specified OAuthAccessToken
    
    **endpoint:** `PUT /apis/oauth.openshift.io/v1/oauthaccesstokens/{name}`
    """
  replaceOauthOpenshiftIoV1OAuthAccessToken(body:com_github_openshift_api_oauth_v1_OAuthAccessTokenInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    replace the specified OAuthAuthorizeToken
    
    **endpoint:** `PUT /apis/oauth.openshift.io/v1/oauthauthorizetokens/{name}`
    """
  replaceOauthOpenshiftIoV1OAuthAuthorizeToken(body:com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    replace the specified OAuthClient
    
    **endpoint:** `PUT /apis/oauth.openshift.io/v1/oauthclients/{name}`
    """
  replaceOauthOpenshiftIoV1OAuthClient(body:com_github_openshift_api_oauth_v1_OAuthClientInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    replace the specified OAuthClientAuthorization
    
    **endpoint:** `PUT /apis/oauth.openshift.io/v1/oauthclientauthorizations/{name}`
    """
  replaceOauthOpenshiftIoV1OAuthClientAuthorization(body:com_github_openshift_api_oauth_v1_OAuthClientAuthorizationInput!, name:String!):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    replace the specified PodDisruptionBudget
    
    **endpoint:** `PUT /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}`
    """
  replacePolicyV1beta1NamespacedPodDisruptionBudget(body:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!, namespace:String!, name:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    replace status of the specified PodDisruptionBudget
    
    **endpoint:** `PUT /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}/status`
    """
  replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus(body:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!, namespace:String!, name:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    replace the specified PodSecurityPolicy
    
    **endpoint:** `PUT /apis/policy/v1beta1/podsecuritypolicies/{name}`
    """
  replacePolicyV1beta1PodSecurityPolicy(body:io_k8s_api_policy_v1beta1_PodSecurityPolicyInput!, name:String!):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  """
    replace the specified Project
    
    **endpoint:** `PUT /oapi/v1/projects/{name}`
    """
  replaceProject(body:com_github_openshift_api_project_v1_ProjectInput!, name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    replace the specified Project
    
    **endpoint:** `PUT /apis/project.openshift.io/v1/projects/{name}`
    """
  replaceProjectOpenshiftIoV1Project(body:com_github_openshift_api_project_v1_ProjectInput!, name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    replace the specified ClusterResourceQuota
    
    **endpoint:** `PUT /apis/quota.openshift.io/v1/clusterresourcequotas/{name}`
    """
  replaceQuotaOpenshiftIoV1ClusterResourceQuota(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!, name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    replace status of the specified ClusterResourceQuota
    
    **endpoint:** `PUT /apis/quota.openshift.io/v1/clusterresourcequotas/{name}/status`
    """
  replaceQuotaOpenshiftIoV1ClusterResourceQuotaStatus(body:com_github_openshift_api_quota_v1_ClusterResourceQuotaInput!, name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    replace the specified ClusterRole
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`
    """
  replaceRbacAuthorizationV1ClusterRole(body:io_k8s_api_rbac_v1_ClusterRoleInput!, name:String!):io_k8s_api_rbac_v1_ClusterRoleResult
  """
    replace the specified ClusterRoleBinding
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`
    """
  replaceRbacAuthorizationV1ClusterRoleBinding(body:io_k8s_api_rbac_v1_ClusterRoleBindingInput!, name:String!):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  """
    replace the specified Role
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`
    """
  replaceRbacAuthorizationV1NamespacedRole(body:io_k8s_api_rbac_v1_RoleInput!, namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleResult
  """
    replace the specified RoleBinding
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  replaceRbacAuthorizationV1NamespacedRoleBinding(body:io_k8s_api_rbac_v1_RoleBindingInput!, namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleBindingResult
  """
    replace the specified ClusterRole
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1beta1/clusterroles/{name}`
    """
  replaceRbacAuthorizationV1beta1ClusterRole(body:io_k8s_api_rbac_v1beta1_ClusterRoleInput!, name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  """
    replace the specified ClusterRoleBinding
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/{name}`
    """
  replaceRbacAuthorizationV1beta1ClusterRoleBinding(body:io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput!, name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  """
    replace the specified Role
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles/{name}`
    """
  replaceRbacAuthorizationV1beta1NamespacedRole(body:io_k8s_api_rbac_v1beta1_RoleInput!, namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleResult
  """
    replace the specified RoleBinding
    
    **endpoint:** `PUT /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings/{name}`
    """
  replaceRbacAuthorizationV1beta1NamespacedRoleBinding(body:io_k8s_api_rbac_v1beta1_RoleBindingInput!, namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleBindingResult
  """
    replace the specified Route
    
    **endpoint:** `PUT /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}`
    """
  replaceRouteOpenshiftIoV1NamespacedRoute(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    replace status of the specified Route
    
    **endpoint:** `PUT /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}/status`
    """
  replaceRouteOpenshiftIoV1NamespacedRouteStatus(body:com_github_openshift_api_route_v1_RouteInput!, namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    replace the specified PriorityClass
    
    **endpoint:** `PUT /apis/scheduling.k8s.io/v1beta1/priorityclasses/{name}`
    """
  replaceSchedulingV1beta1PriorityClass(body:io_k8s_api_scheduling_v1beta1_PriorityClassInput!, name:String!):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  """
    replace the specified RangeAllocation
    
    **endpoint:** `PUT /apis/security.openshift.io/v1/rangeallocations/{name}`
    """
  replaceSecurityOpenshiftIoV1RangeAllocation(body:com_github_openshift_api_security_v1_RangeAllocationInput!, name:String!):com_github_openshift_api_security_v1_RangeAllocationResult
  """
    replace the specified SecurityContextConstraints
    
    **endpoint:** `PUT /apis/security.openshift.io/v1/securitycontextconstraints/{name}`
    """
  replaceSecurityOpenshiftIoV1SecurityContextConstraints(body:com_github_openshift_api_security_v1_SecurityContextConstraintsInput!, name:String!):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    replace the specified StorageClass
    
    **endpoint:** `PUT /apis/storage.k8s.io/v1/storageclasses/{name}`
    """
  replaceStorageV1StorageClass(body:io_k8s_api_storage_v1_StorageClassInput!, name:String!):io_k8s_api_storage_v1_StorageClassResult
  """
    replace the specified StorageClass
    
    **endpoint:** `PUT /apis/storage.k8s.io/v1beta1/storageclasses/{name}`
    """
  replaceStorageV1beta1StorageClass(body:io_k8s_api_storage_v1beta1_StorageClassInput!, name:String!):io_k8s_api_storage_v1beta1_StorageClassResult
  """
    replace the specified VolumeAttachment
    
    **endpoint:** `PUT /apis/storage.k8s.io/v1beta1/volumeattachments/{name}`
    """
  replaceStorageV1beta1VolumeAttachment(body:io_k8s_api_storage_v1beta1_VolumeAttachmentInput!, name:String!):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  """
    replace the specified BrokerTemplateInstance
    
    **endpoint:** `PUT /apis/template.openshift.io/v1/brokertemplateinstances/{name}`
    """
  replaceTemplateOpenshiftIoV1BrokerTemplateInstance(body:com_github_openshift_api_template_v1_BrokerTemplateInstanceInput!, name:String!):com_github_openshift_api_template_v1_BrokerTemplateInstanceResult
  """
    replace the specified Template
    
    **endpoint:** `PUT /apis/template.openshift.io/v1/namespaces/{namespace}/templates/{name}`
    """
  replaceTemplateOpenshiftIoV1NamespacedTemplate(body:com_github_openshift_api_template_v1_TemplateInput!, namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateResult
  """
    replace the specified TemplateInstance
    
    **endpoint:** `PUT /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}`
    """
  replaceTemplateOpenshiftIoV1NamespacedTemplateInstance(body:com_github_openshift_api_template_v1_TemplateInstanceInput!, namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    replace status of the specified TemplateInstance
    
    **endpoint:** `PUT /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}/status`
    """
  replaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(body:com_github_openshift_api_template_v1_TemplateInstanceInput!, namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    replace the specified User
    
    **endpoint:** `PUT /oapi/v1/users/{name}`
    """
  replaceUser(body:com_github_openshift_api_user_v1_UserInput!, name:String!):com_github_openshift_api_user_v1_UserResult
  """
    replace the specified UserIdentityMapping
    
    **endpoint:** `PUT /oapi/v1/useridentitymappings/{name}`
    """
  replaceUserIdentityMapping(body:com_github_openshift_api_user_v1_UserIdentityMappingInput!, name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    replace the specified Group
    
    **endpoint:** `PUT /apis/user.openshift.io/v1/groups/{name}`
    """
  replaceUserOpenshiftIoV1Group(body:com_github_openshift_api_user_v1_GroupInput!, name:String!):com_github_openshift_api_user_v1_GroupResult
  """
    replace the specified Identity
    
    **endpoint:** `PUT /apis/user.openshift.io/v1/identities/{name}`
    """
  replaceUserOpenshiftIoV1Identity(body:com_github_openshift_api_user_v1_IdentityInput!, name:String!):com_github_openshift_api_user_v1_IdentityResult
  """
    replace the specified User
    
    **endpoint:** `PUT /apis/user.openshift.io/v1/users/{name}`
    """
  replaceUserOpenshiftIoV1User(body:com_github_openshift_api_user_v1_UserInput!, name:String!):com_github_openshift_api_user_v1_UserResult
  """
    replace the specified UserIdentityMapping
    
    **endpoint:** `PUT /apis/user.openshift.io/v1/useridentitymappings/{name}`
    """
  replaceUserOpenshiftIoV1UserIdentityMapping(body:com_github_openshift_api_user_v1_UserIdentityMappingInput!, name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
}
type Query {
  """
    connect GET requests to attach of Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/attach`
    """
  connectCoreV1GetNamespacedPodAttach(namespace:String!, name:String!):String
  """
    connect GET requests to exec of Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/exec`
    """
  connectCoreV1GetNamespacedPodExec(namespace:String!, name:String!):String
  """
    connect GET requests to portforward of Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/portforward`
    """
  connectCoreV1GetNamespacedPodPortforward(namespace:String!, name:String!):String
  """
    connect GET requests to proxy of Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1GetNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect GET requests to proxy of Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1GetNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect GET requests to proxy of Service
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1GetNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect GET requests to proxy of Service
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1GetNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect GET requests to proxy of Node
    
    **endpoint:** `GET /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1GetNodeProxy(name:String!):String
  """
    connect GET requests to proxy of Node
    
    **endpoint:** `GET /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1GetNodeProxyWithPath(name:String!, path:String!):String
  """
    connect HEAD requests to proxy of Pod
    
    **endpoint:** `HEAD /api/v1/namespaces/{namespace}/pods/{name}/proxy`
    """
  connectCoreV1HeadNamespacedPodProxy(namespace:String!, name:String!):String
  """
    connect HEAD requests to proxy of Pod
    
    **endpoint:** `HEAD /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}`
    """
  connectCoreV1HeadNamespacedPodProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect HEAD requests to proxy of Service
    
    **endpoint:** `HEAD /api/v1/namespaces/{namespace}/services/{name}/proxy`
    """
  connectCoreV1HeadNamespacedServiceProxy(namespace:String!, name:String!):String
  """
    connect HEAD requests to proxy of Service
    
    **endpoint:** `HEAD /api/v1/namespaces/{namespace}/services/{name}/proxy/{path}`
    """
  connectCoreV1HeadNamespacedServiceProxyWithPath(namespace:String!, name:String!, path:String!):String
  """
    connect HEAD requests to proxy of Node
    
    **endpoint:** `HEAD /api/v1/nodes/{name}/proxy`
    """
  connectCoreV1HeadNodeProxy(name:String!):String
  """
    connect HEAD requests to proxy of Node
    
    **endpoint:** `HEAD /api/v1/nodes/{name}/proxy/{path}`
    """
  connectCoreV1HeadNodeProxyWithPath(name:String!, path:String!):String
  """
    get available resources
    
    **endpoint:** `GET /oapi/v1/`
    """
  getAPIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available API versions
    
    **endpoint:** `GET /apis/`
    """
  getAPIVersions:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/`
    """
  getAdmissionregistrationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/`
    """
  getAdmissionregistrationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/`
    """
  getApiregistrationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/`
    """
  getApiregistrationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/`
    """
  getApiregistrationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/apps/`
    """
  getAppsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/apps.openshift.io/`
    """
  getAppsOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/`
    """
  getAppsOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apps/v1/`
    """
  getAppsV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apps/v1beta1/`
    """
  getAppsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/apps/v1beta2/`
    """
  getAppsV1beta2APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/authentication.k8s.io/`
    """
  getAuthenticationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/authentication.k8s.io/v1/`
    """
  getAuthenticationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/authentication.k8s.io/v1beta1/`
    """
  getAuthenticationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/authorization.k8s.io/`
    """
  getAuthorizationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/authorization.openshift.io/`
    """
  getAuthorizationOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/`
    """
  getAuthorizationOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/authorization.k8s.io/v1/`
    """
  getAuthorizationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/authorization.k8s.io/v1beta1/`
    """
  getAuthorizationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/autoscaling/`
    """
  getAutoscalingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/autoscaling/v1/`
    """
  getAutoscalingV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/`
    """
  getAutoscalingV2beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/batch/`
    """
  getBatchAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/batch/v1/`
    """
  getBatchV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/batch/v1beta1/`
    """
  getBatchV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/build.openshift.io/`
    """
  getBuildOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/build.openshift.io/v1/`
    """
  getBuildOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/certificates.k8s.io/`
    """
  getCertificatesAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/`
    """
  getCertificatesV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available API versions
    
    **endpoint:** `GET /api/`
    """
  getCoreLegacyAPIVersions:io_k8s_apimachinery_pkg_apis_meta_v1_APIVersionsResult
  """
    get available resources
    
    **endpoint:** `GET /api/v1/`
    """
  getCoreV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/events.k8s.io/`
    """
  getEventsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/`
    """
  getEventsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/extensions/`
    """
  getExtensionsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/extensions/v1beta1/`
    """
  getExtensionsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/image.openshift.io/`
    """
  getImageOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/image.openshift.io/v1/`
    """
  getImageOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available API versions
    
    **endpoint:** `GET /oapi/`
    """
  getLegacyAPIVersions:io_k8s_apimachinery_pkg_apis_meta_v1_APIVersionsResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/network.openshift.io/`
    """
  getNetworkOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/network.openshift.io/v1/`
    """
  getNetworkOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/networking.k8s.io/`
    """
  getNetworkingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/`
    """
  getNetworkingV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/oauth.openshift.io/`
    """
  getOauthOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/`
    """
  getOauthOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/policy/`
    """
  getPolicyAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/policy/v1beta1/`
    """
  getPolicyV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/project.openshift.io/`
    """
  getProjectOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/project.openshift.io/v1/`
    """
  getProjectOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/quota.openshift.io/`
    """
  getQuotaOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/`
    """
  getQuotaOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/`
    """
  getRbacAuthorizationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/`
    """
  getRbacAuthorizationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/`
    """
  getRbacAuthorizationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/route.openshift.io/`
    """
  getRouteOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/route.openshift.io/v1/`
    """
  getRouteOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/scheduling.k8s.io/`
    """
  getSchedulingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/scheduling.k8s.io/v1beta1/`
    """
  getSchedulingV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/security.openshift.io/`
    """
  getSecurityOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/security.openshift.io/v1/`
    """
  getSecurityOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/storage.k8s.io/`
    """
  getStorageAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/storage.k8s.io/v1/`
    """
  getStorageV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get available resources
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/`
    """
  getStorageV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/template.openshift.io/`
    """
  getTemplateOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/template.openshift.io/v1/`
    """
  getTemplateOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    get information of a group
    
    **endpoint:** `GET /apis/user.openshift.io/`
    """
  getUserOpenshiftIoAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  """
    get available resources
    
    **endpoint:** `GET /apis/user.openshift.io/v1/`
    """
  getUserOpenshiftIoV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  """
    list or watch objects of kind MutatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations`
    """
  listAdmissionregistrationV1beta1MutatingWebhookConfiguration(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationListResult
  """
    list or watch objects of kind ValidatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations`
    """
  listAdmissionregistrationV1beta1ValidatingWebhookConfiguration(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationListResult
  """
    list or watch objects of kind APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/apiservices`
    """
  listApiregistrationV1APIService(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceListResult
  """
    list or watch objects of kind APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/apiservices`
    """
  listApiregistrationV1beta1APIService(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceListResult
  """
    list objects of kind AppliedClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/appliedclusterresourcequotas`
    """
  listAppliedClusterResourceQuotaForAllNamespaces:com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaListResult
  """
    list or watch objects of kind DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/deploymentconfigs`
    """
  listAppsOpenshiftIoV1DeploymentConfigForAllNamespaces:com_github_openshift_api_apps_v1_DeploymentConfigListResult
  """
    list or watch objects of kind DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs`
    """
  listAppsOpenshiftIoV1NamespacedDeploymentConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_apps_v1_DeploymentConfigListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/controllerrevisions`
    """
  listAppsV1ControllerRevisionForAllNamespaces:io_k8s_api_apps_v1_ControllerRevisionListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/daemonsets`
    """
  listAppsV1DaemonSetForAllNamespaces:io_k8s_api_apps_v1_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1/deployments`
    """
  listAppsV1DeploymentForAllNamespaces:io_k8s_api_apps_v1_DeploymentListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/controllerrevisions`
    """
  listAppsV1NamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1_ControllerRevisionListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/daemonsets`
    """
  listAppsV1NamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/deployments`
    """
  listAppsV1NamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1_DeploymentListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/replicasets`
    """
  listAppsV1NamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1_ReplicaSetListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/statefulsets`
    """
  listAppsV1NamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1_StatefulSetListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/replicasets`
    """
  listAppsV1ReplicaSetForAllNamespaces:io_k8s_api_apps_v1_ReplicaSetListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/statefulsets`
    """
  listAppsV1StatefulSetForAllNamespaces:io_k8s_api_apps_v1_StatefulSetListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/controllerrevisions`
    """
  listAppsV1beta1ControllerRevisionForAllNamespaces:io_k8s_api_apps_v1beta1_ControllerRevisionListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/deployments`
    """
  listAppsV1beta1DeploymentForAllNamespaces:io_k8s_api_apps_v1beta1_DeploymentListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions`
    """
  listAppsV1beta1NamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta1_ControllerRevisionListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/deployments`
    """
  listAppsV1beta1NamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta1_DeploymentListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/statefulsets`
    """
  listAppsV1beta1NamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta1_StatefulSetListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/statefulsets`
    """
  listAppsV1beta1StatefulSetForAllNamespaces:io_k8s_api_apps_v1beta1_StatefulSetListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/controllerrevisions`
    """
  listAppsV1beta2ControllerRevisionForAllNamespaces:io_k8s_api_apps_v1beta2_ControllerRevisionListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/daemonsets`
    """
  listAppsV1beta2DaemonSetForAllNamespaces:io_k8s_api_apps_v1beta2_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/deployments`
    """
  listAppsV1beta2DeploymentForAllNamespaces:io_k8s_api_apps_v1beta2_DeploymentListResult
  """
    list or watch objects of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions`
    """
  listAppsV1beta2NamespacedControllerRevision(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta2_ControllerRevisionListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/daemonsets`
    """
  listAppsV1beta2NamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta2_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/deployments`
    """
  listAppsV1beta2NamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta2_DeploymentListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/replicasets`
    """
  listAppsV1beta2NamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta2_ReplicaSetListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/statefulsets`
    """
  listAppsV1beta2NamespacedStatefulSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_apps_v1beta2_StatefulSetListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/replicasets`
    """
  listAppsV1beta2ReplicaSetForAllNamespaces:io_k8s_api_apps_v1beta2_ReplicaSetListResult
  """
    list or watch objects of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/statefulsets`
    """
  listAppsV1beta2StatefulSetForAllNamespaces:io_k8s_api_apps_v1beta2_StatefulSetListResult
  """
    list objects of kind ClusterRole
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/clusterroles`
    """
  listAuthorizationOpenshiftIoV1ClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_authorization_v1_ClusterRoleListResult
  """
    list objects of kind ClusterRoleBinding
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/clusterrolebindings`
    """
  listAuthorizationOpenshiftIoV1ClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_authorization_v1_ClusterRoleBindingListResult
  """
    list objects of kind Role
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles`
    """
  listAuthorizationOpenshiftIoV1NamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleListResult
  """
    list objects of kind RoleBinding
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings`
    """
  listAuthorizationOpenshiftIoV1NamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingListResult
  """
    list or watch objects of kind RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingRestrictionListResult
  """
    list objects of kind RoleBinding
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/rolebindings`
    """
  listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces:com_github_openshift_api_authorization_v1_RoleBindingListResult
  """
    list or watch objects of kind RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/rolebindingrestrictions`
    """
  listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces:com_github_openshift_api_authorization_v1_RoleBindingRestrictionListResult
  """
    list objects of kind Role
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/roles`
    """
  listAuthorizationOpenshiftIoV1RoleForAllNamespaces:com_github_openshift_api_authorization_v1_RoleListResult
  """
    list or watch objects of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/horizontalpodautoscalers`
    """
  listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult
  """
    list or watch objects of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  listAutoscalingV1NamespacedHorizontalPodAutoscaler(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult
  """
    list or watch objects of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/horizontalpodautoscalers`
    """
  listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult
  """
    list or watch objects of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers`
    """
  listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult
  """
    list or watch objects of kind Job
    
    **endpoint:** `GET /apis/batch/v1/jobs`
    """
  listBatchV1JobForAllNamespaces:io_k8s_api_batch_v1_JobListResult
  """
    list or watch objects of kind Job
    
    **endpoint:** `GET /apis/batch/v1/namespaces/{namespace}/jobs`
    """
  listBatchV1NamespacedJob(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_batch_v1_JobListResult
  """
    list or watch objects of kind CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/cronjobs`
    """
  listBatchV1beta1CronJobForAllNamespaces:io_k8s_api_batch_v1beta1_CronJobListResult
  """
    list or watch objects of kind CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/namespaces/{namespace}/cronjobs`
    """
  listBatchV1beta1NamespacedCronJob(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_batch_v1beta1_CronJobListResult
  """
    list or watch objects of kind BuildConfig
    
    **endpoint:** `GET /oapi/v1/buildconfigs`
    """
  listBuildConfigForAllNamespaces:com_github_openshift_api_build_v1_BuildConfigListResult
  """
    list or watch objects of kind Build
    
    **endpoint:** `GET /oapi/v1/builds`
    """
  listBuildForAllNamespaces:com_github_openshift_api_build_v1_BuildListResult
  """
    list or watch objects of kind BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/buildconfigs`
    """
  listBuildOpenshiftIoV1BuildConfigForAllNamespaces:com_github_openshift_api_build_v1_BuildConfigListResult
  """
    list or watch objects of kind Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/builds`
    """
  listBuildOpenshiftIoV1BuildForAllNamespaces:com_github_openshift_api_build_v1_BuildListResult
  """
    list or watch objects of kind Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/namespaces/{namespace}/builds`
    """
  listBuildOpenshiftIoV1NamespacedBuild(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_build_v1_BuildListResult
  """
    list or watch objects of kind BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs`
    """
  listBuildOpenshiftIoV1NamespacedBuildConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_build_v1_BuildConfigListResult
  """
    list or watch objects of kind CertificateSigningRequest
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/certificatesigningrequests`
    """
  listCertificatesV1beta1CertificateSigningRequest(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestListResult
  """
    list or watch objects of kind ClusterNetwork
    
    **endpoint:** `GET /oapi/v1/clusternetworks`
    """
  listClusterNetwork(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_ClusterNetworkListResult
  """
    list or watch objects of kind ClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/clusterresourcequotas`
    """
  listClusterResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_quota_v1_ClusterResourceQuotaListResult
  """
    list objects of kind ClusterRole
    
    **endpoint:** `GET /oapi/v1/clusterroles`
    """
  listClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_authorization_v1_ClusterRoleListResult
  """
    list objects of kind ClusterRoleBinding
    
    **endpoint:** `GET /oapi/v1/clusterrolebindings`
    """
  listClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_authorization_v1_ClusterRoleBindingListResult
  """
    list objects of kind ComponentStatus
    
    **endpoint:** `GET /api/v1/componentstatuses`
    """
  listCoreV1ComponentStatus:io_k8s_api_core_v1_ComponentStatusListResult
  """
    list or watch objects of kind ConfigMap
    
    **endpoint:** `GET /api/v1/configmaps`
    """
  listCoreV1ConfigMapForAllNamespaces:io_k8s_api_core_v1_ConfigMapListResult
  """
    list or watch objects of kind Endpoints
    
    **endpoint:** `GET /api/v1/endpoints`
    """
  listCoreV1EndpointsForAllNamespaces:io_k8s_api_core_v1_EndpointsListResult
  """
    list or watch objects of kind Event
    
    **endpoint:** `GET /api/v1/events`
    """
  listCoreV1EventForAllNamespaces:io_k8s_api_core_v1_EventListResult
  """
    list or watch objects of kind LimitRange
    
    **endpoint:** `GET /api/v1/limitranges`
    """
  listCoreV1LimitRangeForAllNamespaces:io_k8s_api_core_v1_LimitRangeListResult
  """
    list or watch objects of kind Namespace
    
    **endpoint:** `GET /api/v1/namespaces`
    """
  listCoreV1Namespace(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_core_v1_NamespaceListResult
  """
    list or watch objects of kind ConfigMap
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/configmaps`
    """
  listCoreV1NamespacedConfigMap(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_ConfigMapListResult
  """
    list or watch objects of kind Endpoints
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/endpoints`
    """
  listCoreV1NamespacedEndpoints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_EndpointsListResult
  """
    list or watch objects of kind Event
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/events`
    """
  listCoreV1NamespacedEvent(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_EventListResult
  """
    list or watch objects of kind LimitRange
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/limitranges`
    """
  listCoreV1NamespacedLimitRange(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_LimitRangeListResult
  """
    list or watch objects of kind PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/persistentvolumeclaims`
    """
  listCoreV1NamespacedPersistentVolumeClaim(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_PersistentVolumeClaimListResult
  """
    list or watch objects of kind Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods`
    """
  listCoreV1NamespacedPod(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_PodListResult
  """
    list or watch objects of kind PodTemplate
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/podtemplates`
    """
  listCoreV1NamespacedPodTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_PodTemplateListResult
  """
    list or watch objects of kind ReplicationController
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/replicationcontrollers`
    """
  listCoreV1NamespacedReplicationController(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_ReplicationControllerListResult
  """
    list or watch objects of kind ResourceQuota
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/resourcequotas`
    """
  listCoreV1NamespacedResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_ResourceQuotaListResult
  """
    list or watch objects of kind Secret
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/secrets`
    """
  listCoreV1NamespacedSecret(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_SecretListResult
  """
    list or watch objects of kind Service
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/services`
    """
  listCoreV1NamespacedService(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_ServiceListResult
  """
    list or watch objects of kind ServiceAccount
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/serviceaccounts`
    """
  listCoreV1NamespacedServiceAccount(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_core_v1_ServiceAccountListResult
  """
    list or watch objects of kind Node
    
    **endpoint:** `GET /api/v1/nodes`
    """
  listCoreV1Node(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_core_v1_NodeListResult
  """
    list or watch objects of kind PersistentVolume
    
    **endpoint:** `GET /api/v1/persistentvolumes`
    """
  listCoreV1PersistentVolume(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_core_v1_PersistentVolumeListResult
  """
    list or watch objects of kind PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/persistentvolumeclaims`
    """
  listCoreV1PersistentVolumeClaimForAllNamespaces:io_k8s_api_core_v1_PersistentVolumeClaimListResult
  """
    list or watch objects of kind Pod
    
    **endpoint:** `GET /api/v1/pods`
    """
  listCoreV1PodForAllNamespaces:io_k8s_api_core_v1_PodListResult
  """
    list or watch objects of kind PodTemplate
    
    **endpoint:** `GET /api/v1/podtemplates`
    """
  listCoreV1PodTemplateForAllNamespaces:io_k8s_api_core_v1_PodTemplateListResult
  """
    list or watch objects of kind ReplicationController
    
    **endpoint:** `GET /api/v1/replicationcontrollers`
    """
  listCoreV1ReplicationControllerForAllNamespaces:io_k8s_api_core_v1_ReplicationControllerListResult
  """
    list or watch objects of kind ResourceQuota
    
    **endpoint:** `GET /api/v1/resourcequotas`
    """
  listCoreV1ResourceQuotaForAllNamespaces:io_k8s_api_core_v1_ResourceQuotaListResult
  """
    list or watch objects of kind Secret
    
    **endpoint:** `GET /api/v1/secrets`
    """
  listCoreV1SecretForAllNamespaces:io_k8s_api_core_v1_SecretListResult
  """
    list or watch objects of kind SecurityContextConstraints
    
    **endpoint:** `GET /api/v1/securitycontextconstraints`
    """
  listCoreV1SecurityContextConstraints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_security_v1_SecurityContextConstraintsListResult
  """
    list or watch objects of kind ServiceAccount
    
    **endpoint:** `GET /api/v1/serviceaccounts`
    """
  listCoreV1ServiceAccountForAllNamespaces:io_k8s_api_core_v1_ServiceAccountListResult
  """
    list or watch objects of kind Service
    
    **endpoint:** `GET /api/v1/services`
    """
  listCoreV1ServiceForAllNamespaces:io_k8s_api_core_v1_ServiceListResult
  """
    list or watch objects of kind DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/deploymentconfigs`
    """
  listDeploymentConfigForAllNamespaces:com_github_openshift_api_apps_v1_DeploymentConfigListResult
  """
    list or watch objects of kind EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/egressnetworkpolicies`
    """
  listEgressNetworkPolicyForAllNamespaces:com_github_openshift_api_network_v1_EgressNetworkPolicyListResult
  """
    list or watch objects of kind Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/events`
    """
  listEventsV1beta1EventForAllNamespaces:io_k8s_api_events_v1beta1_EventListResult
  """
    list or watch objects of kind Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events`
    """
  listEventsV1beta1NamespacedEvent(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_events_v1beta1_EventListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/daemonsets`
    """
  listExtensionsV1beta1DaemonSetForAllNamespaces:io_k8s_api_extensions_v1beta1_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/deployments`
    """
  listExtensionsV1beta1DeploymentForAllNamespaces:io_k8s_api_extensions_v1beta1_DeploymentListResult
  """
    list or watch objects of kind Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/ingresses`
    """
  listExtensionsV1beta1IngressForAllNamespaces:io_k8s_api_extensions_v1beta1_IngressListResult
  """
    list or watch objects of kind DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets`
    """
  listExtensionsV1beta1NamespacedDaemonSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_extensions_v1beta1_DaemonSetListResult
  """
    list or watch objects of kind Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/deployments`
    """
  listExtensionsV1beta1NamespacedDeployment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_extensions_v1beta1_DeploymentListResult
  """
    list or watch objects of kind Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/ingresses`
    """
  listExtensionsV1beta1NamespacedIngress(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_extensions_v1beta1_IngressListResult
  """
    list or watch objects of kind NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies`
    """
  listExtensionsV1beta1NamespacedNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_extensions_v1beta1_NetworkPolicyListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/replicasets`
    """
  listExtensionsV1beta1NamespacedReplicaSet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_extensions_v1beta1_ReplicaSetListResult
  """
    list or watch objects of kind NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/networkpolicies`
    """
  listExtensionsV1beta1NetworkPolicyForAllNamespaces:io_k8s_api_extensions_v1beta1_NetworkPolicyListResult
  """
    list or watch objects of kind PodSecurityPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/podsecuritypolicies`
    """
  listExtensionsV1beta1PodSecurityPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_extensions_v1beta1_PodSecurityPolicyListResult
  """
    list or watch objects of kind ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/replicasets`
    """
  listExtensionsV1beta1ReplicaSetForAllNamespaces:io_k8s_api_extensions_v1beta1_ReplicaSetListResult
  """
    list or watch objects of kind Group
    
    **endpoint:** `GET /oapi/v1/groups`
    """
  listGroup(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_GroupListResult
  """
    list or watch objects of kind HostSubnet
    
    **endpoint:** `GET /oapi/v1/hostsubnets`
    """
  listHostSubnet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_HostSubnetListResult
  """
    list or watch objects of kind Identity
    
    **endpoint:** `GET /oapi/v1/identities`
    """
  listIdentity(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_IdentityListResult
  """
    list or watch objects of kind Image
    
    **endpoint:** `GET /oapi/v1/images`
    """
  listImage(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_image_v1_ImageListResult
  """
    list or watch objects of kind Image
    
    **endpoint:** `GET /apis/image.openshift.io/v1/images`
    """
  listImageOpenshiftIoV1Image(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_image_v1_ImageListResult
  """
    list or watch objects of kind ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/imagestreams`
    """
  listImageOpenshiftIoV1ImageStreamForAllNamespaces:com_github_openshift_api_image_v1_ImageStreamListResult
  """
    list objects of kind ImageStreamTag
    
    **endpoint:** `GET /apis/image.openshift.io/v1/imagestreamtags`
    """
  listImageOpenshiftIoV1ImageStreamTagForAllNamespaces:com_github_openshift_api_image_v1_ImageStreamTagListResult
  """
    list or watch objects of kind ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams`
    """
  listImageOpenshiftIoV1NamespacedImageStream(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_image_v1_ImageStreamListResult
  """
    list objects of kind ImageStreamTag
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags`
    """
  listImageOpenshiftIoV1NamespacedImageStreamTag(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_image_v1_ImageStreamTagListResult
  """
    list or watch objects of kind ImageStream
    
    **endpoint:** `GET /oapi/v1/imagestreams`
    """
  listImageStreamForAllNamespaces:com_github_openshift_api_image_v1_ImageStreamListResult
  """
    list objects of kind ImageStreamTag
    
    **endpoint:** `GET /oapi/v1/imagestreamtags`
    """
  listImageStreamTagForAllNamespaces:com_github_openshift_api_image_v1_ImageStreamTagListResult
  """
    list objects of kind AppliedClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/appliedclusterresourcequotas`
    """
  listNamespacedAppliedClusterResourceQuota(namespace:String!):com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaListResult
  """
    list or watch objects of kind Build
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/builds`
    """
  listNamespacedBuild(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_build_v1_BuildListResult
  """
    list or watch objects of kind BuildConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/buildconfigs`
    """
  listNamespacedBuildConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_build_v1_BuildConfigListResult
  """
    list or watch objects of kind DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/deploymentconfigs`
    """
  listNamespacedDeploymentConfig(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_apps_v1_DeploymentConfigListResult
  """
    list or watch objects of kind EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  listNamespacedEgressNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_network_v1_EgressNetworkPolicyListResult
  """
    list or watch objects of kind ImageStream
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreams`
    """
  listNamespacedImageStream(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_image_v1_ImageStreamListResult
  """
    list objects of kind ImageStreamTag
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreamtags`
    """
  listNamespacedImageStreamTag(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_image_v1_ImageStreamTagListResult
  """
    list objects of kind Role
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/roles`
    """
  listNamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleListResult
  """
    list objects of kind RoleBinding
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/rolebindings`
    """
  listNamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingListResult
  """
    list or watch objects of kind RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/rolebindingrestrictions`
    """
  listNamespacedRoleBindingRestriction(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingRestrictionListResult
  """
    list or watch objects of kind Route
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/routes`
    """
  listNamespacedRoute(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_route_v1_RouteListResult
  """
    list or watch objects of kind Template
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/templates`
    """
  listNamespacedTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_template_v1_TemplateListResult
  """
    list or watch objects of kind NetNamespace
    
    **endpoint:** `GET /oapi/v1/netnamespaces`
    """
  listNetNamespace(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_NetNamespaceListResult
  """
    list or watch objects of kind ClusterNetwork
    
    **endpoint:** `GET /apis/network.openshift.io/v1/clusternetworks`
    """
  listNetworkOpenshiftIoV1ClusterNetwork(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_ClusterNetworkListResult
  """
    list or watch objects of kind EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/egressnetworkpolicies`
    """
  listNetworkOpenshiftIoV1EgressNetworkPolicyForAllNamespaces:com_github_openshift_api_network_v1_EgressNetworkPolicyListResult
  """
    list or watch objects of kind HostSubnet
    
    **endpoint:** `GET /apis/network.openshift.io/v1/hostsubnets`
    """
  listNetworkOpenshiftIoV1HostSubnet(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_HostSubnetListResult
  """
    list or watch objects of kind EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies`
    """
  listNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_network_v1_EgressNetworkPolicyListResult
  """
    list or watch objects of kind NetNamespace
    
    **endpoint:** `GET /apis/network.openshift.io/v1/netnamespaces`
    """
  listNetworkOpenshiftIoV1NetNamespace(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_network_v1_NetNamespaceListResult
  """
    list or watch objects of kind NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`
    """
  listNetworkingV1NamespacedNetworkPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_networking_v1_NetworkPolicyListResult
  """
    list or watch objects of kind NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/networkpolicies`
    """
  listNetworkingV1NetworkPolicyForAllNamespaces:io_k8s_api_networking_v1_NetworkPolicyListResult
  """
    list or watch objects of kind OAuthAccessToken
    
    **endpoint:** `GET /oapi/v1/oauthaccesstokens`
    """
  listOAuthAccessToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthAccessTokenListResult
  """
    list or watch objects of kind OAuthAuthorizeToken
    
    **endpoint:** `GET /oapi/v1/oauthauthorizetokens`
    """
  listOAuthAuthorizeToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenListResult
  """
    list or watch objects of kind OAuthClient
    
    **endpoint:** `GET /oapi/v1/oauthclients`
    """
  listOAuthClient(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthClientListResult
  """
    list or watch objects of kind OAuthClientAuthorization
    
    **endpoint:** `GET /oapi/v1/oauthclientauthorizations`
    """
  listOAuthClientAuthorization(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationListResult
  """
    list or watch objects of kind OAuthAccessToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthaccesstokens`
    """
  listOauthOpenshiftIoV1OAuthAccessToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthAccessTokenListResult
  """
    list or watch objects of kind OAuthAuthorizeToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthauthorizetokens`
    """
  listOauthOpenshiftIoV1OAuthAuthorizeToken(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenListResult
  """
    list or watch objects of kind OAuthClient
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthclients`
    """
  listOauthOpenshiftIoV1OAuthClient(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthClientListResult
  """
    list or watch objects of kind OAuthClientAuthorization
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthclientauthorizations`
    """
  listOauthOpenshiftIoV1OAuthClientAuthorization(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationListResult
  """
    list or watch objects of kind PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets`
    """
  listPolicyV1beta1NamespacedPodDisruptionBudget(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult
  """
    list or watch objects of kind PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/poddisruptionbudgets`
    """
  listPolicyV1beta1PodDisruptionBudgetForAllNamespaces:io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult
  """
    list or watch objects of kind PodSecurityPolicy
    
    **endpoint:** `GET /apis/policy/v1beta1/podsecuritypolicies`
    """
  listPolicyV1beta1PodSecurityPolicy(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyListResult
  """
    list or watch objects of kind Project
    
    **endpoint:** `GET /oapi/v1/projects`
    """
  listProject(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_project_v1_ProjectListResult
  """
    list or watch objects of kind Project
    
    **endpoint:** `GET /apis/project.openshift.io/v1/projects`
    """
  listProjectOpenshiftIoV1Project(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_project_v1_ProjectListResult
  """
    list objects of kind ProjectRequest
    
    **endpoint:** `GET /apis/project.openshift.io/v1/projectrequests`
    """
  listProjectOpenshiftIoV1ProjectRequest(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    list objects of kind ProjectRequest
    
    **endpoint:** `GET /oapi/v1/projectrequests`
    """
  listProjectRequest(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  """
    list objects of kind AppliedClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/appliedclusterresourcequotas`
    """
  listQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespaces:com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaListResult
  """
    list or watch objects of kind ClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/clusterresourcequotas`
    """
  listQuotaOpenshiftIoV1ClusterResourceQuota(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_quota_v1_ClusterResourceQuotaListResult
  """
    list objects of kind AppliedClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/namespaces/{namespace}/appliedclusterresourcequotas`
    """
  listQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota(namespace:String!):com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaListResult
  """
    list or watch objects of kind ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/clusterroles`
    """
  listRbacAuthorizationV1ClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_rbac_v1_ClusterRoleListResult
  """
    list or watch objects of kind ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/clusterrolebindings`
    """
  listRbacAuthorizationV1ClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_rbac_v1_ClusterRoleBindingListResult
  """
    list or watch objects of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`
    """
  listRbacAuthorizationV1NamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_rbac_v1_RoleListResult
  """
    list or watch objects of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`
    """
  listRbacAuthorizationV1NamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_rbac_v1_RoleBindingListResult
  """
    list or watch objects of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/rolebindings`
    """
  listRbacAuthorizationV1RoleBindingForAllNamespaces:io_k8s_api_rbac_v1_RoleBindingListResult
  """
    list or watch objects of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/roles`
    """
  listRbacAuthorizationV1RoleForAllNamespaces:io_k8s_api_rbac_v1_RoleListResult
  """
    list or watch objects of kind ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/clusterroles`
    """
  listRbacAuthorizationV1beta1ClusterRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_ClusterRoleListResult
  """
    list or watch objects of kind ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings`
    """
  listRbacAuthorizationV1beta1ClusterRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_ClusterRoleBindingListResult
  """
    list or watch objects of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles`
    """
  listRbacAuthorizationV1beta1NamespacedRole(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_rbac_v1beta1_RoleListResult
  """
    list or watch objects of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings`
    """
  listRbacAuthorizationV1beta1NamespacedRoleBinding(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):io_k8s_api_rbac_v1beta1_RoleBindingListResult
  """
    list or watch objects of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/rolebindings`
    """
  listRbacAuthorizationV1beta1RoleBindingForAllNamespaces:io_k8s_api_rbac_v1beta1_RoleBindingListResult
  """
    list or watch objects of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/roles`
    """
  listRbacAuthorizationV1beta1RoleForAllNamespaces:io_k8s_api_rbac_v1beta1_RoleListResult
  """
    list objects of kind RoleBinding
    
    **endpoint:** `GET /oapi/v1/rolebindings`
    """
  listRoleBindingForAllNamespaces:com_github_openshift_api_authorization_v1_RoleBindingListResult
  """
    list or watch objects of kind RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/rolebindingrestrictions`
    """
  listRoleBindingRestrictionForAllNamespaces:com_github_openshift_api_authorization_v1_RoleBindingRestrictionListResult
  """
    list objects of kind Role
    
    **endpoint:** `GET /oapi/v1/roles`
    """
  listRoleForAllNamespaces:com_github_openshift_api_authorization_v1_RoleListResult
  """
    list or watch objects of kind Route
    
    **endpoint:** `GET /oapi/v1/routes`
    """
  listRouteForAllNamespaces:com_github_openshift_api_route_v1_RouteListResult
  """
    list or watch objects of kind Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/namespaces/{namespace}/routes`
    """
  listRouteOpenshiftIoV1NamespacedRoute(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_route_v1_RouteListResult
  """
    list or watch objects of kind Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/routes`
    """
  listRouteOpenshiftIoV1RouteForAllNamespaces:com_github_openshift_api_route_v1_RouteListResult
  """
    list or watch objects of kind PriorityClass
    
    **endpoint:** `GET /apis/scheduling.k8s.io/v1beta1/priorityclasses`
    """
  listSchedulingV1beta1PriorityClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_scheduling_v1beta1_PriorityClassListResult
  """
    list or watch objects of kind RangeAllocation
    
    **endpoint:** `GET /apis/security.openshift.io/v1/rangeallocations`
    """
  listSecurityOpenshiftIoV1RangeAllocation(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_security_v1_RangeAllocationListResult
  """
    list or watch objects of kind SecurityContextConstraints
    
    **endpoint:** `GET /apis/security.openshift.io/v1/securitycontextconstraints`
    """
  listSecurityOpenshiftIoV1SecurityContextConstraints(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_security_v1_SecurityContextConstraintsListResult
  """
    list or watch objects of kind StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1/storageclasses`
    """
  listStorageV1StorageClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_storage_v1_StorageClassListResult
  """
    list or watch objects of kind StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/storageclasses`
    """
  listStorageV1beta1StorageClass(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_StorageClassListResult
  """
    list or watch objects of kind VolumeAttachment
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/volumeattachments`
    """
  listStorageV1beta1VolumeAttachment(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentListResult
  """
    list or watch objects of kind Template
    
    **endpoint:** `GET /oapi/v1/templates`
    """
  listTemplateForAllNamespaces:com_github_openshift_api_template_v1_TemplateListResult
  """
    list or watch objects of kind BrokerTemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/brokertemplateinstances`
    """
  listTemplateOpenshiftIoV1BrokerTemplateInstance(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_template_v1_BrokerTemplateInstanceListResult
  """
    list or watch objects of kind Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/namespaces/{namespace}/templates`
    """
  listTemplateOpenshiftIoV1NamespacedTemplate(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_template_v1_TemplateListResult
  """
    list or watch objects of kind TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances`
    """
  listTemplateOpenshiftIoV1NamespacedTemplateInstance(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean, namespace:String!
  ):com_github_openshift_api_template_v1_TemplateInstanceListResult
  """
    list or watch objects of kind Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/templates`
    """
  listTemplateOpenshiftIoV1TemplateForAllNamespaces:com_github_openshift_api_template_v1_TemplateListResult
  """
    list or watch objects of kind TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/templateinstances`
    """
  listTemplateOpenshiftIoV1TemplateInstanceForAllNamespaces:com_github_openshift_api_template_v1_TemplateInstanceListResult
  """
    list or watch objects of kind User
    
    **endpoint:** `GET /oapi/v1/users`
    """
  listUser(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_UserListResult
  """
    list or watch objects of kind Group
    
    **endpoint:** `GET /apis/user.openshift.io/v1/groups`
    """
  listUserOpenshiftIoV1Group(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_GroupListResult
  """
    list or watch objects of kind Identity
    
    **endpoint:** `GET /apis/user.openshift.io/v1/identities`
    """
  listUserOpenshiftIoV1Identity(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_IdentityListResult
  """
    list or watch objects of kind User
    
    **endpoint:** `GET /apis/user.openshift.io/v1/users`
    """
  listUserOpenshiftIoV1User(  
    "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
    continue:String,   
    "A selector to restrict the list of returned objects by their fields. Defaults to everything."
    fieldSelector:String,   
    "If true, partially initialized resources are included in the response."
    includeUninitialized:Boolean,   
    "A selector to restrict the list of returned objects by their labels. Defaults to everything."
    labelSelector:String,   
    """
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
        
        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        """
    limit:Int,   
    "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
    resourceVersion:String,   
    "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
    timeoutSeconds:Int,   
    "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
    watch:Boolean
  ):com_github_openshift_api_user_v1_UserListResult
  """
    read the specified MutatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/{name}`
    """
  readAdmissionregistrationV1beta1MutatingWebhookConfiguration(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  """
    read the specified ValidatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/{name}`
    """
  readAdmissionregistrationV1beta1ValidatingWebhookConfiguration(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  """
    read the specified APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/apiservices/{name}`
    """
  readApiregistrationV1APIService(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    read status of the specified APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/apiservices/{name}/status`
    """
  readApiregistrationV1APIServiceStatus(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  """
    read the specified APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}`
    """
  readApiregistrationV1beta1APIService(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    read status of the specified APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/apiservices/{name}/status`
    """
  readApiregistrationV1beta1APIServiceStatus(name:String!):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  """
    read the specified DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  readAppsOpenshiftIoV1NamespacedDeploymentConfig(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    read log of the specified DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/log`
    """
  readAppsOpenshiftIoV1NamespacedDeploymentConfigLog(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentLogResult
  """
    read scale of the specified DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  readAppsOpenshiftIoV1NamespacedDeploymentConfigScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    read status of the specified DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  readAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    read the specified ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  readAppsV1NamespacedControllerRevision(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1_ControllerRevisionResult
  """
    read the specified DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`
    """
  readAppsV1NamespacedDaemonSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1_DaemonSetResult
  """
    read status of the specified DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  readAppsV1NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_DaemonSetResult
  """
    read the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/deployments/{name}`
    """
  readAppsV1NamespacedDeployment(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1_DeploymentResult
  """
    read scale of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale`
    """
  readAppsV1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    read status of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/deployments/{name}/status`
    """
  readAppsV1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_DeploymentResult
  """
    read the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/replicasets/{name}`
    """
  readAppsV1NamespacedReplicaSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1_ReplicaSetResult
  """
    read scale of the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  readAppsV1NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    read status of the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status`
    """
  readAppsV1NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_ReplicaSetResult
  """
    read the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`
    """
  readAppsV1NamespacedStatefulSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1_StatefulSetResult
  """
    read scale of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  readAppsV1NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    read status of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  readAppsV1NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1_StatefulSetResult
  """
    read the specified ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions/{name}`
    """
  readAppsV1beta1NamespacedControllerRevision(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta1_ControllerRevisionResult
  """
    read the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  readAppsV1beta1NamespacedDeployment(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    read scale of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  readAppsV1beta1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    read status of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  readAppsV1beta1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_DeploymentResult
  """
    read the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}`
    """
  readAppsV1beta1NamespacedStatefulSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    read scale of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  readAppsV1beta1NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_ScaleResult
  """
    read status of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/status`
    """
  readAppsV1beta1NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta1_StatefulSetResult
  """
    read the specified ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/controllerrevisions/{name}`
    """
  readAppsV1beta2NamespacedControllerRevision(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta2_ControllerRevisionResult
  """
    read the specified DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}`
    """
  readAppsV1beta2NamespacedDaemonSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    read status of the specified DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/daemonsets/{name}/status`
    """
  readAppsV1beta2NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DaemonSetResult
  """
    read the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}`
    """
  readAppsV1beta2NamespacedDeployment(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    read scale of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale`
    """
  readAppsV1beta2NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    read status of the specified Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status`
    """
  readAppsV1beta2NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_DeploymentResult
  """
    read the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}`
    """
  readAppsV1beta2NamespacedReplicaSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    read scale of the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/scale`
    """
  readAppsV1beta2NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    read status of the specified ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/replicasets/{name}/status`
    """
  readAppsV1beta2NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ReplicaSetResult
  """
    read the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}`
    """
  readAppsV1beta2NamespacedStatefulSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    read scale of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/scale`
    """
  readAppsV1beta2NamespacedStatefulSetScale(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_ScaleResult
  """
    read status of the specified StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/namespaces/{namespace}/statefulsets/{name}/status`
    """
  readAppsV1beta2NamespacedStatefulSetStatus(namespace:String!, name:String!):io_k8s_api_apps_v1beta2_StatefulSetResult
  """
    read the specified ClusterRole
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/clusterroles/{name}`
    """
  readAuthorizationOpenshiftIoV1ClusterRole(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    read the specified ClusterRoleBinding
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/clusterrolebindings/{name}`
    """
  readAuthorizationOpenshiftIoV1ClusterRoleBinding(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    read the specified Role
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/roles/{name}`
    """
  readAuthorizationOpenshiftIoV1NamespacedRole(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    read the specified RoleBinding
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  readAuthorizationOpenshiftIoV1NamespacedRoleBinding(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    read the specified RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    read the specified HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  readAutoscalingV1NamespacedHorizontalPodAutoscaler(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    read status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  """
    read the specified HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    read status of the specified HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status`
    """
  readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(namespace:String!, name:String!):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  """
    read the specified Job
    
    **endpoint:** `GET /apis/batch/v1/namespaces/{namespace}/jobs/{name}`
    """
  readBatchV1NamespacedJob(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_batch_v1_JobResult
  """
    read status of the specified Job
    
    **endpoint:** `GET /apis/batch/v1/namespaces/{namespace}/jobs/{name}/status`
    """
  readBatchV1NamespacedJobStatus(namespace:String!, name:String!):io_k8s_api_batch_v1_JobResult
  """
    read the specified CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}`
    """
  readBatchV1beta1NamespacedCronJob(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_batch_v1beta1_CronJobResult
  """
    read status of the specified CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}/status`
    """
  readBatchV1beta1NamespacedCronJobStatus(namespace:String!, name:String!):io_k8s_api_batch_v1beta1_CronJobResult
  """
    read the specified Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}`
    """
  readBuildOpenshiftIoV1NamespacedBuild(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_build_v1_BuildResult
  """
    read the specified BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  readBuildOpenshiftIoV1NamespacedBuildConfig(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_build_v1_BuildConfigResult
  """
    read log of the specified Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}/log`
    """
  readBuildOpenshiftIoV1NamespacedBuildLog(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildLogResult
  """
    read the specified CertificateSigningRequest
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}`
    """
  readCertificatesV1beta1CertificateSigningRequest(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    read status of the specified CertificateSigningRequest
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/status`
    """
  readCertificatesV1beta1CertificateSigningRequestStatus(name:String!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  """
    read the specified ClusterNetwork
    
    **endpoint:** `GET /oapi/v1/clusternetworks/{name}`
    """
  readClusterNetwork(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    read the specified ClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/clusterresourcequotas/{name}`
    """
  readClusterResourceQuota(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    read status of the specified ClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/clusterresourcequotas/{name}/status`
    """
  readClusterResourceQuotaStatus(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    read the specified ClusterRole
    
    **endpoint:** `GET /oapi/v1/clusterroles/{name}`
    """
  readClusterRole(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleResult
  """
    read the specified ClusterRoleBinding
    
    **endpoint:** `GET /oapi/v1/clusterrolebindings/{name}`
    """
  readClusterRoleBinding(name:String!):com_github_openshift_api_authorization_v1_ClusterRoleBindingResult
  """
    read the specified ComponentStatus
    
    **endpoint:** `GET /api/v1/componentstatuses/{name}`
    """
  readCoreV1ComponentStatus(name:String!):io_k8s_api_core_v1_ComponentStatusResult
  """
    read the specified Namespace
    
    **endpoint:** `GET /api/v1/namespaces/{name}`
    """
  readCoreV1Namespace(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_core_v1_NamespaceResult
  """
    read status of the specified Namespace
    
    **endpoint:** `GET /api/v1/namespaces/{name}/status`
    """
  readCoreV1NamespaceStatus(name:String!):io_k8s_api_core_v1_NamespaceResult
  """
    read the specified ConfigMap
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/configmaps/{name}`
    """
  readCoreV1NamespacedConfigMap(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_ConfigMapResult
  """
    read the specified Endpoints
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/endpoints/{name}`
    """
  readCoreV1NamespacedEndpoints(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_EndpointsResult
  """
    read the specified Event
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/events/{name}`
    """
  readCoreV1NamespacedEvent(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_EventResult
  """
    read the specified LimitRange
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/limitranges/{name}`
    """
  readCoreV1NamespacedLimitRange(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_LimitRangeResult
  """
    read the specified PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`
    """
  readCoreV1NamespacedPersistentVolumeClaim(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    read status of the specified PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status`
    """
  readCoreV1NamespacedPersistentVolumeClaimStatus(namespace:String!, name:String!):io_k8s_api_core_v1_PersistentVolumeClaimResult
  """
    read the specified Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}`
    """
  readCoreV1NamespacedPod(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_PodResult
  """
    read log of the specified Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/log`
    """
  readCoreV1NamespacedPodLog(namespace:String!, name:String!):String
  """
    read status of the specified Pod
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/pods/{name}/status`
    """
  readCoreV1NamespacedPodStatus(namespace:String!, name:String!):io_k8s_api_core_v1_PodResult
  """
    read the specified PodTemplate
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/podtemplates/{name}`
    """
  readCoreV1NamespacedPodTemplate(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_PodTemplateResult
  """
    read the specified ReplicationController
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/replicationcontrollers/{name}`
    """
  readCoreV1NamespacedReplicationController(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_ReplicationControllerResult
  """
    read scale of the specified ReplicationController
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  readCoreV1NamespacedReplicationControllerScale(namespace:String!, name:String!):io_k8s_api_autoscaling_v1_ScaleResult
  """
    read status of the specified ReplicationController
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status`
    """
  readCoreV1NamespacedReplicationControllerStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ReplicationControllerResult
  """
    read the specified ResourceQuota
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/resourcequotas/{name}`
    """
  readCoreV1NamespacedResourceQuota(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_ResourceQuotaResult
  """
    read status of the specified ResourceQuota
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/resourcequotas/{name}/status`
    """
  readCoreV1NamespacedResourceQuotaStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ResourceQuotaResult
  """
    read the specified Secret
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/secrets/{name}`
    """
  readCoreV1NamespacedSecret(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_SecretResult
  """
    read the specified Service
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/services/{name}`
    """
  readCoreV1NamespacedService(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_ServiceResult
  """
    read the specified ServiceAccount
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/serviceaccounts/{name}`
    """
  readCoreV1NamespacedServiceAccount(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_core_v1_ServiceAccountResult
  """
    read status of the specified Service
    
    **endpoint:** `GET /api/v1/namespaces/{namespace}/services/{name}/status`
    """
  readCoreV1NamespacedServiceStatus(namespace:String!, name:String!):io_k8s_api_core_v1_ServiceResult
  """
    read the specified Node
    
    **endpoint:** `GET /api/v1/nodes/{name}`
    """
  readCoreV1Node(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_core_v1_NodeResult
  """
    read status of the specified Node
    
    **endpoint:** `GET /api/v1/nodes/{name}/status`
    """
  readCoreV1NodeStatus(name:String!):io_k8s_api_core_v1_NodeResult
  """
    read the specified PersistentVolume
    
    **endpoint:** `GET /api/v1/persistentvolumes/{name}`
    """
  readCoreV1PersistentVolume(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_core_v1_PersistentVolumeResult
  """
    read status of the specified PersistentVolume
    
    **endpoint:** `GET /api/v1/persistentvolumes/{name}/status`
    """
  readCoreV1PersistentVolumeStatus(name:String!):io_k8s_api_core_v1_PersistentVolumeResult
  """
    read the specified SecurityContextConstraints
    
    **endpoint:** `GET /api/v1/securitycontextconstraints/{name}`
    """
  readCoreV1SecurityContextConstraints(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    read the specified Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/namespaces/{namespace}/events/{name}`
    """
  readEventsV1beta1NamespacedEvent(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_events_v1beta1_EventResult
  """
    read the specified DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}`
    """
  readExtensionsV1beta1NamespacedDaemonSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    read status of the specified DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status`
    """
  readExtensionsV1beta1NamespacedDaemonSetStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DaemonSetResult
  """
    read the specified Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}`
    """
  readExtensionsV1beta1NamespacedDeployment(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    read scale of the specified Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale`
    """
  readExtensionsV1beta1NamespacedDeploymentScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    read status of the specified Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status`
    """
  readExtensionsV1beta1NamespacedDeploymentStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_DeploymentResult
  """
    read the specified Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}`
    """
  readExtensionsV1beta1NamespacedIngress(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_extensions_v1beta1_IngressResult
  """
    read status of the specified Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status`
    """
  readExtensionsV1beta1NamespacedIngressStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_IngressResult
  """
    read the specified NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}`
    """
  readExtensionsV1beta1NamespacedNetworkPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_extensions_v1beta1_NetworkPolicyResult
  """
    read the specified ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}`
    """
  readExtensionsV1beta1NamespacedReplicaSet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    read scale of the specified ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale`
    """
  readExtensionsV1beta1NamespacedReplicaSetScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    read status of the specified ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status`
    """
  readExtensionsV1beta1NamespacedReplicaSetStatus(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ReplicaSetResult
  """
    read scale of the specified ReplicationControllerDummy
    
    **endpoint:** `GET /apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale`
    """
  readExtensionsV1beta1NamespacedReplicationControllerDummyScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    read the specified PodSecurityPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/podsecuritypolicies/{name}`
    """
  readExtensionsV1beta1PodSecurityPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult
  """
    read the specified Group
    
    **endpoint:** `GET /oapi/v1/groups/{name}`
    """
  readGroup(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_GroupResult
  """
    read the specified HostSubnet
    
    **endpoint:** `GET /oapi/v1/hostsubnets/{name}`
    """
  readHostSubnet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_HostSubnetResult
  """
    read the specified Identity
    
    **endpoint:** `GET /oapi/v1/identities/{name}`
    """
  readIdentity(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_IdentityResult
  """
    read the specified Image
    
    **endpoint:** `GET /oapi/v1/images/{name}`
    """
  readImage(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_image_v1_ImageResult
  """
    read the specified Image
    
    **endpoint:** `GET /apis/image.openshift.io/v1/images/{name}`
    """
  readImageOpenshiftIoV1Image(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_image_v1_ImageResult
  """
    read the specified ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  readImageOpenshiftIoV1NamespacedImageStream(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_image_v1_ImageStreamResult
  """
    read the specified ImageStreamImage
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamimages/{name}`
    """
  readImageOpenshiftIoV1NamespacedImageStreamImage(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamImageResult
  """
    read layers of the specified ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}/layers`
    """
  readImageOpenshiftIoV1NamespacedImageStreamLayers(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamLayersResult
  """
    read secrets of the specified ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}/secrets`
    """
  readImageOpenshiftIoV1NamespacedImageStreamSecrets(namespace:String!, name:String!):io_k8s_api_core_v1_SecretListResult
  """
    read status of the specified ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  readImageOpenshiftIoV1NamespacedImageStreamStatus(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    read the specified ImageStreamTag
    
    **endpoint:** `GET /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  readImageOpenshiftIoV1NamespacedImageStreamTag(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    read the specified AppliedClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/appliedclusterresourcequotas/{name}`
    """
  readNamespacedAppliedClusterResourceQuota(namespace:String!, name:String!):com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaResult
  """
    read the specified Build
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/builds/{name}`
    """
  readNamespacedBuild(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_build_v1_BuildResult
  """
    read the specified BuildConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/buildconfigs/{name}`
    """
  readNamespacedBuildConfig(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_build_v1_BuildConfigResult
  """
    read log of the specified Build
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/builds/{name}/log`
    """
  readNamespacedBuildLog(namespace:String!, name:String!):com_github_openshift_api_build_v1_BuildLogResult
  """
    read the specified DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  readNamespacedDeploymentConfig(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    read log of the specified DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/log`
    """
  readNamespacedDeploymentConfigLog(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentLogResult
  """
    read scale of the specified DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale`
    """
  readNamespacedDeploymentConfigScale(namespace:String!, name:String!):io_k8s_api_extensions_v1beta1_ScaleResult
  """
    read status of the specified DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/status`
    """
  readNamespacedDeploymentConfigStatus(namespace:String!, name:String!):com_github_openshift_api_apps_v1_DeploymentConfigResult
  """
    read the specified EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  readNamespacedEgressNetworkPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    read the specified ImageStream
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreams/{name}`
    """
  readNamespacedImageStream(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_image_v1_ImageStreamResult
  """
    read the specified ImageStreamImage
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreamimages/{name}`
    """
  readNamespacedImageStreamImage(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamImageResult
  """
    read secrets of the specified ImageStream
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreams/{name}/secrets`
    """
  readNamespacedImageStreamSecrets(namespace:String!, name:String!):io_k8s_api_core_v1_SecretListResult
  """
    read status of the specified ImageStream
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreams/{name}/status`
    """
  readNamespacedImageStreamStatus(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamResult
  """
    read the specified ImageStreamTag
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/imagestreamtags/{name}`
    """
  readNamespacedImageStreamTag(namespace:String!, name:String!):com_github_openshift_api_image_v1_ImageStreamTagResult
  """
    read the specified Role
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/roles/{name}`
    """
  readNamespacedRole(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleResult
  """
    read the specified RoleBinding
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  readNamespacedRoleBinding(namespace:String!, name:String!):com_github_openshift_api_authorization_v1_RoleBindingResult
  """
    read the specified RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  readNamespacedRoleBindingRestriction(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult
  """
    read the specified Route
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/routes/{name}`
    """
  readNamespacedRoute(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_route_v1_RouteResult
  """
    read status of the specified Route
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/routes/{name}/status`
    """
  readNamespacedRouteStatus(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    read the specified Template
    
    **endpoint:** `GET /oapi/v1/namespaces/{namespace}/templates/{name}`
    """
  readNamespacedTemplate(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_template_v1_TemplateResult
  """
    read the specified NetNamespace
    
    **endpoint:** `GET /oapi/v1/netnamespaces/{name}`
    """
  readNetNamespace(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    read the specified ClusterNetwork
    
    **endpoint:** `GET /apis/network.openshift.io/v1/clusternetworks/{name}`
    """
  readNetworkOpenshiftIoV1ClusterNetwork(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_ClusterNetworkResult
  """
    read the specified HostSubnet
    
    **endpoint:** `GET /apis/network.openshift.io/v1/hostsubnets/{name}`
    """
  readNetworkOpenshiftIoV1HostSubnet(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_HostSubnetResult
  """
    read the specified EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  readNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_network_v1_EgressNetworkPolicyResult
  """
    read the specified NetNamespace
    
    **endpoint:** `GET /apis/network.openshift.io/v1/netnamespaces/{name}`
    """
  readNetworkOpenshiftIoV1NetNamespace(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_network_v1_NetNamespaceResult
  """
    read the specified NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`
    """
  readNetworkingV1NamespacedNetworkPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_networking_v1_NetworkPolicyResult
  """
    read the specified OAuthAccessToken
    
    **endpoint:** `GET /oapi/v1/oauthaccesstokens/{name}`
    """
  readOAuthAccessToken(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    read the specified OAuthAuthorizeToken
    
    **endpoint:** `GET /oapi/v1/oauthauthorizetokens/{name}`
    """
  readOAuthAuthorizeToken(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    read the specified OAuthClient
    
    **endpoint:** `GET /oapi/v1/oauthclients/{name}`
    """
  readOAuthClient(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    read the specified OAuthClientAuthorization
    
    **endpoint:** `GET /oapi/v1/oauthclientauthorizations/{name}`
    """
  readOAuthClientAuthorization(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    read the specified OAuthAccessToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthaccesstokens/{name}`
    """
  readOauthOpenshiftIoV1OAuthAccessToken(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthAccessTokenResult
  """
    read the specified OAuthAuthorizeToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthauthorizetokens/{name}`
    """
  readOauthOpenshiftIoV1OAuthAuthorizeToken(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult
  """
    read the specified OAuthClient
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthclients/{name}`
    """
  readOauthOpenshiftIoV1OAuthClient(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthClientResult
  """
    read the specified OAuthClientAuthorization
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/oauthclientauthorizations/{name}`
    """
  readOauthOpenshiftIoV1OAuthClientAuthorization(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult
  """
    read the specified PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}`
    """
  readPolicyV1beta1NamespacedPodDisruptionBudget(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    read status of the specified PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}/status`
    """
  readPolicyV1beta1NamespacedPodDisruptionBudgetStatus(namespace:String!, name:String!):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  """
    read the specified PodSecurityPolicy
    
    **endpoint:** `GET /apis/policy/v1beta1/podsecuritypolicies/{name}`
    """
  readPolicyV1beta1PodSecurityPolicy(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  """
    read the specified Project
    
    **endpoint:** `GET /oapi/v1/projects/{name}`
    """
  readProject(name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    read the specified Project
    
    **endpoint:** `GET /apis/project.openshift.io/v1/projects/{name}`
    """
  readProjectOpenshiftIoV1Project(name:String!):com_github_openshift_api_project_v1_ProjectResult
  """
    read the specified ClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/clusterresourcequotas/{name}`
    """
  readQuotaOpenshiftIoV1ClusterResourceQuota(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    read status of the specified ClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/clusterresourcequotas/{name}/status`
    """
  readQuotaOpenshiftIoV1ClusterResourceQuotaStatus(name:String!):com_github_openshift_api_quota_v1_ClusterResourceQuotaResult
  """
    read the specified AppliedClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/namespaces/{namespace}/appliedclusterresourcequotas/{name}`
    """
  readQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota(namespace:String!, name:String!):com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaResult
  """
    read the specified ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`
    """
  readRbacAuthorizationV1ClusterRole(name:String!):io_k8s_api_rbac_v1_ClusterRoleResult
  """
    read the specified ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`
    """
  readRbacAuthorizationV1ClusterRoleBinding(name:String!):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  """
    read the specified Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`
    """
  readRbacAuthorizationV1NamespacedRole(namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleResult
  """
    read the specified RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`
    """
  readRbacAuthorizationV1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_api_rbac_v1_RoleBindingResult
  """
    read the specified ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/clusterroles/{name}`
    """
  readRbacAuthorizationV1beta1ClusterRole(name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  """
    read the specified ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/{name}`
    """
  readRbacAuthorizationV1beta1ClusterRoleBinding(name:String!):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  """
    read the specified Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles/{name}`
    """
  readRbacAuthorizationV1beta1NamespacedRole(namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleResult
  """
    read the specified RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings/{name}`
    """
  readRbacAuthorizationV1beta1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_api_rbac_v1beta1_RoleBindingResult
  """
    read the specified Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}`
    """
  readRouteOpenshiftIoV1NamespacedRoute(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_route_v1_RouteResult
  """
    read status of the specified Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}/status`
    """
  readRouteOpenshiftIoV1NamespacedRouteStatus(namespace:String!, name:String!):com_github_openshift_api_route_v1_RouteResult
  """
    read the specified PriorityClass
    
    **endpoint:** `GET /apis/scheduling.k8s.io/v1beta1/priorityclasses/{name}`
    """
  readSchedulingV1beta1PriorityClass(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  """
    read the specified RangeAllocation
    
    **endpoint:** `GET /apis/security.openshift.io/v1/rangeallocations/{name}`
    """
  readSecurityOpenshiftIoV1RangeAllocation(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_security_v1_RangeAllocationResult
  """
    read the specified SecurityContextConstraints
    
    **endpoint:** `GET /apis/security.openshift.io/v1/securitycontextconstraints/{name}`
    """
  readSecurityOpenshiftIoV1SecurityContextConstraints(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_security_v1_SecurityContextConstraintsResult
  """
    read the specified StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1/storageclasses/{name}`
    """
  readStorageV1StorageClass(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_storage_v1_StorageClassResult
  """
    read the specified StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/storageclasses/{name}`
    """
  readStorageV1beta1StorageClass(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_storage_v1beta1_StorageClassResult
  """
    read the specified VolumeAttachment
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/volumeattachments/{name}`
    """
  readStorageV1beta1VolumeAttachment(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  """
    read the specified BrokerTemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/brokertemplateinstances/{name}`
    """
  readTemplateOpenshiftIoV1BrokerTemplateInstance(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_template_v1_BrokerTemplateInstanceResult
  """
    read the specified Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/namespaces/{namespace}/templates/{name}`
    """
  readTemplateOpenshiftIoV1NamespacedTemplate(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_template_v1_TemplateResult
  """
    read the specified TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}`
    """
  readTemplateOpenshiftIoV1NamespacedTemplateInstance(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, namespace:String!, name:String!
  ):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    read status of the specified TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}/status`
    """
  readTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(namespace:String!, name:String!):com_github_openshift_api_template_v1_TemplateInstanceResult
  """
    read the specified User
    
    **endpoint:** `GET /oapi/v1/users/{name}`
    """
  readUser(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_UserResult
  """
    read the specified UserIdentityMapping
    
    **endpoint:** `GET /oapi/v1/useridentitymappings/{name}`
    """
  readUserIdentityMapping(name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    read the specified Group
    
    **endpoint:** `GET /apis/user.openshift.io/v1/groups/{name}`
    """
  readUserOpenshiftIoV1Group(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_GroupResult
  """
    read the specified Identity
    
    **endpoint:** `GET /apis/user.openshift.io/v1/identities/{name}`
    """
  readUserOpenshiftIoV1Identity(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_IdentityResult
  """
    read the specified User
    
    **endpoint:** `GET /apis/user.openshift.io/v1/users/{name}`
    """
  readUserOpenshiftIoV1User(  
    "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'."
    exact:Boolean,   
    "Should this value be exported.  Export strips fields that a user can not specify."
    export:Boolean, name:String!
  ):com_github_openshift_api_user_v1_UserResult
  """
    read the specified UserIdentityMapping
    
    **endpoint:** `GET /apis/user.openshift.io/v1/useridentitymappings/{name}`
    """
  readUserOpenshiftIoV1UserIdentityMapping(name:String!):com_github_openshift_api_user_v1_UserIdentityMappingResult
  """
    watch changes to an object of kind MutatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/watch/mutatingwebhookconfigurations/{name}`
    """
  watchAdmissionregistrationV1beta1MutatingWebhookConfiguration(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of MutatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/watch/mutatingwebhookconfigurations`
    """
  watchAdmissionregistrationV1beta1MutatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ValidatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/watch/validatingwebhookconfigurations/{name}`
    """
  watchAdmissionregistrationV1beta1ValidatingWebhookConfiguration(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ValidatingWebhookConfiguration
    
    **endpoint:** `GET /apis/admissionregistration.k8s.io/v1beta1/watch/validatingwebhookconfigurations`
    """
  watchAdmissionregistrationV1beta1ValidatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/watch/apiservices/{name}`
    """
  watchApiregistrationV1APIService(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1/watch/apiservices`
    """
  watchApiregistrationV1APIServiceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/watch/apiservices/{name}`
    """
  watchApiregistrationV1beta1APIService(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of APIService
    
    **endpoint:** `GET /apis/apiregistration.k8s.io/v1beta1/watch/apiservices`
    """
  watchApiregistrationV1beta1APIServiceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/watch/deploymentconfigs`
    """
  watchAppsOpenshiftIoV1DeploymentConfigListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/watch/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  watchAppsOpenshiftIoV1NamespacedDeploymentConfig(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DeploymentConfig
    
    **endpoint:** `GET /apis/apps.openshift.io/v1/watch/namespaces/{namespace}/deploymentconfigs`
    """
  watchAppsOpenshiftIoV1NamespacedDeploymentConfigList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/watch/controllerrevisions`
    """
  watchAppsV1ControllerRevisionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/watch/daemonsets`
    """
  watchAppsV1DaemonSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1/watch/deployments`
    """
  watchAppsV1DeploymentListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions/{name}`
    """
  watchAppsV1NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions`
    """
  watchAppsV1NamespacedControllerRevisionList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/daemonsets/{name}`
    """
  watchAppsV1NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/daemonsets`
    """
  watchAppsV1NamespacedDaemonSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/deployments/{name}`
    """
  watchAppsV1NamespacedDeployment(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/deployments`
    """
  watchAppsV1NamespacedDeploymentList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/replicasets/{name}`
    """
  watchAppsV1NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/replicasets`
    """
  watchAppsV1NamespacedReplicaSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/statefulsets/{name}`
    """
  watchAppsV1NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/watch/namespaces/{namespace}/statefulsets`
    """
  watchAppsV1NamespacedStatefulSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1/watch/replicasets`
    """
  watchAppsV1ReplicaSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1/watch/statefulsets`
    """
  watchAppsV1StatefulSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/controllerrevisions`
    """
  watchAppsV1beta1ControllerRevisionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/deployments`
    """
  watchAppsV1beta1DeploymentListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/controllerrevisions/{name}`
    """
  watchAppsV1beta1NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/controllerrevisions`
    """
  watchAppsV1beta1NamespacedControllerRevisionList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/deployments/{name}`
    """
  watchAppsV1beta1NamespacedDeployment(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/deployments`
    """
  watchAppsV1beta1NamespacedDeploymentList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/statefulsets/{name}`
    """
  watchAppsV1beta1NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/namespaces/{namespace}/statefulsets`
    """
  watchAppsV1beta1NamespacedStatefulSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta1/watch/statefulsets`
    """
  watchAppsV1beta1StatefulSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/controllerrevisions`
    """
  watchAppsV1beta2ControllerRevisionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/daemonsets`
    """
  watchAppsV1beta2DaemonSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/deployments`
    """
  watchAppsV1beta2DeploymentListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/controllerrevisions/{name}`
    """
  watchAppsV1beta2NamespacedControllerRevision(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ControllerRevision
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/controllerrevisions`
    """
  watchAppsV1beta2NamespacedControllerRevisionList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/daemonsets/{name}`
    """
  watchAppsV1beta2NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/daemonsets`
    """
  watchAppsV1beta2NamespacedDaemonSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/deployments/{name}`
    """
  watchAppsV1beta2NamespacedDeployment(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/deployments`
    """
  watchAppsV1beta2NamespacedDeploymentList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/replicasets/{name}`
    """
  watchAppsV1beta2NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/replicasets`
    """
  watchAppsV1beta2NamespacedReplicaSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/statefulsets/{name}`
    """
  watchAppsV1beta2NamespacedStatefulSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/namespaces/{namespace}/statefulsets`
    """
  watchAppsV1beta2NamespacedStatefulSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/replicasets`
    """
  watchAppsV1beta2ReplicaSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StatefulSet
    
    **endpoint:** `GET /apis/apps/v1beta2/watch/statefulsets`
    """
  watchAppsV1beta2StatefulSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/watch/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/watch/namespaces/{namespace}/rolebindingrestrictions`
    """
  watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBindingRestriction
    
    **endpoint:** `GET /apis/authorization.openshift.io/v1/watch/rolebindingrestrictions`
    """
  watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/watch/horizontalpodautoscalers`
    """
  watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  watchAutoscalingV1NamespacedHorizontalPodAutoscaler(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers`
    """
  watchAutoscalingV1NamespacedHorizontalPodAutoscalerList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/watch/horizontalpodautoscalers`
    """
  watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}`
    """
  watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HorizontalPodAutoscaler
    
    **endpoint:** `GET /apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers`
    """
  watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Job
    
    **endpoint:** `GET /apis/batch/v1/watch/jobs`
    """
  watchBatchV1JobListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Job
    
    **endpoint:** `GET /apis/batch/v1/watch/namespaces/{namespace}/jobs/{name}`
    """
  watchBatchV1NamespacedJob(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Job
    
    **endpoint:** `GET /apis/batch/v1/watch/namespaces/{namespace}/jobs`
    """
  watchBatchV1NamespacedJobList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/watch/cronjobs`
    """
  watchBatchV1beta1CronJobListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/watch/namespaces/{namespace}/cronjobs/{name}`
    """
  watchBatchV1beta1NamespacedCronJob(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of CronJob
    
    **endpoint:** `GET /apis/batch/v1beta1/watch/namespaces/{namespace}/cronjobs`
    """
  watchBatchV1beta1NamespacedCronJobList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of BuildConfig
    
    **endpoint:** `GET /oapi/v1/watch/buildconfigs`
    """
  watchBuildConfigListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Build
    
    **endpoint:** `GET /oapi/v1/watch/builds`
    """
  watchBuildListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/buildconfigs`
    """
  watchBuildOpenshiftIoV1BuildConfigListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/builds`
    """
  watchBuildOpenshiftIoV1BuildListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/namespaces/{namespace}/builds/{name}`
    """
  watchBuildOpenshiftIoV1NamespacedBuild(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/namespaces/{namespace}/buildconfigs/{name}`
    """
  watchBuildOpenshiftIoV1NamespacedBuildConfig(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of BuildConfig
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/namespaces/{namespace}/buildconfigs`
    """
  watchBuildOpenshiftIoV1NamespacedBuildConfigList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Build
    
    **endpoint:** `GET /apis/build.openshift.io/v1/watch/namespaces/{namespace}/builds`
    """
  watchBuildOpenshiftIoV1NamespacedBuildList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind CertificateSigningRequest
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/watch/certificatesigningrequests/{name}`
    """
  watchCertificatesV1beta1CertificateSigningRequest(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of CertificateSigningRequest
    
    **endpoint:** `GET /apis/certificates.k8s.io/v1beta1/watch/certificatesigningrequests`
    """
  watchCertificatesV1beta1CertificateSigningRequestList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterNetwork
    
    **endpoint:** `GET /oapi/v1/watch/clusternetworks/{name}`
    """
  watchClusterNetwork(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterNetwork
    
    **endpoint:** `GET /oapi/v1/watch/clusternetworks`
    """
  watchClusterNetworkList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/watch/clusterresourcequotas/{name}`
    """
  watchClusterResourceQuota(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterResourceQuota
    
    **endpoint:** `GET /oapi/v1/watch/clusterresourcequotas`
    """
  watchClusterResourceQuotaList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ConfigMap
    
    **endpoint:** `GET /api/v1/watch/configmaps`
    """
  watchCoreV1ConfigMapListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Endpoints
    
    **endpoint:** `GET /api/v1/watch/endpoints`
    """
  watchCoreV1EndpointsListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Event
    
    **endpoint:** `GET /api/v1/watch/events`
    """
  watchCoreV1EventListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of LimitRange
    
    **endpoint:** `GET /api/v1/watch/limitranges`
    """
  watchCoreV1LimitRangeListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Namespace
    
    **endpoint:** `GET /api/v1/watch/namespaces/{name}`
    """
  watchCoreV1Namespace(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Namespace
    
    **endpoint:** `GET /api/v1/watch/namespaces`
    """
  watchCoreV1NamespaceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ConfigMap
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/configmaps/{name}`
    """
  watchCoreV1NamespacedConfigMap(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ConfigMap
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/configmaps`
    """
  watchCoreV1NamespacedConfigMapList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Endpoints
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/endpoints/{name}`
    """
  watchCoreV1NamespacedEndpoints(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Endpoints
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/endpoints`
    """
  watchCoreV1NamespacedEndpointsList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Event
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/events/{name}`
    """
  watchCoreV1NamespacedEvent(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Event
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/events`
    """
  watchCoreV1NamespacedEventList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind LimitRange
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/limitranges/{name}`
    """
  watchCoreV1NamespacedLimitRange(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of LimitRange
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/limitranges`
    """
  watchCoreV1NamespacedLimitRangeList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}`
    """
  watchCoreV1NamespacedPersistentVolumeClaim(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/persistentvolumeclaims`
    """
  watchCoreV1NamespacedPersistentVolumeClaimList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Pod
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/pods/{name}`
    """
  watchCoreV1NamespacedPod(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Pod
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/pods`
    """
  watchCoreV1NamespacedPodList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PodTemplate
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/podtemplates/{name}`
    """
  watchCoreV1NamespacedPodTemplate(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodTemplate
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/podtemplates`
    """
  watchCoreV1NamespacedPodTemplateList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ReplicationController
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}`
    """
  watchCoreV1NamespacedReplicationController(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicationController
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/replicationcontrollers`
    """
  watchCoreV1NamespacedReplicationControllerList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ResourceQuota
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/resourcequotas/{name}`
    """
  watchCoreV1NamespacedResourceQuota(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ResourceQuota
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/resourcequotas`
    """
  watchCoreV1NamespacedResourceQuotaList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Secret
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/secrets/{name}`
    """
  watchCoreV1NamespacedSecret(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Secret
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/secrets`
    """
  watchCoreV1NamespacedSecretList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Service
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/services/{name}`
    """
  watchCoreV1NamespacedService(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ServiceAccount
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}`
    """
  watchCoreV1NamespacedServiceAccount(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ServiceAccount
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/serviceaccounts`
    """
  watchCoreV1NamespacedServiceAccountList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Service
    
    **endpoint:** `GET /api/v1/watch/namespaces/{namespace}/services`
    """
  watchCoreV1NamespacedServiceList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Node
    
    **endpoint:** `GET /api/v1/watch/nodes/{name}`
    """
  watchCoreV1Node(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Node
    
    **endpoint:** `GET /api/v1/watch/nodes`
    """
  watchCoreV1NodeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PersistentVolume
    
    **endpoint:** `GET /api/v1/watch/persistentvolumes/{name}`
    """
  watchCoreV1PersistentVolume(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PersistentVolumeClaim
    
    **endpoint:** `GET /api/v1/watch/persistentvolumeclaims`
    """
  watchCoreV1PersistentVolumeClaimListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PersistentVolume
    
    **endpoint:** `GET /api/v1/watch/persistentvolumes`
    """
  watchCoreV1PersistentVolumeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Pod
    
    **endpoint:** `GET /api/v1/watch/pods`
    """
  watchCoreV1PodListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodTemplate
    
    **endpoint:** `GET /api/v1/watch/podtemplates`
    """
  watchCoreV1PodTemplateListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicationController
    
    **endpoint:** `GET /api/v1/watch/replicationcontrollers`
    """
  watchCoreV1ReplicationControllerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ResourceQuota
    
    **endpoint:** `GET /api/v1/watch/resourcequotas`
    """
  watchCoreV1ResourceQuotaListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Secret
    
    **endpoint:** `GET /api/v1/watch/secrets`
    """
  watchCoreV1SecretListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind SecurityContextConstraints
    
    **endpoint:** `GET /api/v1/watch/securitycontextconstraints/{name}`
    """
  watchCoreV1SecurityContextConstraints(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of SecurityContextConstraints
    
    **endpoint:** `GET /api/v1/watch/securitycontextconstraints`
    """
  watchCoreV1SecurityContextConstraintsList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ServiceAccount
    
    **endpoint:** `GET /api/v1/watch/serviceaccounts`
    """
  watchCoreV1ServiceAccountListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Service
    
    **endpoint:** `GET /api/v1/watch/services`
    """
  watchCoreV1ServiceListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/watch/deploymentconfigs`
    """
  watchDeploymentConfigListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/watch/egressnetworkpolicies`
    """
  watchEgressNetworkPolicyListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/watch/events`
    """
  watchEventsV1beta1EventListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/watch/namespaces/{namespace}/events/{name}`
    """
  watchEventsV1beta1NamespacedEvent(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Event
    
    **endpoint:** `GET /apis/events.k8s.io/v1beta1/watch/namespaces/{namespace}/events`
    """
  watchEventsV1beta1NamespacedEventList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/daemonsets`
    """
  watchExtensionsV1beta1DaemonSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/deployments`
    """
  watchExtensionsV1beta1DeploymentListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/ingresses`
    """
  watchExtensionsV1beta1IngressListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets/{name}`
    """
  watchExtensionsV1beta1NamespacedDaemonSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DaemonSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets`
    """
  watchExtensionsV1beta1NamespacedDaemonSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}`
    """
  watchExtensionsV1beta1NamespacedDeployment(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Deployment
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments`
    """
  watchExtensionsV1beta1NamespacedDeploymentList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses/{name}`
    """
  watchExtensionsV1beta1NamespacedIngress(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Ingress
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses`
    """
  watchExtensionsV1beta1NamespacedIngressList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies/{name}`
    """
  watchExtensionsV1beta1NamespacedNetworkPolicy(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies`
    """
  watchExtensionsV1beta1NamespacedNetworkPolicyList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets/{name}`
    """
  watchExtensionsV1beta1NamespacedReplicaSet(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets`
    """
  watchExtensionsV1beta1NamespacedReplicaSetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetworkPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/networkpolicies`
    """
  watchExtensionsV1beta1NetworkPolicyListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PodSecurityPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/podsecuritypolicies/{name}`
    """
  watchExtensionsV1beta1PodSecurityPolicy(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodSecurityPolicy
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/podsecuritypolicies`
    """
  watchExtensionsV1beta1PodSecurityPolicyList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ReplicaSet
    
    **endpoint:** `GET /apis/extensions/v1beta1/watch/replicasets`
    """
  watchExtensionsV1beta1ReplicaSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Group
    
    **endpoint:** `GET /oapi/v1/watch/groups/{name}`
    """
  watchGroup(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Group
    
    **endpoint:** `GET /oapi/v1/watch/groups`
    """
  watchGroupList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind HostSubnet
    
    **endpoint:** `GET /oapi/v1/watch/hostsubnets/{name}`
    """
  watchHostSubnet(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HostSubnet
    
    **endpoint:** `GET /oapi/v1/watch/hostsubnets`
    """
  watchHostSubnetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Identity
    
    **endpoint:** `GET /oapi/v1/watch/identities/{name}`
    """
  watchIdentity(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Identity
    
    **endpoint:** `GET /oapi/v1/watch/identities`
    """
  watchIdentityList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Image
    
    **endpoint:** `GET /oapi/v1/watch/images/{name}`
    """
  watchImage(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Image
    
    **endpoint:** `GET /oapi/v1/watch/images`
    """
  watchImageList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Image
    
    **endpoint:** `GET /apis/image.openshift.io/v1/watch/images/{name}`
    """
  watchImageOpenshiftIoV1Image(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Image
    
    **endpoint:** `GET /apis/image.openshift.io/v1/watch/images`
    """
  watchImageOpenshiftIoV1ImageList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/watch/imagestreams`
    """
  watchImageOpenshiftIoV1ImageStreamListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/watch/namespaces/{namespace}/imagestreams/{name}`
    """
  watchImageOpenshiftIoV1NamespacedImageStream(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ImageStream
    
    **endpoint:** `GET /apis/image.openshift.io/v1/watch/namespaces/{namespace}/imagestreams`
    """
  watchImageOpenshiftIoV1NamespacedImageStreamList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ImageStream
    
    **endpoint:** `GET /oapi/v1/watch/imagestreams`
    """
  watchImageStreamListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Build
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/builds/{name}`
    """
  watchNamespacedBuild(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind BuildConfig
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/buildconfigs/{name}`
    """
  watchNamespacedBuildConfig(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of BuildConfig
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/buildconfigs`
    """
  watchNamespacedBuildConfigList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Build
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/builds`
    """
  watchNamespacedBuildList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/deploymentconfigs/{name}`
    """
  watchNamespacedDeploymentConfig(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of DeploymentConfig
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/deploymentconfigs`
    """
  watchNamespacedDeploymentConfigList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  watchNamespacedEgressNetworkPolicy(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of EgressNetworkPolicy
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/egressnetworkpolicies`
    """
  watchNamespacedEgressNetworkPolicyList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ImageStream
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/imagestreams/{name}`
    """
  watchNamespacedImageStream(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ImageStream
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/imagestreams`
    """
  watchNamespacedImageStreamList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/rolebindingrestrictions/{name}`
    """
  watchNamespacedRoleBindingRestriction(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/rolebindingrestrictions`
    """
  watchNamespacedRoleBindingRestrictionList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Route
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/routes/{name}`
    """
  watchNamespacedRoute(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Route
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/routes`
    """
  watchNamespacedRouteList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Template
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/templates/{name}`
    """
  watchNamespacedTemplate(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Template
    
    **endpoint:** `GET /oapi/v1/watch/namespaces/{namespace}/templates`
    """
  watchNamespacedTemplateList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind NetNamespace
    
    **endpoint:** `GET /oapi/v1/watch/netnamespaces/{name}`
    """
  watchNetNamespace(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetNamespace
    
    **endpoint:** `GET /oapi/v1/watch/netnamespaces`
    """
  watchNetNamespaceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterNetwork
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/clusternetworks/{name}`
    """
  watchNetworkOpenshiftIoV1ClusterNetwork(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterNetwork
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/clusternetworks`
    """
  watchNetworkOpenshiftIoV1ClusterNetworkList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/egressnetworkpolicies`
    """
  watchNetworkOpenshiftIoV1EgressNetworkPolicyListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind HostSubnet
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/hostsubnets/{name}`
    """
  watchNetworkOpenshiftIoV1HostSubnet(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of HostSubnet
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/hostsubnets`
    """
  watchNetworkOpenshiftIoV1HostSubnetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/namespaces/{namespace}/egressnetworkpolicies/{name}`
    """
  watchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicy(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of EgressNetworkPolicy
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/namespaces/{namespace}/egressnetworkpolicies`
    """
  watchNetworkOpenshiftIoV1NamespacedEgressNetworkPolicyList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind NetNamespace
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/netnamespaces/{name}`
    """
  watchNetworkOpenshiftIoV1NetNamespace(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetNamespace
    
    **endpoint:** `GET /apis/network.openshift.io/v1/watch/netnamespaces`
    """
  watchNetworkOpenshiftIoV1NetNamespaceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}`
    """
  watchNetworkingV1NamespacedNetworkPolicy(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies`
    """
  watchNetworkingV1NamespacedNetworkPolicyList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of NetworkPolicy
    
    **endpoint:** `GET /apis/networking.k8s.io/v1/watch/networkpolicies`
    """
  watchNetworkingV1NetworkPolicyListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthAccessToken
    
    **endpoint:** `GET /oapi/v1/watch/oauthaccesstokens/{name}`
    """
  watchOAuthAccessToken(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthAccessToken
    
    **endpoint:** `GET /oapi/v1/watch/oauthaccesstokens`
    """
  watchOAuthAccessTokenList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthAuthorizeToken
    
    **endpoint:** `GET /oapi/v1/watch/oauthauthorizetokens/{name}`
    """
  watchOAuthAuthorizeToken(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthAuthorizeToken
    
    **endpoint:** `GET /oapi/v1/watch/oauthauthorizetokens`
    """
  watchOAuthAuthorizeTokenList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthClient
    
    **endpoint:** `GET /oapi/v1/watch/oauthclients/{name}`
    """
  watchOAuthClient(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthClientAuthorization
    
    **endpoint:** `GET /oapi/v1/watch/oauthclientauthorizations/{name}`
    """
  watchOAuthClientAuthorization(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthClientAuthorization
    
    **endpoint:** `GET /oapi/v1/watch/oauthclientauthorizations`
    """
  watchOAuthClientAuthorizationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthClient
    
    **endpoint:** `GET /oapi/v1/watch/oauthclients`
    """
  watchOAuthClientList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthAccessToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthaccesstokens/{name}`
    """
  watchOauthOpenshiftIoV1OAuthAccessToken(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthAccessToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthaccesstokens`
    """
  watchOauthOpenshiftIoV1OAuthAccessTokenList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthAuthorizeToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthauthorizetokens/{name}`
    """
  watchOauthOpenshiftIoV1OAuthAuthorizeToken(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthAuthorizeToken
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthauthorizetokens`
    """
  watchOauthOpenshiftIoV1OAuthAuthorizeTokenList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthClient
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthclients/{name}`
    """
  watchOauthOpenshiftIoV1OAuthClient(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind OAuthClientAuthorization
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthclientauthorizations/{name}`
    """
  watchOauthOpenshiftIoV1OAuthClientAuthorization(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthClientAuthorization
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthclientauthorizations`
    """
  watchOauthOpenshiftIoV1OAuthClientAuthorizationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of OAuthClient
    
    **endpoint:** `GET /apis/oauth.openshift.io/v1/watch/oauthclients`
    """
  watchOauthOpenshiftIoV1OAuthClientList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}`
    """
  watchPolicyV1beta1NamespacedPodDisruptionBudget(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets`
    """
  watchPolicyV1beta1NamespacedPodDisruptionBudgetList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodDisruptionBudget
    
    **endpoint:** `GET /apis/policy/v1beta1/watch/poddisruptionbudgets`
    """
  watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PodSecurityPolicy
    
    **endpoint:** `GET /apis/policy/v1beta1/watch/podsecuritypolicies/{name}`
    """
  watchPolicyV1beta1PodSecurityPolicy(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PodSecurityPolicy
    
    **endpoint:** `GET /apis/policy/v1beta1/watch/podsecuritypolicies`
    """
  watchPolicyV1beta1PodSecurityPolicyList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Project
    
    **endpoint:** `GET /oapi/v1/watch/projects/{name}`
    """
  watchProject(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Project
    
    **endpoint:** `GET /oapi/v1/watch/projects`
    """
  watchProjectList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Project
    
    **endpoint:** `GET /apis/project.openshift.io/v1/watch/projects/{name}`
    """
  watchProjectOpenshiftIoV1Project(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Project
    
    **endpoint:** `GET /apis/project.openshift.io/v1/watch/projects`
    """
  watchProjectOpenshiftIoV1ProjectList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/watch/clusterresourcequotas/{name}`
    """
  watchQuotaOpenshiftIoV1ClusterResourceQuota(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterResourceQuota
    
    **endpoint:** `GET /apis/quota.openshift.io/v1/watch/clusterresourcequotas`
    """
  watchQuotaOpenshiftIoV1ClusterResourceQuotaList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/clusterroles/{name}`
    """
  watchRbacAuthorizationV1ClusterRole(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings/{name}`
    """
  watchRbacAuthorizationV1ClusterRoleBinding(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings`
    """
  watchRbacAuthorizationV1ClusterRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/clusterroles`
    """
  watchRbacAuthorizationV1ClusterRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles/{name}`
    """
  watchRbacAuthorizationV1NamespacedRole(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings/{name}`
    """
  watchRbacAuthorizationV1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings`
    """
  watchRbacAuthorizationV1NamespacedRoleBindingList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles`
    """
  watchRbacAuthorizationV1NamespacedRoleList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/rolebindings`
    """
  watchRbacAuthorizationV1RoleBindingListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1/watch/roles`
    """
  watchRbacAuthorizationV1RoleListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/clusterroles/{name}`
    """
  watchRbacAuthorizationV1beta1ClusterRole(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/clusterrolebindings/{name}`
    """
  watchRbacAuthorizationV1beta1ClusterRoleBinding(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterRoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/clusterrolebindings`
    """
  watchRbacAuthorizationV1beta1ClusterRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of ClusterRole
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/clusterroles`
    """
  watchRbacAuthorizationV1beta1ClusterRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/roles/{name}`
    """
  watchRbacAuthorizationV1beta1NamespacedRole(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/rolebindings/{name}`
    """
  watchRbacAuthorizationV1beta1NamespacedRoleBinding(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/rolebindings`
    """
  watchRbacAuthorizationV1beta1NamespacedRoleBindingList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/roles`
    """
  watchRbacAuthorizationV1beta1NamespacedRoleList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBinding
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/rolebindings`
    """
  watchRbacAuthorizationV1beta1RoleBindingListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Role
    
    **endpoint:** `GET /apis/rbac.authorization.k8s.io/v1beta1/watch/roles`
    """
  watchRbacAuthorizationV1beta1RoleListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RoleBindingRestriction
    
    **endpoint:** `GET /oapi/v1/watch/rolebindingrestrictions`
    """
  watchRoleBindingRestrictionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Route
    
    **endpoint:** `GET /oapi/v1/watch/routes`
    """
  watchRouteListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/watch/namespaces/{namespace}/routes/{name}`
    """
  watchRouteOpenshiftIoV1NamespacedRoute(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/watch/namespaces/{namespace}/routes`
    """
  watchRouteOpenshiftIoV1NamespacedRouteList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Route
    
    **endpoint:** `GET /apis/route.openshift.io/v1/watch/routes`
    """
  watchRouteOpenshiftIoV1RouteListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind PriorityClass
    
    **endpoint:** `GET /apis/scheduling.k8s.io/v1beta1/watch/priorityclasses/{name}`
    """
  watchSchedulingV1beta1PriorityClass(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of PriorityClass
    
    **endpoint:** `GET /apis/scheduling.k8s.io/v1beta1/watch/priorityclasses`
    """
  watchSchedulingV1beta1PriorityClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind RangeAllocation
    
    **endpoint:** `GET /apis/security.openshift.io/v1/watch/rangeallocations/{name}`
    """
  watchSecurityOpenshiftIoV1RangeAllocation(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of RangeAllocation
    
    **endpoint:** `GET /apis/security.openshift.io/v1/watch/rangeallocations`
    """
  watchSecurityOpenshiftIoV1RangeAllocationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind SecurityContextConstraints
    
    **endpoint:** `GET /apis/security.openshift.io/v1/watch/securitycontextconstraints/{name}`
    """
  watchSecurityOpenshiftIoV1SecurityContextConstraints(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of SecurityContextConstraints
    
    **endpoint:** `GET /apis/security.openshift.io/v1/watch/securitycontextconstraints`
    """
  watchSecurityOpenshiftIoV1SecurityContextConstraintsList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1/watch/storageclasses/{name}`
    """
  watchStorageV1StorageClass(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1/watch/storageclasses`
    """
  watchStorageV1StorageClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/watch/storageclasses/{name}`
    """
  watchStorageV1beta1StorageClass(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of StorageClass
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/watch/storageclasses`
    """
  watchStorageV1beta1StorageClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind VolumeAttachment
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/watch/volumeattachments/{name}`
    """
  watchStorageV1beta1VolumeAttachment(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of VolumeAttachment
    
    **endpoint:** `GET /apis/storage.k8s.io/v1beta1/watch/volumeattachments`
    """
  watchStorageV1beta1VolumeAttachmentList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Template
    
    **endpoint:** `GET /oapi/v1/watch/templates`
    """
  watchTemplateListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind BrokerTemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/brokertemplateinstances/{name}`
    """
  watchTemplateOpenshiftIoV1BrokerTemplateInstance(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of BrokerTemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/brokertemplateinstances`
    """
  watchTemplateOpenshiftIoV1BrokerTemplateInstanceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/namespaces/{namespace}/templates/{name}`
    """
  watchTemplateOpenshiftIoV1NamespacedTemplate(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/namespaces/{namespace}/templateinstances/{name}`
    """
  watchTemplateOpenshiftIoV1NamespacedTemplateInstance(namespace:String!, name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/namespaces/{namespace}/templateinstances`
    """
  watchTemplateOpenshiftIoV1NamespacedTemplateInstanceList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/namespaces/{namespace}/templates`
    """
  watchTemplateOpenshiftIoV1NamespacedTemplateList(namespace:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of TemplateInstance
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/templateinstances`
    """
  watchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Template
    
    **endpoint:** `GET /apis/template.openshift.io/v1/watch/templates`
    """
  watchTemplateOpenshiftIoV1TemplateListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind User
    
    **endpoint:** `GET /oapi/v1/watch/users/{name}`
    """
  watchUser(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of User
    
    **endpoint:** `GET /oapi/v1/watch/users`
    """
  watchUserList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Group
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/groups/{name}`
    """
  watchUserOpenshiftIoV1Group(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Group
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/groups`
    """
  watchUserOpenshiftIoV1GroupList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind Identity
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/identities/{name}`
    """
  watchUserOpenshiftIoV1Identity(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of Identity
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/identities`
    """
  watchUserOpenshiftIoV1IdentityList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch changes to an object of kind User
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/users/{name}`
    """
  watchUserOpenshiftIoV1User(name:String!):io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  """
    watch individual changes to a list of User
    
    **endpoint:** `GET /apis/user.openshift.io/v1/watch/users`
    """
  watchUserOpenshiftIoV1UserList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
}
input StringInputProp {
  key:String!
  value:String
}
"A property entry"
type StringResultProp {
  key:String!
  value:String
}
"CustomDeploymentStrategyParams are the input to the Custom deployment strategy."
input com_github_openshift_api_apps_v1_CustomDeploymentStrategyParamsInput {
  "Command is optional and overrides CMD in the container Image."
  command:[String]
  "Environment holds the environment which will be given to the container for Image."
  environment:[io_k8s_api_core_v1_EnvVarInput]
  "Image specifies a Docker image which can carry out a deployment."
  image:String
}
"CustomDeploymentStrategyParams are the input to the Custom deployment strategy."
type com_github_openshift_api_apps_v1_CustomDeploymentStrategyParamsResult {
  "Command is optional and overrides CMD in the container Image."
  command:[String]
  "Environment holds the environment which will be given to the container for Image."
  environment:[io_k8s_api_core_v1_EnvVarResult]
  "Image specifies a Docker image which can carry out a deployment."
  image:String
}
"DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger"
input com_github_openshift_api_apps_v1_DeploymentCauseImageTriggerInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
}
"DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger"
type com_github_openshift_api_apps_v1_DeploymentCauseImageTriggerResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
}
"DeploymentCause captures information about a particular cause of a deployment."
input com_github_openshift_api_apps_v1_DeploymentCauseInput {
  "DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger"
  imageTrigger:com_github_openshift_api_apps_v1_DeploymentCauseImageTriggerInput
  "Type of the trigger that resulted in the creation of a new deployment"
  type:String
}
"DeploymentCause captures information about a particular cause of a deployment."
type com_github_openshift_api_apps_v1_DeploymentCauseResult {
  "DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger"
  imageTrigger:com_github_openshift_api_apps_v1_DeploymentCauseImageTriggerResult
  "Type of the trigger that resulted in the creation of a new deployment"
  type:String
}
"DeploymentCondition describes the state of a deployment config at a certain point."
input com_github_openshift_api_apps_v1_DeploymentConditionInput {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DeploymentCondition describes the state of a deployment config at a certain point."
type com_github_openshift_api_apps_v1_DeploymentConditionResult {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"""
Deployment Configs define the template for a pod and manages deploying new images or configuration changes. A single deployment configuration is usually analogous to a single micro-service. Can support many different deployment patterns, including full restart, customizable rolling updates, and  fully custom behaviors, as well as pre- and post- deployment hooks. Each individual deployment is represented as a replication controller.

A deployment is "triggered" when its configuration is changed or a tag in an Image Stream is changed. Triggers can be disabled to allow manual control over a deployment. The "strategy" determines how the deployment is carried out and may be changed at any time. The `latestVersion` field is updated when a new deployment is triggered by any means.
"""
input com_github_openshift_api_apps_v1_DeploymentConfigInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DeploymentConfigSpec represents the desired state of the deployment."
  spec:com_github_openshift_api_apps_v1_DeploymentConfigSpecInput
  "DeploymentConfigStatus represents the current deployment state."
  status:com_github_openshift_api_apps_v1_DeploymentConfigStatusInput
}
"DeploymentConfigList is a collection of deployment configs."
type com_github_openshift_api_apps_v1_DeploymentConfigListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of deployment configs"
  items:[com_github_openshift_api_apps_v1_DeploymentConfigResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
Deployment Configs define the template for a pod and manages deploying new images or configuration changes. A single deployment configuration is usually analogous to a single micro-service. Can support many different deployment patterns, including full restart, customizable rolling updates, and  fully custom behaviors, as well as pre- and post- deployment hooks. Each individual deployment is represented as a replication controller.

A deployment is "triggered" when its configuration is changed or a tag in an Image Stream is changed. Triggers can be disabled to allow manual control over a deployment. The "strategy" determines how the deployment is carried out and may be changed at any time. The `latestVersion` field is updated when a new deployment is triggered by any means.
"""
type com_github_openshift_api_apps_v1_DeploymentConfigResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DeploymentConfigSpec represents the desired state of the deployment."
  spec:com_github_openshift_api_apps_v1_DeploymentConfigSpecResult
  "DeploymentConfigStatus represents the current deployment state."
  status:com_github_openshift_api_apps_v1_DeploymentConfigStatusResult
}
"DeploymentConfigRollback provides the input to rollback generation."
input com_github_openshift_api_apps_v1_DeploymentConfigRollbackInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the deployment config that will be rolled back."
  name:String
  "DeploymentConfigRollbackSpec represents the options for rollback generation."
  spec:com_github_openshift_api_apps_v1_DeploymentConfigRollbackSpecInput
  "UpdatedAnnotations is a set of new annotations that will be added in the deployment config."
  updatedAnnotations:[StringInputProp!]
}
"DeploymentConfigRollback provides the input to rollback generation."
type com_github_openshift_api_apps_v1_DeploymentConfigRollbackResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the deployment config that will be rolled back."
  name:String
  "DeploymentConfigRollbackSpec represents the options for rollback generation."
  spec:com_github_openshift_api_apps_v1_DeploymentConfigRollbackSpecResult
  "UpdatedAnnotations is a set of new annotations that will be added in the deployment config."
  updatedAnnotations:[StringResultProp!]
}
"DeploymentConfigRollbackSpec represents the options for rollback generation."
input com_github_openshift_api_apps_v1_DeploymentConfigRollbackSpecInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "IncludeReplicationMeta specifies whether to include the replica count and selector."
  includeReplicationMeta:Boolean
  "IncludeStrategy specifies whether to include the deployment Strategy."
  includeStrategy:Boolean
  "IncludeTemplate specifies whether to include the PodTemplateSpec."
  includeTemplate:Boolean
  "IncludeTriggers specifies whether to include config Triggers."
  includeTriggers:Boolean
  "Revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"DeploymentConfigRollbackSpec represents the options for rollback generation."
type com_github_openshift_api_apps_v1_DeploymentConfigRollbackSpecResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "IncludeReplicationMeta specifies whether to include the replica count and selector."
  includeReplicationMeta:Boolean
  "IncludeStrategy specifies whether to include the deployment Strategy."
  includeStrategy:Boolean
  "IncludeTemplate specifies whether to include the PodTemplateSpec."
  includeTemplate:Boolean
  "IncludeTriggers specifies whether to include config Triggers."
  includeTriggers:Boolean
  "Revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"DeploymentConfigSpec represents the desired state of the deployment."
input com_github_openshift_api_apps_v1_DeploymentConfigSpecInput {
  "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers."
  paused:Boolean
  "Replicas is the number of desired replicas."
  replicas:Int
  "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified. Defaults to 10. (This only applies to DeploymentConfigs created via the new group API resource, not the legacy resource.)"
  revisionHistoryLimit:Int
  "Selector is a label query over pods that should match the Replicas count."
  selector:[StringInputProp!]
  "DeploymentStrategy describes how to perform a deployment."
  strategy:com_github_openshift_api_apps_v1_DeploymentStrategyInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action."
  test:Boolean
  "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger."
  triggers:[com_github_openshift_api_apps_v1_DeploymentTriggerPolicyInput]
}
"DeploymentConfigSpec represents the desired state of the deployment."
type com_github_openshift_api_apps_v1_DeploymentConfigSpecResult {
  "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers."
  paused:Boolean
  "Replicas is the number of desired replicas."
  replicas:Int
  "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified. Defaults to 10. (This only applies to DeploymentConfigs created via the new group API resource, not the legacy resource.)"
  revisionHistoryLimit:Int
  "Selector is a label query over pods that should match the Replicas count."
  selector:[StringResultProp!]
  "DeploymentStrategy describes how to perform a deployment."
  strategy:com_github_openshift_api_apps_v1_DeploymentStrategyResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action."
  test:Boolean
  "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger."
  triggers:[com_github_openshift_api_apps_v1_DeploymentTriggerPolicyResult]
}
"DeploymentConfigStatus represents the current deployment state."
input com_github_openshift_api_apps_v1_DeploymentConfigStatusInput {
  "AvailableReplicas is the total number of available pods targeted by this deployment config."
  availableReplicas:Int
  "Conditions represents the latest available observations of a deployment config's current state."
  conditions:[com_github_openshift_api_apps_v1_DeploymentConditionInput]
  "DeploymentDetails captures information about the causes of a deployment."
  details:com_github_openshift_api_apps_v1_DeploymentDetailsInput
  "LatestVersion is used to determine whether the current deployment associated with a deployment config is out of sync."
  latestVersion:Int
  "ObservedGeneration is the most recent generation observed by the deployment config controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Replicas is the total number of pods targeted by this deployment config."
  replicas:Int
  "UnavailableReplicas is the total number of unavailable pods targeted by this deployment config."
  unavailableReplicas:Int
  "UpdatedReplicas is the total number of non-terminated pods targeted by this deployment config that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentConfigStatus represents the current deployment state."
type com_github_openshift_api_apps_v1_DeploymentConfigStatusResult {
  "AvailableReplicas is the total number of available pods targeted by this deployment config."
  availableReplicas:Int
  "Conditions represents the latest available observations of a deployment config's current state."
  conditions:[com_github_openshift_api_apps_v1_DeploymentConditionResult]
  "DeploymentDetails captures information about the causes of a deployment."
  details:com_github_openshift_api_apps_v1_DeploymentDetailsResult
  "LatestVersion is used to determine whether the current deployment associated with a deployment config is out of sync."
  latestVersion:Int
  "ObservedGeneration is the most recent generation observed by the deployment config controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Replicas is the total number of pods targeted by this deployment config."
  replicas:Int
  "UnavailableReplicas is the total number of unavailable pods targeted by this deployment config."
  unavailableReplicas:Int
  "UpdatedReplicas is the total number of non-terminated pods targeted by this deployment config that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentDetails captures information about the causes of a deployment."
input com_github_openshift_api_apps_v1_DeploymentDetailsInput {
  "Causes are extended data associated with all the causes for creating a new deployment"
  causes:[com_github_openshift_api_apps_v1_DeploymentCauseInput]
  "Message is the user specified change message, if this deployment was triggered manually by the user"
  message:String
}
"DeploymentDetails captures information about the causes of a deployment."
type com_github_openshift_api_apps_v1_DeploymentDetailsResult {
  "Causes are extended data associated with all the causes for creating a new deployment"
  causes:[com_github_openshift_api_apps_v1_DeploymentCauseResult]
  "Message is the user specified change message, if this deployment was triggered manually by the user"
  message:String
}
"DeploymentLog represents the logs for a deployment"
type com_github_openshift_api_apps_v1_DeploymentLogResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
}
"DeploymentRequest is a request to a deployment config for a new deployment."
input com_github_openshift_api_apps_v1_DeploymentRequestInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ExcludeTriggers instructs the instantiator to avoid processing the specified triggers. This field overrides the triggers from latest and allows clients to control specific logic. This field is ignored if not specified."
  excludeTriggers:[String]
  "Force will try to force a new deployment to run. If the deployment config is paused, then setting this to true will return an Invalid error."
  force:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Latest will update the deployment config with the latest state from all triggers."
  latest:Boolean
  "Name of the deployment config for requesting a new deployment."
  name:String
}
"DeploymentRequest is a request to a deployment config for a new deployment."
type com_github_openshift_api_apps_v1_DeploymentRequestResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ExcludeTriggers instructs the instantiator to avoid processing the specified triggers. This field overrides the triggers from latest and allows clients to control specific logic. This field is ignored if not specified."
  excludeTriggers:[String]
  "Force will try to force a new deployment to run. If the deployment config is paused, then setting this to true will return an Invalid error."
  force:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Latest will update the deployment config with the latest state from all triggers."
  latest:Boolean
  "Name of the deployment config for requesting a new deployment."
  name:String
}
"DeploymentStrategy describes how to perform a deployment."
input com_github_openshift_api_apps_v1_DeploymentStrategyInput {
  "ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them."
  activeDeadlineSeconds:Int
  "Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
  annotations:[StringInputProp!]
  "CustomDeploymentStrategyParams are the input to the Custom deployment strategy."
  customParams:com_github_openshift_api_apps_v1_CustomDeploymentStrategyParamsInput
  "Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
  labels:[StringInputProp!]
  "RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy."
  recreateParams:com_github_openshift_api_apps_v1_RecreateDeploymentStrategyParamsInput
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsInput
  "RollingDeploymentStrategyParams are the input to the Rolling deployment strategy."
  rollingParams:com_github_openshift_api_apps_v1_RollingDeploymentStrategyParamsInput
  "Type is the name of a deployment strategy."
  type:String
}
"DeploymentStrategy describes how to perform a deployment."
type com_github_openshift_api_apps_v1_DeploymentStrategyResult {
  "ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them."
  activeDeadlineSeconds:Int
  "Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
  annotations:[StringResultProp!]
  "CustomDeploymentStrategyParams are the input to the Custom deployment strategy."
  customParams:com_github_openshift_api_apps_v1_CustomDeploymentStrategyParamsResult
  "Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
  labels:[StringResultProp!]
  "RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy."
  recreateParams:com_github_openshift_api_apps_v1_RecreateDeploymentStrategyParamsResult
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsResult
  "RollingDeploymentStrategyParams are the input to the Rolling deployment strategy."
  rollingParams:com_github_openshift_api_apps_v1_RollingDeploymentStrategyParamsResult
  "Type is the name of a deployment strategy."
  type:String
}
"DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger."
input com_github_openshift_api_apps_v1_DeploymentTriggerImageChangeParamsInput {
  "Automatic means that the detection of a new tag value should result in an image update inside the pod template."
  automatic:Boolean
  "ContainerNames is used to restrict tag updates to the specified set of container names in a pod. If multiple triggers point to the same containers, the resulting behavior is undefined. Future API versions will make this a validation error. If ContainerNames does not point to a valid container, the trigger will be ignored. Future API versions will make this a validation error."
  containerNames:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "LastTriggeredImage is the last image to be triggered."
  lastTriggeredImage:String
}
"DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger."
type com_github_openshift_api_apps_v1_DeploymentTriggerImageChangeParamsResult {
  "Automatic means that the detection of a new tag value should result in an image update inside the pod template."
  automatic:Boolean
  "ContainerNames is used to restrict tag updates to the specified set of container names in a pod. If multiple triggers point to the same containers, the resulting behavior is undefined. Future API versions will make this a validation error. If ContainerNames does not point to a valid container, the trigger will be ignored. Future API versions will make this a validation error."
  containerNames:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "LastTriggeredImage is the last image to be triggered."
  lastTriggeredImage:String
}
"DeploymentTriggerPolicy describes a policy for a single trigger that results in a new deployment."
input com_github_openshift_api_apps_v1_DeploymentTriggerPolicyInput {
  "DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger."
  imageChangeParams:com_github_openshift_api_apps_v1_DeploymentTriggerImageChangeParamsInput
  "Type of the trigger"
  type:String
}
"DeploymentTriggerPolicy describes a policy for a single trigger that results in a new deployment."
type com_github_openshift_api_apps_v1_DeploymentTriggerPolicyResult {
  "DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger."
  imageChangeParams:com_github_openshift_api_apps_v1_DeploymentTriggerImageChangeParamsResult
  "Type of the trigger"
  type:String
}
"ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template."
input com_github_openshift_api_apps_v1_ExecNewPodHookInput {
  "Command is the action command and its arguments."
  command:[String]
  "ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container."
  containerName:String
  "Env is a set of environment variables to supply to the hook pod's container."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied."
  volumes:[String]
}
"ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template."
type com_github_openshift_api_apps_v1_ExecNewPodHookResult {
  "Command is the action command and its arguments."
  command:[String]
  "ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container."
  containerName:String
  "Env is a set of environment variables to supply to the hook pod's container."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied."
  volumes:[String]
}
"LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
input com_github_openshift_api_apps_v1_LifecycleHookInput {
  "ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template."
  execNewPod:com_github_openshift_api_apps_v1_ExecNewPodHookInput
  "FailurePolicy specifies what action to take if the hook fails."
  failurePolicy:String
  "TagImages instructs the deployer to tag the current image referenced under a container onto an image stream tag."
  tagImages:[com_github_openshift_api_apps_v1_TagImageHookInput]
}
"LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
type com_github_openshift_api_apps_v1_LifecycleHookResult {
  "ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template."
  execNewPod:com_github_openshift_api_apps_v1_ExecNewPodHookResult
  "FailurePolicy specifies what action to take if the hook fails."
  failurePolicy:String
  "TagImages instructs the deployer to tag the current image referenced under a container onto an image stream tag."
  tagImages:[com_github_openshift_api_apps_v1_TagImageHookResult]
}
"RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy."
input com_github_openshift_api_apps_v1_RecreateDeploymentStrategyParamsInput {
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  mid:com_github_openshift_api_apps_v1_LifecycleHookInput
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  post:com_github_openshift_api_apps_v1_LifecycleHookInput
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  pre:com_github_openshift_api_apps_v1_LifecycleHookInput
  "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used."
  timeoutSeconds:Int
}
"RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy."
type com_github_openshift_api_apps_v1_RecreateDeploymentStrategyParamsResult {
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  mid:com_github_openshift_api_apps_v1_LifecycleHookResult
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  post:com_github_openshift_api_apps_v1_LifecycleHookResult
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  pre:com_github_openshift_api_apps_v1_LifecycleHookResult
  "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used."
  timeoutSeconds:Int
}
"RollingDeploymentStrategyParams are the input to the Rolling deployment strategy."
input com_github_openshift_api_apps_v1_RollingDeploymentStrategyParamsInput {
  "IntervalSeconds is the time to wait between polling deployment status after update. If the value is nil, a default will be used."
  intervalSeconds:Int
  maxSurge:String
  maxUnavailable:String
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  post:com_github_openshift_api_apps_v1_LifecycleHookInput
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  pre:com_github_openshift_api_apps_v1_LifecycleHookInput
  "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used."
  timeoutSeconds:Int
  "UpdatePeriodSeconds is the time to wait between individual pod updates. If the value is nil, a default will be used."
  updatePeriodSeconds:Int
}
"RollingDeploymentStrategyParams are the input to the Rolling deployment strategy."
type com_github_openshift_api_apps_v1_RollingDeploymentStrategyParamsResult {
  "IntervalSeconds is the time to wait between polling deployment status after update. If the value is nil, a default will be used."
  intervalSeconds:Int
  maxSurge:String
  maxUnavailable:String
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  post:com_github_openshift_api_apps_v1_LifecycleHookResult
  "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time."
  pre:com_github_openshift_api_apps_v1_LifecycleHookResult
  "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used."
  timeoutSeconds:Int
  "UpdatePeriodSeconds is the time to wait between individual pod updates. If the value is nil, a default will be used."
  updatePeriodSeconds:Int
}
"TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag."
input com_github_openshift_api_apps_v1_TagImageHookInput {
  "ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container."
  containerName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  to:io_k8s_api_core_v1_ObjectReferenceInput
}
"TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag."
type com_github_openshift_api_apps_v1_TagImageHookResult {
  "ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container."
  containerName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  to:io_k8s_api_core_v1_ObjectReferenceResult
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference any ClusterRole in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. ClusterRoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces)."
input com_github_openshift_api_authorization_v1_ClusterRoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  groupNames:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  roleRef:io_k8s_api_core_v1_ObjectReferenceInput
  "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
  subjects:[io_k8s_api_core_v1_ObjectReferenceInput]
  "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  userNames:[String]
}
"ClusterRoleBindingList is a collection of ClusterRoleBindings"
type com_github_openshift_api_authorization_v1_ClusterRoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoleBindings"
  items:[com_github_openshift_api_authorization_v1_ClusterRoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference any ClusterRole in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. ClusterRoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces)."
type com_github_openshift_api_authorization_v1_ClusterRoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  groupNames:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  roleRef:io_k8s_api_core_v1_ObjectReferenceResult
  "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
  subjects:[io_k8s_api_core_v1_ObjectReferenceResult]
  "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  userNames:[String]
}
"ClusterRole is a logical grouping of PolicyRules that can be referenced as a unit by ClusterRoleBindings."
input com_github_openshift_api_authorization_v1_ClusterRoleInput {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleInput
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleInput]
}
"ClusterRoleList is a collection of ClusterRoles"
type com_github_openshift_api_authorization_v1_ClusterRoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoles"
  items:[com_github_openshift_api_authorization_v1_ClusterRoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRole is a logical grouping of PolicyRules that can be referenced as a unit by ClusterRoleBindings."
type com_github_openshift_api_authorization_v1_ClusterRoleResult {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleResult
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleResult]
}
"GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels."
input com_github_openshift_api_authorization_v1_GroupRestrictionInput {
  "Groups is a list of groups used to match against an individual user's groups. If the user is a member of one of the whitelisted groups, the user is allowed to be bound to a role."
  groups:[String]
  "Selectors specifies a list of label selectors over group labels."
  labels:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
}
"GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels."
type com_github_openshift_api_authorization_v1_GroupRestrictionResult {
  "Groups is a list of groups used to match against an individual user's groups. If the user is a member of one of the whitelisted groups, the user is allowed to be bound to a role."
  groups:[String]
  "Selectors specifies a list of label selectors over group labels."
  labels:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
}
"LocalResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec in a particular namespace"
input com_github_openshift_api_authorization_v1_LocalResourceAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"LocalResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec in a particular namespace"
type com_github_openshift_api_authorization_v1_LocalResourceAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"LocalSubjectAccessReview is an object for requesting information about whether a user or group can perform an action in a particular namespace"
input com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "Groups is optional.  Groups is the list of groups to which the User belongs."
  groups:[String]
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
  scopes:[String]
  "User is optional.  If both User and Groups are empty, the current authenticated user is used."
  user:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"LocalSubjectAccessReview is an object for requesting information about whether a user or group can perform an action in a particular namespace"
type com_github_openshift_api_authorization_v1_LocalSubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "Groups is optional.  Groups is the list of groups to which the User belongs."
  groups:[String]
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
  scopes:[String]
  "User is optional.  If both User and Groups are empty, the current authenticated user is used."
  user:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
input com_github_openshift_api_authorization_v1_PolicyRuleInput {
  "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed"
  apiGroups:[String]
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  attributeRestrictions:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
type com_github_openshift_api_authorization_v1_PolicyRuleResult {
  "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed"
  apiGroups:[String]
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  attributeRestrictions:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec"
input com_github_openshift_api_authorization_v1_ResourceAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec"
type com_github_openshift_api_authorization_v1_ResourceAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. RoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces)."
input com_github_openshift_api_authorization_v1_RoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  groupNames:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  roleRef:io_k8s_api_core_v1_ObjectReferenceInput
  "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
  subjects:[io_k8s_api_core_v1_ObjectReferenceInput]
  "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  userNames:[String]
}
"RoleBindingList is a collection of RoleBindings"
type com_github_openshift_api_authorization_v1_RoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of RoleBindings"
  items:[com_github_openshift_api_authorization_v1_RoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleBindingRestriction is an object that can be matched against a subject (user, group, or service account) to determine whether rolebindings on that subject are allowed in the namespace to which the RoleBindingRestriction belongs.  If any one of those RoleBindingRestriction objects matches a subject, rolebindings on that subject in the namespace are allowed."
input com_github_openshift_api_authorization_v1_RoleBindingRestrictionInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil."
  spec:com_github_openshift_api_authorization_v1_RoleBindingRestrictionSpecInput
}
"RoleBindingRestrictionList is a collection of RoleBindingRestriction objects."
type com_github_openshift_api_authorization_v1_RoleBindingRestrictionListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of RoleBindingRestriction objects."
  items:[com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleBindingRestriction is an object that can be matched against a subject (user, group, or service account) to determine whether rolebindings on that subject are allowed in the namespace to which the RoleBindingRestriction belongs.  If any one of those RoleBindingRestriction objects matches a subject, rolebindings on that subject in the namespace are allowed."
type com_github_openshift_api_authorization_v1_RoleBindingRestrictionResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil."
  spec:com_github_openshift_api_authorization_v1_RoleBindingRestrictionSpecResult
}
"RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil."
input com_github_openshift_api_authorization_v1_RoleBindingRestrictionSpecInput {
  "GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels."
  grouprestriction:com_github_openshift_api_authorization_v1_GroupRestrictionInput
  "ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace."
  serviceaccountrestriction:com_github_openshift_api_authorization_v1_ServiceAccountRestrictionInput
  "UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels."
  userrestriction:com_github_openshift_api_authorization_v1_UserRestrictionInput
}
"RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil."
type com_github_openshift_api_authorization_v1_RoleBindingRestrictionSpecResult {
  "GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels."
  grouprestriction:com_github_openshift_api_authorization_v1_GroupRestrictionResult
  "ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace."
  serviceaccountrestriction:com_github_openshift_api_authorization_v1_ServiceAccountRestrictionResult
  "UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels."
  userrestriction:com_github_openshift_api_authorization_v1_UserRestrictionResult
}
"RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. RoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces)."
type com_github_openshift_api_authorization_v1_RoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  groupNames:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  roleRef:io_k8s_api_core_v1_ObjectReferenceResult
  "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
  subjects:[io_k8s_api_core_v1_ObjectReferenceResult]
  "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
  userNames:[String]
}
"Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings."
input com_github_openshift_api_authorization_v1_RoleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this Role"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleInput]
}
"RoleList is a collection of Roles"
type com_github_openshift_api_authorization_v1_RoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of Roles"
  items:[com_github_openshift_api_authorization_v1_RoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings."
type com_github_openshift_api_authorization_v1_RoleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this Role"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleResult]
}
"SelfSubjectRulesReview is a resource you can create to determine which actions you can perform in a namespace"
input com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "SelfSubjectRulesReviewSpec adds information about how to conduct the check"
  spec:com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewSpecInput
  "SubjectRulesReviewStatus is contains the result of a rules check"
  status:com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusInput
}
"SelfSubjectRulesReview is a resource you can create to determine which actions you can perform in a namespace"
type com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "SelfSubjectRulesReviewSpec adds information about how to conduct the check"
  spec:com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewSpecResult
  "SubjectRulesReviewStatus is contains the result of a rules check"
  status:com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusResult
}
"SelfSubjectRulesReviewSpec adds information about how to conduct the check"
input com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewSpecInput {
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil means \"use the scopes on this request\"."
  scopes:[String]
}
"SelfSubjectRulesReviewSpec adds information about how to conduct the check"
type com_github_openshift_api_authorization_v1_SelfSubjectRulesReviewSpecResult {
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil means \"use the scopes on this request\"."
  scopes:[String]
}
"ServiceAccountReference specifies a service account and namespace by their names."
input com_github_openshift_api_authorization_v1_ServiceAccountReferenceInput {
  "Name is the name of the service account."
  name:String
  "Namespace is the namespace of the service account.  Service accounts from inside the whitelisted namespaces are allowed to be bound to roles.  If Namespace is empty, then the namespace of the RoleBindingRestriction in which the ServiceAccountReference is embedded is used."
  namespace:String
}
"ServiceAccountReference specifies a service account and namespace by their names."
type com_github_openshift_api_authorization_v1_ServiceAccountReferenceResult {
  "Name is the name of the service account."
  name:String
  "Namespace is the namespace of the service account.  Service accounts from inside the whitelisted namespaces are allowed to be bound to roles.  If Namespace is empty, then the namespace of the RoleBindingRestriction in which the ServiceAccountReference is embedded is used."
  namespace:String
}
"ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace."
input com_github_openshift_api_authorization_v1_ServiceAccountRestrictionInput {
  "Namespaces specifies a list of literal namespace names."
  namespaces:[String]
  "ServiceAccounts specifies a list of literal service-account names."
  serviceaccounts:[com_github_openshift_api_authorization_v1_ServiceAccountReferenceInput]
}
"ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace."
type com_github_openshift_api_authorization_v1_ServiceAccountRestrictionResult {
  "Namespaces specifies a list of literal namespace names."
  namespaces:[String]
  "ServiceAccounts specifies a list of literal service-account names."
  serviceaccounts:[com_github_openshift_api_authorization_v1_ServiceAccountReferenceResult]
}
"SubjectAccessReview is an object for requesting information about whether a user or group can perform an action"
input com_github_openshift_api_authorization_v1_SubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "GroupsSlice is optional. Groups is the list of groups to which the User belongs."
  groups:[String]
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
  scopes:[String]
  "User is optional. If both User and Groups are empty, the current authenticated user is used."
  user:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"SubjectAccessReview is an object for requesting information about whether a user or group can perform an action"
type com_github_openshift_api_authorization_v1_SubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  content:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "GroupsSlice is optional. Groups is the list of groups to which the User belongs."
  groups:[String]
  "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
  isNonResourceURL:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
  namespace:String
  "Path is the path of a non resource URL"
  path:String
  "Resource is one of the existing resource types"
  resource:String
  "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
  resourceAPIGroup:String
  "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
  resourceAPIVersion:String
  "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
  resourceName:String
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
  scopes:[String]
  "User is optional. If both User and Groups are empty, the current authenticated user is used."
  user:String
  "Verb is one of: get, list, watch, create, update, delete"
  verb:String
}
"SubjectRulesReview is a resource you can create to determine which actions another user can perform in a namespace"
input com_github_openshift_api_authorization_v1_SubjectRulesReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "SubjectRulesReviewSpec adds information about how to conduct the check"
  spec:com_github_openshift_api_authorization_v1_SubjectRulesReviewSpecInput
  "SubjectRulesReviewStatus is contains the result of a rules check"
  status:com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusInput
}
"SubjectRulesReview is a resource you can create to determine which actions another user can perform in a namespace"
type com_github_openshift_api_authorization_v1_SubjectRulesReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "SubjectRulesReviewSpec adds information about how to conduct the check"
  spec:com_github_openshift_api_authorization_v1_SubjectRulesReviewSpecResult
  "SubjectRulesReviewStatus is contains the result of a rules check"
  status:com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusResult
}
"SubjectRulesReviewSpec adds information about how to conduct the check"
input com_github_openshift_api_authorization_v1_SubjectRulesReviewSpecInput {
  "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified."
  groups:[String]
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\"."
  scopes:[String]
  "User is optional.  At least one of User and Groups must be specified."
  user:String
}
"SubjectRulesReviewSpec adds information about how to conduct the check"
type com_github_openshift_api_authorization_v1_SubjectRulesReviewSpecResult {
  "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified."
  groups:[String]
  "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\"."
  scopes:[String]
  "User is optional.  At least one of User and Groups must be specified."
  user:String
}
"SubjectRulesReviewStatus is contains the result of a rules check"
input com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusInput {
  "EvaluationError can appear in combination with Rules.  It means some error happened during evaluation that may have prevented additional rules from being populated."
  evaluationError:String
  "Rules is the list of rules (no particular sort) that are allowed for the subject"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleInput]
}
"SubjectRulesReviewStatus is contains the result of a rules check"
type com_github_openshift_api_authorization_v1_SubjectRulesReviewStatusResult {
  "EvaluationError can appear in combination with Rules.  It means some error happened during evaluation that may have prevented additional rules from being populated."
  evaluationError:String
  "Rules is the list of rules (no particular sort) that are allowed for the subject"
  rules:[com_github_openshift_api_authorization_v1_PolicyRuleResult]
}
"UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels."
input com_github_openshift_api_authorization_v1_UserRestrictionInput {
  "Groups specifies a list of literal group names."
  groups:[String]
  "Selectors specifies a list of label selectors over user labels."
  labels:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
  "Users specifies a list of literal user names."
  users:[String]
}
"UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels."
type com_github_openshift_api_authorization_v1_UserRestrictionResult {
  "Groups specifies a list of literal group names."
  groups:[String]
  "Selectors specifies a list of label selectors over user labels."
  labels:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
  "Users specifies a list of literal user names."
  users:[String]
}
"BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
input com_github_openshift_api_build_v1_BinaryBuildSourceInput {
  "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'."
  asFile:String
}
"BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
type com_github_openshift_api_build_v1_BinaryBuildSourceResult {
  "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'."
  asFile:String
}
"BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build."
input com_github_openshift_api_build_v1_BitbucketWebHookCauseInput {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "Secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build."
type com_github_openshift_api_build_v1_BitbucketWebHookCauseResult {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "Secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"""
Build configurations define a build process for new Docker images. There are three types of builds possible - a Docker build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary Docker images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the Docker registry specified in the "output" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created.

Each build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have "output" set can be used to test code or run a verification build.
"""
input com_github_openshift_api_build_v1_BuildConfigInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "BuildConfigSpec describes when and how builds are created"
  spec:com_github_openshift_api_build_v1_BuildConfigSpecInput
  "BuildConfigStatus contains current state of the build config object."
  status:com_github_openshift_api_build_v1_BuildConfigStatusInput
}
"BuildConfigList is a collection of BuildConfigs."
type com_github_openshift_api_build_v1_BuildConfigListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of build configs"
  items:[com_github_openshift_api_build_v1_BuildConfigResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
Build configurations define a build process for new Docker images. There are three types of builds possible - a Docker build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary Docker images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the Docker registry specified in the "output" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created.

Each build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have "output" set can be used to test code or run a verification build.
"""
type com_github_openshift_api_build_v1_BuildConfigResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "BuildConfigSpec describes when and how builds are created"
  spec:com_github_openshift_api_build_v1_BuildConfigSpecResult
  "BuildConfigStatus contains current state of the build config object."
  status:com_github_openshift_api_build_v1_BuildConfigStatusResult
}
"BuildConfigSpec describes when and how builds are created"
input com_github_openshift_api_build_v1_BuildConfigSpecInput {
  "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer"
  completionDeadlineSeconds:Int
  "failedBuildsHistoryLimit is the number of old failed builds to retain. If not specified, all failed builds are retained."
  failedBuildsHistoryLimit:Int
  "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
  nodeSelector:[StringInputProp!]
  "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
  output:com_github_openshift_api_build_v1_BuildOutputInput
  """
    A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.
    
    The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.
    
    There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.
    
    1. Shell script:
    
           "postCommit": {
             "script": "rake test --verbose",
           }
    
        The above is a convenient form which is equivalent to:
    
           "postCommit": {
             "command": ["/bin/sh", "-ic"],
             "args":    ["rake test --verbose"]
           }
    
    2. A command as the image entrypoint:
    
           "postCommit": {
             "commit": ["rake", "test", "--verbose"]
           }
    
        Command overrides the image entrypoint in the exec form, as documented in
        Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.
    
    3. Pass arguments to the default entrypoint:
    
           "postCommit": {
    		      "args": ["rake", "test", "--verbose"]
    	      }
    
        This form is only useful if the image entrypoint can handle arguments.
    
    4. Shell script with arguments:
    
           "postCommit": {
             "script": "rake test $1",
             "args":   ["--verbose"]
           }
    
        This form is useful if you need to pass arguments that would otherwise be
        hard to quote properly in the shell script. In the script, $0 will be
        "/bin/sh" and $1, $2, etc, are the positional arguments from Args.
    
    5. Command with arguments:
    
           "postCommit": {
             "command": ["rake", "test"],
             "args":    ["--verbose"]
           }
    
        This form is equivalent to appending the arguments to the Command slice.
    
    It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
    """
  postCommit:com_github_openshift_api_build_v1_BuildPostCommitSpecInput
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsInput
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "RunPolicy describes how the new build created from this build configuration will be scheduled for execution. This is optional, if not specified we default to \"Serial\"."
  runPolicy:String
  "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
  serviceAccount:String
  "BuildSource is the SCM used for the build."
  source:com_github_openshift_api_build_v1_BuildSourceInput
  "BuildStrategy contains the details of how to perform a build."
  strategy:com_github_openshift_api_build_v1_BuildStrategyInput
  "successfulBuildsHistoryLimit is the number of old successful builds to retain. If not specified, all successful builds are retained."
  successfulBuildsHistoryLimit:Int
  "triggers determine how new Builds can be launched from a BuildConfig. If no triggers are defined, a new build can only occur as a result of an explicit client build creation."
  triggers:[com_github_openshift_api_build_v1_BuildTriggerPolicyInput]
}
"BuildConfigSpec describes when and how builds are created"
type com_github_openshift_api_build_v1_BuildConfigSpecResult {
  "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer"
  completionDeadlineSeconds:Int
  "failedBuildsHistoryLimit is the number of old failed builds to retain. If not specified, all failed builds are retained."
  failedBuildsHistoryLimit:Int
  "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
  nodeSelector:[StringResultProp!]
  "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
  output:com_github_openshift_api_build_v1_BuildOutputResult
  """
    A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.
    
    The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.
    
    There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.
    
    1. Shell script:
    
           "postCommit": {
             "script": "rake test --verbose",
           }
    
        The above is a convenient form which is equivalent to:
    
           "postCommit": {
             "command": ["/bin/sh", "-ic"],
             "args":    ["rake test --verbose"]
           }
    
    2. A command as the image entrypoint:
    
           "postCommit": {
             "commit": ["rake", "test", "--verbose"]
           }
    
        Command overrides the image entrypoint in the exec form, as documented in
        Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.
    
    3. Pass arguments to the default entrypoint:
    
           "postCommit": {
    		      "args": ["rake", "test", "--verbose"]
    	      }
    
        This form is only useful if the image entrypoint can handle arguments.
    
    4. Shell script with arguments:
    
           "postCommit": {
             "script": "rake test $1",
             "args":   ["--verbose"]
           }
    
        This form is useful if you need to pass arguments that would otherwise be
        hard to quote properly in the shell script. In the script, $0 will be
        "/bin/sh" and $1, $2, etc, are the positional arguments from Args.
    
    5. Command with arguments:
    
           "postCommit": {
             "command": ["rake", "test"],
             "args":    ["--verbose"]
           }
    
        This form is equivalent to appending the arguments to the Command slice.
    
    It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
    """
  postCommit:com_github_openshift_api_build_v1_BuildPostCommitSpecResult
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsResult
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "RunPolicy describes how the new build created from this build configuration will be scheduled for execution. This is optional, if not specified we default to \"Serial\"."
  runPolicy:String
  "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
  serviceAccount:String
  "BuildSource is the SCM used for the build."
  source:com_github_openshift_api_build_v1_BuildSourceResult
  "BuildStrategy contains the details of how to perform a build."
  strategy:com_github_openshift_api_build_v1_BuildStrategyResult
  "successfulBuildsHistoryLimit is the number of old successful builds to retain. If not specified, all successful builds are retained."
  successfulBuildsHistoryLimit:Int
  "triggers determine how new Builds can be launched from a BuildConfig. If no triggers are defined, a new build can only occur as a result of an explicit client build creation."
  triggers:[com_github_openshift_api_build_v1_BuildTriggerPolicyResult]
}
"BuildConfigStatus contains current state of the build config object."
input com_github_openshift_api_build_v1_BuildConfigStatusInput {
  "lastVersion is used to inform about number of last triggered build."
  lastVersion:Int
}
"BuildConfigStatus contains current state of the build config object."
type com_github_openshift_api_build_v1_BuildConfigStatusResult {
  "lastVersion is used to inform about number of last triggered build."
  lastVersion:Int
}
"Build encapsulates the inputs needed to produce a new deployable image, as well as the status of the execution and a reference to the Pod which executed the build."
input com_github_openshift_api_build_v1_BuildInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "BuildSpec has the information to represent a build and also additional information about a build"
  spec:com_github_openshift_api_build_v1_BuildSpecInput
  "BuildStatus contains the status of a build"
  status:com_github_openshift_api_build_v1_BuildStatusInput
}
"BuildList is a collection of Builds."
type com_github_openshift_api_build_v1_BuildListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of builds"
  items:[com_github_openshift_api_build_v1_BuildResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"BuildLog is the (unused) resource associated with the build log redirector"
type com_github_openshift_api_build_v1_BuildLogResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
}
"BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
input com_github_openshift_api_build_v1_BuildOutputInput {
  "imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used."
  imageLabels:[com_github_openshift_api_build_v1_ImageLabelInput]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pushSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  to:io_k8s_api_core_v1_ObjectReferenceInput
}
"BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
type com_github_openshift_api_build_v1_BuildOutputResult {
  "imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used."
  imageLabels:[com_github_openshift_api_build_v1_ImageLabelResult]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pushSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  to:io_k8s_api_core_v1_ObjectReferenceResult
}
"""
A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.

The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.

There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.

1. Shell script:

       "postCommit": {
         "script": "rake test --verbose",
       }

    The above is a convenient form which is equivalent to:

       "postCommit": {
         "command": ["/bin/sh", "-ic"],
         "args":    ["rake test --verbose"]
       }

2. A command as the image entrypoint:

       "postCommit": {
         "commit": ["rake", "test", "--verbose"]
       }

    Command overrides the image entrypoint in the exec form, as documented in
    Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.

3. Pass arguments to the default entrypoint:

       "postCommit": {
		      "args": ["rake", "test", "--verbose"]
	      }

    This form is only useful if the image entrypoint can handle arguments.

4. Shell script with arguments:

       "postCommit": {
         "script": "rake test $1",
         "args":   ["--verbose"]
       }

    This form is useful if you need to pass arguments that would otherwise be
    hard to quote properly in the shell script. In the script, $0 will be
    "/bin/sh" and $1, $2, etc, are the positional arguments from Args.

5. Command with arguments:

       "postCommit": {
         "command": ["rake", "test"],
         "args":    ["--verbose"]
       }

    This form is equivalent to appending the arguments to the Command slice.

It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
"""
input com_github_openshift_api_build_v1_BuildPostCommitSpecInput {
  "args is a list of arguments that are provided to either Command, Script or the Docker image's default entrypoint. The arguments are placed immediately after the command to be run."
  args:[String]
  "command is the command to run. It may not be specified with Script. This might be needed if the image doesn't have `/bin/sh`, or if you do not want to use a shell. In all other cases, using Script might be more convenient."
  command:[String]
  "script is a shell script to be run with `/bin/sh -ic`. It may not be specified with Command. Use Script when a shell script is appropriate to execute the post build hook, for example for running unit tests with `rake test`. If you need control over the image entrypoint, or if the image does not have `/bin/sh`, use Command and/or Args. The `-i` flag is needed to support CentOS and RHEL images that use Software Collections (SCL), in order to have the appropriate collections enabled in the shell. E.g., in the Ruby image, this is necessary to make `ruby`, `bundle` and other binaries available in the PATH."
  script:String
}
"""
A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.

The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.

There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.

1. Shell script:

       "postCommit": {
         "script": "rake test --verbose",
       }

    The above is a convenient form which is equivalent to:

       "postCommit": {
         "command": ["/bin/sh", "-ic"],
         "args":    ["rake test --verbose"]
       }

2. A command as the image entrypoint:

       "postCommit": {
         "commit": ["rake", "test", "--verbose"]
       }

    Command overrides the image entrypoint in the exec form, as documented in
    Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.

3. Pass arguments to the default entrypoint:

       "postCommit": {
		      "args": ["rake", "test", "--verbose"]
	      }

    This form is only useful if the image entrypoint can handle arguments.

4. Shell script with arguments:

       "postCommit": {
         "script": "rake test $1",
         "args":   ["--verbose"]
       }

    This form is useful if you need to pass arguments that would otherwise be
    hard to quote properly in the shell script. In the script, $0 will be
    "/bin/sh" and $1, $2, etc, are the positional arguments from Args.

5. Command with arguments:

       "postCommit": {
         "command": ["rake", "test"],
         "args":    ["--verbose"]
       }

    This form is equivalent to appending the arguments to the Command slice.

It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
"""
type com_github_openshift_api_build_v1_BuildPostCommitSpecResult {
  "args is a list of arguments that are provided to either Command, Script or the Docker image's default entrypoint. The arguments are placed immediately after the command to be run."
  args:[String]
  "command is the command to run. It may not be specified with Script. This might be needed if the image doesn't have `/bin/sh`, or if you do not want to use a shell. In all other cases, using Script might be more convenient."
  command:[String]
  "script is a shell script to be run with `/bin/sh -ic`. It may not be specified with Command. Use Script when a shell script is appropriate to execute the post build hook, for example for running unit tests with `rake test`. If you need control over the image entrypoint, or if the image does not have `/bin/sh`, use Command and/or Args. The `-i` flag is needed to support CentOS and RHEL images that use Software Collections (SCL), in order to have the appropriate collections enabled in the shell. E.g., in the Ruby image, this is necessary to make `ruby`, `bundle` and other binaries available in the PATH."
  script:String
}
"BuildRequest is the resource used to pass parameters to build generator"
input com_github_openshift_api_build_v1_BuildRequestInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
  binary:com_github_openshift_api_build_v1_BinaryBuildSourceInput
  "DockerStrategyOptions contains extra strategy options for Docker builds"
  dockerStrategyOptions:com_github_openshift_api_build_v1_DockerStrategyOptionsInput
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated."
  lastVersion:Int
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "SourceStrategyOptions contains extra strategy options for Source builds"
  sourceStrategyOptions:com_github_openshift_api_build_v1_SourceStrategyOptionsInput
  "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
  triggeredBy:[com_github_openshift_api_build_v1_BuildTriggerCauseInput]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  triggeredByImage:io_k8s_api_core_v1_ObjectReferenceInput
}
"BuildRequest is the resource used to pass parameters to build generator"
type com_github_openshift_api_build_v1_BuildRequestResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
  binary:com_github_openshift_api_build_v1_BinaryBuildSourceResult
  "DockerStrategyOptions contains extra strategy options for Docker builds"
  dockerStrategyOptions:com_github_openshift_api_build_v1_DockerStrategyOptionsResult
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated."
  lastVersion:Int
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "SourceStrategyOptions contains extra strategy options for Source builds"
  sourceStrategyOptions:com_github_openshift_api_build_v1_SourceStrategyOptionsResult
  "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
  triggeredBy:[com_github_openshift_api_build_v1_BuildTriggerCauseResult]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  triggeredByImage:io_k8s_api_core_v1_ObjectReferenceResult
}
"Build encapsulates the inputs needed to produce a new deployable image, as well as the status of the execution and a reference to the Pod which executed the build."
type com_github_openshift_api_build_v1_BuildResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "BuildSpec has the information to represent a build and also additional information about a build"
  spec:com_github_openshift_api_build_v1_BuildSpecResult
  "BuildStatus contains the status of a build"
  status:com_github_openshift_api_build_v1_BuildStatusResult
}
"BuildSource is the SCM used for the build."
input com_github_openshift_api_build_v1_BuildSourceInput {
  "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
  binary:com_github_openshift_api_build_v1_BinaryBuildSourceInput
  "configMaps represents a list of configMaps and their destinations that will be used for the build."
  configMaps:[com_github_openshift_api_build_v1_ConfigMapBuildSourceInput]
  "contextDir specifies the sub-directory where the source code for the application exists. This allows to have buildable sources in directory other than root of repository."
  contextDir:String
  "dockerfile is the raw contents of a Dockerfile which should be built. When this option is specified, the FROM may be modified based on your strategy base image and additional ENV stanzas from your strategy environment will be added after the FROM, but before the rest of your Dockerfile stanzas. The Dockerfile source type may be used with other options like git - in those cases the Git repo will have any innate Dockerfile replaced in the context dir."
  dockerfile:String
  "GitBuildSource defines the parameters of a Git SCM"
  git:com_github_openshift_api_build_v1_GitBuildSourceInput
  "images describes a set of images to be used to provide source for the build"
  images:[com_github_openshift_api_build_v1_ImageSourceInput]
  "secrets represents a list of secrets and their destinations that will be used only for the build."
  secrets:[com_github_openshift_api_build_v1_SecretBuildSourceInput]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  sourceSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
  "type of build input to accept"
  type:String
}
"BuildSource is the SCM used for the build."
type com_github_openshift_api_build_v1_BuildSourceResult {
  "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source."
  binary:com_github_openshift_api_build_v1_BinaryBuildSourceResult
  "configMaps represents a list of configMaps and their destinations that will be used for the build."
  configMaps:[com_github_openshift_api_build_v1_ConfigMapBuildSourceResult]
  "contextDir specifies the sub-directory where the source code for the application exists. This allows to have buildable sources in directory other than root of repository."
  contextDir:String
  "dockerfile is the raw contents of a Dockerfile which should be built. When this option is specified, the FROM may be modified based on your strategy base image and additional ENV stanzas from your strategy environment will be added after the FROM, but before the rest of your Dockerfile stanzas. The Dockerfile source type may be used with other options like git - in those cases the Git repo will have any innate Dockerfile replaced in the context dir."
  dockerfile:String
  "GitBuildSource defines the parameters of a Git SCM"
  git:com_github_openshift_api_build_v1_GitBuildSourceResult
  "images describes a set of images to be used to provide source for the build"
  images:[com_github_openshift_api_build_v1_ImageSourceResult]
  "secrets represents a list of secrets and their destinations that will be used only for the build."
  secrets:[com_github_openshift_api_build_v1_SecretBuildSourceResult]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  sourceSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
  "type of build input to accept"
  type:String
}
"BuildSpec has the information to represent a build and also additional information about a build"
input com_github_openshift_api_build_v1_BuildSpecInput {
  "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer"
  completionDeadlineSeconds:Int
  "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
  nodeSelector:[StringInputProp!]
  "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
  output:com_github_openshift_api_build_v1_BuildOutputInput
  """
    A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.
    
    The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.
    
    There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.
    
    1. Shell script:
    
           "postCommit": {
             "script": "rake test --verbose",
           }
    
        The above is a convenient form which is equivalent to:
    
           "postCommit": {
             "command": ["/bin/sh", "-ic"],
             "args":    ["rake test --verbose"]
           }
    
    2. A command as the image entrypoint:
    
           "postCommit": {
             "commit": ["rake", "test", "--verbose"]
           }
    
        Command overrides the image entrypoint in the exec form, as documented in
        Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.
    
    3. Pass arguments to the default entrypoint:
    
           "postCommit": {
    		      "args": ["rake", "test", "--verbose"]
    	      }
    
        This form is only useful if the image entrypoint can handle arguments.
    
    4. Shell script with arguments:
    
           "postCommit": {
             "script": "rake test $1",
             "args":   ["--verbose"]
           }
    
        This form is useful if you need to pass arguments that would otherwise be
        hard to quote properly in the shell script. In the script, $0 will be
        "/bin/sh" and $1, $2, etc, are the positional arguments from Args.
    
    5. Command with arguments:
    
           "postCommit": {
             "command": ["rake", "test"],
             "args":    ["--verbose"]
           }
    
        This form is equivalent to appending the arguments to the Command slice.
    
    It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
    """
  postCommit:com_github_openshift_api_build_v1_BuildPostCommitSpecInput
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsInput
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
  serviceAccount:String
  "BuildSource is the SCM used for the build."
  source:com_github_openshift_api_build_v1_BuildSourceInput
  "BuildStrategy contains the details of how to perform a build."
  strategy:com_github_openshift_api_build_v1_BuildStrategyInput
  "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
  triggeredBy:[com_github_openshift_api_build_v1_BuildTriggerCauseInput]
}
"BuildSpec has the information to represent a build and also additional information about a build"
type com_github_openshift_api_build_v1_BuildSpecResult {
  "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer"
  completionDeadlineSeconds:Int
  "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
  nodeSelector:[StringResultProp!]
  "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce."
  output:com_github_openshift_api_build_v1_BuildOutputResult
  """
    A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.
    
    The build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.
    
    There are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.
    
    1. Shell script:
    
           "postCommit": {
             "script": "rake test --verbose",
           }
    
        The above is a convenient form which is equivalent to:
    
           "postCommit": {
             "command": ["/bin/sh", "-ic"],
             "args":    ["rake test --verbose"]
           }
    
    2. A command as the image entrypoint:
    
           "postCommit": {
             "commit": ["rake", "test", "--verbose"]
           }
    
        Command overrides the image entrypoint in the exec form, as documented in
        Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.
    
    3. Pass arguments to the default entrypoint:
    
           "postCommit": {
    		      "args": ["rake", "test", "--verbose"]
    	      }
    
        This form is only useful if the image entrypoint can handle arguments.
    
    4. Shell script with arguments:
    
           "postCommit": {
             "script": "rake test $1",
             "args":   ["--verbose"]
           }
    
        This form is useful if you need to pass arguments that would otherwise be
        hard to quote properly in the shell script. In the script, $0 will be
        "/bin/sh" and $1, $2, etc, are the positional arguments from Args.
    
    5. Command with arguments:
    
           "postCommit": {
             "command": ["rake", "test"],
             "args":    ["--verbose"]
           }
    
        This form is equivalent to appending the arguments to the Command slice.
    
    It is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.
    """
  postCommit:com_github_openshift_api_build_v1_BuildPostCommitSpecResult
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsResult
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
  serviceAccount:String
  "BuildSource is the SCM used for the build."
  source:com_github_openshift_api_build_v1_BuildSourceResult
  "BuildStrategy contains the details of how to perform a build."
  strategy:com_github_openshift_api_build_v1_BuildStrategyResult
  "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
  triggeredBy:[com_github_openshift_api_build_v1_BuildTriggerCauseResult]
}
"BuildStatus contains the status of a build"
input com_github_openshift_api_build_v1_BuildStatusInput {
  "cancelled describes if a cancel event was triggered for the build."
  cancelled:Boolean
  completionTimestamp:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  config:io_k8s_api_core_v1_ObjectReferenceInput
  "duration contains time.Duration object describing build time."
  duration:Int
  "logSnippet is the last few lines of the build log.  This value is only set for builds that failed."
  logSnippet:String
  "message is a human-readable message indicating details about why the build has this status."
  message:String
  "BuildStatusOutput contains the status of the built image."
  output:com_github_openshift_api_build_v1_BuildStatusOutputInput
  "outputDockerImageReference contains a reference to the Docker image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image."
  outputDockerImageReference:String
  "phase is the point in the build lifecycle. Possible values are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"Error\", and \"Cancelled\"."
  phase:String
  "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
  reason:String
  "stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage."
  stages:[com_github_openshift_api_build_v1_StageInfoInput]
  startTimestamp:String
}
"BuildStatusOutput contains the status of the built image."
input com_github_openshift_api_build_v1_BuildStatusOutputInput {
  "BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed."
  to:com_github_openshift_api_build_v1_BuildStatusOutputToInput
}
"BuildStatusOutput contains the status of the built image."
type com_github_openshift_api_build_v1_BuildStatusOutputResult {
  "BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed."
  to:com_github_openshift_api_build_v1_BuildStatusOutputToResult
}
"BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed."
input com_github_openshift_api_build_v1_BuildStatusOutputToInput {
  """
    imageDigest is the digest of the built Docker image. The digest uniquely identifies the image in the registry to which it was pushed.
    
    Please note that this field may not always be set even if the push completes successfully - e.g. when the registry returns no digest or returns it in a format that the builder doesn't understand.
    """
  imageDigest:String
}
"BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed."
type com_github_openshift_api_build_v1_BuildStatusOutputToResult {
  """
    imageDigest is the digest of the built Docker image. The digest uniquely identifies the image in the registry to which it was pushed.
    
    Please note that this field may not always be set even if the push completes successfully - e.g. when the registry returns no digest or returns it in a format that the builder doesn't understand.
    """
  imageDigest:String
}
"BuildStatus contains the status of a build"
type com_github_openshift_api_build_v1_BuildStatusResult {
  "cancelled describes if a cancel event was triggered for the build."
  cancelled:Boolean
  completionTimestamp:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  config:io_k8s_api_core_v1_ObjectReferenceResult
  "duration contains time.Duration object describing build time."
  duration:Int
  "logSnippet is the last few lines of the build log.  This value is only set for builds that failed."
  logSnippet:String
  "message is a human-readable message indicating details about why the build has this status."
  message:String
  "BuildStatusOutput contains the status of the built image."
  output:com_github_openshift_api_build_v1_BuildStatusOutputResult
  "outputDockerImageReference contains a reference to the Docker image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image."
  outputDockerImageReference:String
  "phase is the point in the build lifecycle. Possible values are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"Error\", and \"Cancelled\"."
  phase:String
  "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
  reason:String
  "stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage."
  stages:[com_github_openshift_api_build_v1_StageInfoResult]
  startTimestamp:String
}
"BuildStrategy contains the details of how to perform a build."
input com_github_openshift_api_build_v1_BuildStrategyInput {
  "CustomBuildStrategy defines input parameters specific to Custom build."
  customStrategy:com_github_openshift_api_build_v1_CustomBuildStrategyInput
  "DockerBuildStrategy defines input parameters specific to Docker build."
  dockerStrategy:com_github_openshift_api_build_v1_DockerBuildStrategyInput
  "JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build."
  jenkinsPipelineStrategy:com_github_openshift_api_build_v1_JenkinsPipelineBuildStrategyInput
  "SourceBuildStrategy defines input parameters specific to an Source build."
  sourceStrategy:com_github_openshift_api_build_v1_SourceBuildStrategyInput
  "type is the kind of build strategy."
  type:String
}
"BuildStrategy contains the details of how to perform a build."
type com_github_openshift_api_build_v1_BuildStrategyResult {
  "CustomBuildStrategy defines input parameters specific to Custom build."
  customStrategy:com_github_openshift_api_build_v1_CustomBuildStrategyResult
  "DockerBuildStrategy defines input parameters specific to Docker build."
  dockerStrategy:com_github_openshift_api_build_v1_DockerBuildStrategyResult
  "JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build."
  jenkinsPipelineStrategy:com_github_openshift_api_build_v1_JenkinsPipelineBuildStrategyResult
  "SourceBuildStrategy defines input parameters specific to an Source build."
  sourceStrategy:com_github_openshift_api_build_v1_SourceBuildStrategyResult
  "type is the kind of build strategy."
  type:String
}
"BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration."
input com_github_openshift_api_build_v1_BuildTriggerCauseInput {
  "BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build."
  bitbucketWebHook:com_github_openshift_api_build_v1_BitbucketWebHookCauseInput
  "GenericWebHookCause holds information about a generic WebHook that triggered a build."
  genericWebHook:com_github_openshift_api_build_v1_GenericWebHookCauseInput
  "GitHubWebHookCause has information about a GitHub webhook that triggered a build."
  githubWebHook:com_github_openshift_api_build_v1_GitHubWebHookCauseInput
  "GitLabWebHookCause has information about a GitLab webhook that triggered a build."
  gitlabWebHook:com_github_openshift_api_build_v1_GitLabWebHookCauseInput
  "ImageChangeCause contains information about the image that triggered a build"
  imageChangeBuild:com_github_openshift_api_build_v1_ImageChangeCauseInput
  "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc."
  message:String
}
"BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration."
type com_github_openshift_api_build_v1_BuildTriggerCauseResult {
  "BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build."
  bitbucketWebHook:com_github_openshift_api_build_v1_BitbucketWebHookCauseResult
  "GenericWebHookCause holds information about a generic WebHook that triggered a build."
  genericWebHook:com_github_openshift_api_build_v1_GenericWebHookCauseResult
  "GitHubWebHookCause has information about a GitHub webhook that triggered a build."
  githubWebHook:com_github_openshift_api_build_v1_GitHubWebHookCauseResult
  "GitLabWebHookCause has information about a GitLab webhook that triggered a build."
  gitlabWebHook:com_github_openshift_api_build_v1_GitLabWebHookCauseResult
  "ImageChangeCause contains information about the image that triggered a build"
  imageChangeBuild:com_github_openshift_api_build_v1_ImageChangeCauseResult
  "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc."
  message:String
}
"BuildTriggerPolicy describes a policy for a single trigger that results in a new Build."
input com_github_openshift_api_build_v1_BuildTriggerPolicyInput {
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  bitbucket:com_github_openshift_api_build_v1_WebHookTriggerInput
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  generic:com_github_openshift_api_build_v1_WebHookTriggerInput
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  github:com_github_openshift_api_build_v1_WebHookTriggerInput
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  gitlab:com_github_openshift_api_build_v1_WebHookTriggerInput
  "ImageChangeTrigger allows builds to be triggered when an ImageStream changes"
  imageChange:com_github_openshift_api_build_v1_ImageChangeTriggerInput
  "type is the type of build trigger"
  type:String
}
"BuildTriggerPolicy describes a policy for a single trigger that results in a new Build."
type com_github_openshift_api_build_v1_BuildTriggerPolicyResult {
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  bitbucket:com_github_openshift_api_build_v1_WebHookTriggerResult
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  generic:com_github_openshift_api_build_v1_WebHookTriggerResult
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  github:com_github_openshift_api_build_v1_WebHookTriggerResult
  "WebHookTrigger is a trigger that gets invoked using a webhook type of post"
  gitlab:com_github_openshift_api_build_v1_WebHookTriggerResult
  "ImageChangeTrigger allows builds to be triggered when an ImageStream changes"
  imageChange:com_github_openshift_api_build_v1_ImageChangeTriggerResult
  "type is the type of build trigger"
  type:String
}
"ConfigMapBuildSource describes a configmap and its destination directory that will be used only at the build time. The content of the configmap referenced here will be copied into the destination directory instead of mounting."
input com_github_openshift_api_build_v1_ConfigMapBuildSourceInput {
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  configMap:io_k8s_api_core_v1_LocalObjectReferenceInput
  "destinationDir is the directory where the files from the configmap should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build."
  destinationDir:String
}
"ConfigMapBuildSource describes a configmap and its destination directory that will be used only at the build time. The content of the configmap referenced here will be copied into the destination directory instead of mounting."
type com_github_openshift_api_build_v1_ConfigMapBuildSourceResult {
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  configMap:io_k8s_api_core_v1_LocalObjectReferenceResult
  "destinationDir is the directory where the files from the configmap should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build."
  destinationDir:String
}
"CustomBuildStrategy defines input parameters specific to Custom build."
input com_github_openshift_api_build_v1_CustomBuildStrategyInput {
  "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder"
  buildAPIVersion:String
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container."
  exposeDockerSocket:Boolean
  "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally"
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
  "secrets is a list of additional secrets that will be included in the build pod"
  secrets:[com_github_openshift_api_build_v1_SecretSpecInput]
}
"CustomBuildStrategy defines input parameters specific to Custom build."
type com_github_openshift_api_build_v1_CustomBuildStrategyResult {
  "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder"
  buildAPIVersion:String
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container."
  exposeDockerSocket:Boolean
  "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally"
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
  "secrets is a list of additional secrets that will be included in the build pod"
  secrets:[com_github_openshift_api_build_v1_SecretSpecResult]
}
"DockerBuildStrategy defines input parameters specific to Docker build."
input com_github_openshift_api_build_v1_DockerBuildStrategyInput {
  "buildArgs contains build arguments that will be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg for more details."
  buildArgs:[io_k8s_api_core_v1_EnvVarInput]
  "dockerfilePath is the path of the Dockerfile that will be used to build the Docker image, relative to the root of the context (contextDir)."
  dockerfilePath:String
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "forcePull describes if the builder should pull the images from registry prior to building."
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "imageOptimizationPolicy describes what optimizations the system can use when building images to reduce the final size or time spent building the image. The default policy is 'None' which means the final build image will be equivalent to an image created by the Docker build API. The experimental policy 'SkipLayers' will avoid commiting new layers in between each image step, and will fail if the Dockerfile cannot provide compatibility with the 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is the same as 'SkipLayers' but simply warns if compatibility cannot be preserved."
  imageOptimizationPolicy:String
  "noCache if set to true indicates that the docker build must be executed with the --no-cache=true flag"
  noCache:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"DockerBuildStrategy defines input parameters specific to Docker build."
type com_github_openshift_api_build_v1_DockerBuildStrategyResult {
  "buildArgs contains build arguments that will be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg for more details."
  buildArgs:[io_k8s_api_core_v1_EnvVarResult]
  "dockerfilePath is the path of the Dockerfile that will be used to build the Docker image, relative to the root of the context (contextDir)."
  dockerfilePath:String
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "forcePull describes if the builder should pull the images from registry prior to building."
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "imageOptimizationPolicy describes what optimizations the system can use when building images to reduce the final size or time spent building the image. The default policy is 'None' which means the final build image will be equivalent to an image created by the Docker build API. The experimental policy 'SkipLayers' will avoid commiting new layers in between each image step, and will fail if the Dockerfile cannot provide compatibility with the 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is the same as 'SkipLayers' but simply warns if compatibility cannot be preserved."
  imageOptimizationPolicy:String
  "noCache if set to true indicates that the docker build must be executed with the --no-cache=true flag"
  noCache:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"DockerStrategyOptions contains extra strategy options for Docker builds"
input com_github_openshift_api_build_v1_DockerStrategyOptionsInput {
  "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details"
  buildArgs:[io_k8s_api_core_v1_EnvVarInput]
  "noCache overrides the docker-strategy noCache option in the build config"
  noCache:Boolean
}
"DockerStrategyOptions contains extra strategy options for Docker builds"
type com_github_openshift_api_build_v1_DockerStrategyOptionsResult {
  "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details"
  buildArgs:[io_k8s_api_core_v1_EnvVarResult]
  "noCache overrides the docker-strategy noCache option in the build config"
  noCache:Boolean
}
"GenericWebHookCause holds information about a generic WebHook that triggered a build."
input com_github_openshift_api_build_v1_GenericWebHookCauseInput {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GenericWebHookCause holds information about a generic WebHook that triggered a build."
type com_github_openshift_api_build_v1_GenericWebHookCauseResult {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GitBuildSource defines the parameters of a Git SCM"
input com_github_openshift_api_build_v1_GitBuildSourceInput {
  "httpProxy is a proxy used to reach the git repository over http"
  httpProxy:String
  "httpsProxy is a proxy used to reach the git repository over https"
  httpsProxy:String
  "noProxy is the list of domains for which the proxy should not be used"
  noProxy:String
  "ref is the branch/tag/ref to build."
  ref:String
  "uri points to the source that will be built. The structure of the source will depend on the type of build to run"
  uri:String
}
"GitBuildSource defines the parameters of a Git SCM"
type com_github_openshift_api_build_v1_GitBuildSourceResult {
  "httpProxy is a proxy used to reach the git repository over http"
  httpProxy:String
  "httpsProxy is a proxy used to reach the git repository over https"
  httpsProxy:String
  "noProxy is the list of domains for which the proxy should not be used"
  noProxy:String
  "ref is the branch/tag/ref to build."
  ref:String
  "uri points to the source that will be built. The structure of the source will depend on the type of build to run"
  uri:String
}
"GitHubWebHookCause has information about a GitHub webhook that triggered a build."
input com_github_openshift_api_build_v1_GitHubWebHookCauseInput {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GitHubWebHookCause has information about a GitHub webhook that triggered a build."
type com_github_openshift_api_build_v1_GitHubWebHookCauseResult {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GitLabWebHookCause has information about a GitLab webhook that triggered a build."
input com_github_openshift_api_build_v1_GitLabWebHookCauseInput {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionInput
  "Secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GitLabWebHookCause has information about a GitLab webhook that triggered a build."
type com_github_openshift_api_build_v1_GitLabWebHookCauseResult {
  "SourceRevision is the revision or commit information from the source for the build"
  revision:com_github_openshift_api_build_v1_SourceRevisionResult
  "Secret is the obfuscated webhook secret that triggered a build."
  secret:String
}
"GitSourceRevision is the commit information from a git source for a build"
input com_github_openshift_api_build_v1_GitSourceRevisionInput {
  "SourceControlUser defines the identity of a user of source control"
  author:com_github_openshift_api_build_v1_SourceControlUserInput
  "commit is the commit hash identifying a specific commit"
  commit:String
  "SourceControlUser defines the identity of a user of source control"
  committer:com_github_openshift_api_build_v1_SourceControlUserInput
  "message is the description of a specific commit"
  message:String
}
"GitSourceRevision is the commit information from a git source for a build"
type com_github_openshift_api_build_v1_GitSourceRevisionResult {
  "SourceControlUser defines the identity of a user of source control"
  author:com_github_openshift_api_build_v1_SourceControlUserResult
  "commit is the commit hash identifying a specific commit"
  commit:String
  "SourceControlUser defines the identity of a user of source control"
  committer:com_github_openshift_api_build_v1_SourceControlUserResult
  "message is the description of a specific commit"
  message:String
}
"ImageChangeCause contains information about the image that triggered a build"
input com_github_openshift_api_build_v1_ImageChangeCauseInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  fromRef:io_k8s_api_core_v1_ObjectReferenceInput
  "imageID is the ID of the image that triggered a a new build."
  imageID:String
}
"ImageChangeCause contains information about the image that triggered a build"
type com_github_openshift_api_build_v1_ImageChangeCauseResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  fromRef:io_k8s_api_core_v1_ObjectReferenceResult
  "imageID is the ID of the image that triggered a a new build."
  imageID:String
}
"ImageChangeTrigger allows builds to be triggered when an ImageStream changes"
input com_github_openshift_api_build_v1_ImageChangeTriggerInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build"
  lastTriggeredImageID:String
  "paused is true if this trigger is temporarily disabled. Optional."
  paused:Boolean
}
"ImageChangeTrigger allows builds to be triggered when an ImageStream changes"
type com_github_openshift_api_build_v1_ImageChangeTriggerResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build"
  lastTriggeredImageID:String
  "paused is true if this trigger is temporarily disabled. Optional."
  paused:Boolean
}
"ImageLabel represents a label applied to the resulting image."
input com_github_openshift_api_build_v1_ImageLabelInput {
  "name defines the name of the label. It must have non-zero length."
  name:String
  "value defines the literal value of the label."
  value:String
}
"ImageLabel represents a label applied to the resulting image."
type com_github_openshift_api_build_v1_ImageLabelResult {
  "name defines the name of the label. It must have non-zero length."
  name:String
  "value defines the literal value of the label."
  value:String
}
"ImageSource is used to describe build source that will be extracted from an image or used during a multi stage build. A reference of type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to pull the image from an external registry or override the default service account secret if pulling from the internal registry. Image sources can either be used to extract content from an image and place it into the build context along with the repository source, or used directly during a multi-stage Docker build to allow content to be copied without overwriting the contents of the repository source (see the 'paths' and 'as' fields)."
input com_github_openshift_api_build_v1_ImageSourceInput {
  "A list of image names that this source will be used in place of during a multi-stage Docker image build. For instance, a Dockerfile that uses \"COPY --from=nginx:latest\" will first check for an image source that has \"nginx:latest\" in this field before attempting to pull directly. If the Dockerfile does not reference an image source it is ignored. This field and paths may both be set, in which case the contents will be used twice."
  as:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "paths is a list of source and destination paths to copy from the image. This content will be copied into the build context prior to starting the build. If no paths are set, the build context will not be altered."
  paths:[com_github_openshift_api_build_v1_ImageSourcePathInput]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"ImageSourcePath describes a path to be copied from a source image and its destination within the build directory."
input com_github_openshift_api_build_v1_ImageSourcePathInput {
  "destinationDir is the relative directory within the build directory where files copied from the image are placed."
  destinationDir:String
  "sourcePath is the absolute path of the file or directory inside the image to copy to the build directory.  If the source path ends in /. then the content of the directory will be copied, but the directory itself will not be created at the destination."
  sourcePath:String
}
"ImageSourcePath describes a path to be copied from a source image and its destination within the build directory."
type com_github_openshift_api_build_v1_ImageSourcePathResult {
  "destinationDir is the relative directory within the build directory where files copied from the image are placed."
  destinationDir:String
  "sourcePath is the absolute path of the file or directory inside the image to copy to the build directory.  If the source path ends in /. then the content of the directory will be copied, but the directory itself will not be created at the destination."
  sourcePath:String
}
"ImageSource is used to describe build source that will be extracted from an image or used during a multi stage build. A reference of type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to pull the image from an external registry or override the default service account secret if pulling from the internal registry. Image sources can either be used to extract content from an image and place it into the build context along with the repository source, or used directly during a multi-stage Docker build to allow content to be copied without overwriting the contents of the repository source (see the 'paths' and 'as' fields)."
type com_github_openshift_api_build_v1_ImageSourceResult {
  "A list of image names that this source will be used in place of during a multi-stage Docker image build. For instance, a Dockerfile that uses \"COPY --from=nginx:latest\" will first check for an image source that has \"nginx:latest\" in this field before attempting to pull directly. If the Dockerfile does not reference an image source it is ignored. This field and paths may both be set, in which case the contents will be used twice."
  as:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "paths is a list of source and destination paths to copy from the image. This content will be copied into the build context prior to starting the build. If no paths are set, the build context will not be altered."
  paths:[com_github_openshift_api_build_v1_ImageSourcePathResult]
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build."
input com_github_openshift_api_build_v1_JenkinsPipelineBuildStrategyInput {
  "env contains additional environment variables you want to pass into a build pipeline."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build."
  jenkinsfile:String
  "JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir."
  jenkinsfilePath:String
}
"JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build."
type com_github_openshift_api_build_v1_JenkinsPipelineBuildStrategyResult {
  "env contains additional environment variables you want to pass into a build pipeline."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build."
  jenkinsfile:String
  "JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir."
  jenkinsfilePath:String
}
"SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting."
input com_github_openshift_api_build_v1_SecretBuildSourceInput {
  "destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build."
  destinationDir:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secret:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting."
type com_github_openshift_api_build_v1_SecretBuildSourceResult {
  "destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build."
  destinationDir:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secret:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"SecretLocalReference contains information that points to the local secret being used"
input com_github_openshift_api_build_v1_SecretLocalReferenceInput {
  "Name is the name of the resource in the same namespace being referenced"
  name:String
}
"SecretLocalReference contains information that points to the local secret being used"
type com_github_openshift_api_build_v1_SecretLocalReferenceResult {
  "Name is the name of the resource in the same namespace being referenced"
  name:String
}
"SecretSpec specifies a secret to be included in a build pod and its corresponding mount point"
input com_github_openshift_api_build_v1_SecretSpecInput {
  "mountPath is the path at which to mount the secret"
  mountPath:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretSource:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"SecretSpec specifies a secret to be included in a build pod and its corresponding mount point"
type com_github_openshift_api_build_v1_SecretSpecResult {
  "mountPath is the path at which to mount the secret"
  mountPath:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretSource:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"SourceBuildStrategy defines input parameters specific to an Source build."
input com_github_openshift_api_build_v1_SourceBuildStrategyInput {
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "forcePull describes if the builder should pull the images from registry prior to building."
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "incremental flag forces the Source build to do incremental builds if true."
  incremental:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceInput
  "scripts is the location of Source scripts"
  scripts:String
}
"SourceBuildStrategy defines input parameters specific to an Source build."
type com_github_openshift_api_build_v1_SourceBuildStrategyResult {
  "env contains additional environment variables you want to pass into a builder container."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "forcePull describes if the builder should pull the images from registry prior to building."
  forcePull:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "incremental flag forces the Source build to do incremental builds if true."
  incremental:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  pullSecret:io_k8s_api_core_v1_LocalObjectReferenceResult
  "scripts is the location of Source scripts"
  scripts:String
}
"SourceControlUser defines the identity of a user of source control"
input com_github_openshift_api_build_v1_SourceControlUserInput {
  "email of the source control user"
  email:String
  "name of the source control user"
  name:String
}
"SourceControlUser defines the identity of a user of source control"
type com_github_openshift_api_build_v1_SourceControlUserResult {
  "email of the source control user"
  email:String
  "name of the source control user"
  name:String
}
"SourceRevision is the revision or commit information from the source for the build"
input com_github_openshift_api_build_v1_SourceRevisionInput {
  "GitSourceRevision is the commit information from a git source for a build"
  git:com_github_openshift_api_build_v1_GitSourceRevisionInput
  "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
  type:String
}
"SourceRevision is the revision or commit information from the source for the build"
type com_github_openshift_api_build_v1_SourceRevisionResult {
  "GitSourceRevision is the commit information from a git source for a build"
  git:com_github_openshift_api_build_v1_GitSourceRevisionResult
  "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
  type:String
}
"SourceStrategyOptions contains extra strategy options for Source builds"
input com_github_openshift_api_build_v1_SourceStrategyOptionsInput {
  "incremental overrides the source-strategy incremental option in the build config"
  incremental:Boolean
}
"SourceStrategyOptions contains extra strategy options for Source builds"
type com_github_openshift_api_build_v1_SourceStrategyOptionsResult {
  "incremental overrides the source-strategy incremental option in the build config"
  incremental:Boolean
}
"StageInfo contains details about a build stage."
input com_github_openshift_api_build_v1_StageInfoInput {
  "durationMilliseconds identifies how long the stage took to complete in milliseconds. Note: the duration of a stage can exceed the sum of the duration of the steps within the stage as not all actions are accounted for in explicit build steps."
  durationMilliseconds:Int
  "name is a unique identifier for each build stage that occurs."
  name:String
  startTime:String
  "steps contains details about each step that occurs during a build stage including start time and duration in milliseconds."
  steps:[com_github_openshift_api_build_v1_StepInfoInput]
}
"StageInfo contains details about a build stage."
type com_github_openshift_api_build_v1_StageInfoResult {
  "durationMilliseconds identifies how long the stage took to complete in milliseconds. Note: the duration of a stage can exceed the sum of the duration of the steps within the stage as not all actions are accounted for in explicit build steps."
  durationMilliseconds:Int
  "name is a unique identifier for each build stage that occurs."
  name:String
  startTime:String
  "steps contains details about each step that occurs during a build stage including start time and duration in milliseconds."
  steps:[com_github_openshift_api_build_v1_StepInfoResult]
}
"StepInfo contains details about a build step."
input com_github_openshift_api_build_v1_StepInfoInput {
  "durationMilliseconds identifies how long the step took to complete in milliseconds."
  durationMilliseconds:Int
  "name is a unique identifier for each build step."
  name:String
  startTime:String
}
"StepInfo contains details about a build step."
type com_github_openshift_api_build_v1_StepInfoResult {
  "durationMilliseconds identifies how long the step took to complete in milliseconds."
  durationMilliseconds:Int
  "name is a unique identifier for each build step."
  name:String
  startTime:String
}
"WebHookTrigger is a trigger that gets invoked using a webhook type of post"
input com_github_openshift_api_build_v1_WebHookTriggerInput {
  "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook."
  allowEnv:Boolean
  "secret used to validate requests. Deprecated: use SecretReference instead."
  secret:String
  "SecretLocalReference contains information that points to the local secret being used"
  secretReference:com_github_openshift_api_build_v1_SecretLocalReferenceInput
}
"WebHookTrigger is a trigger that gets invoked using a webhook type of post"
type com_github_openshift_api_build_v1_WebHookTriggerResult {
  "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook."
  allowEnv:Boolean
  "secret used to validate requests. Deprecated: use SecretReference instead."
  secret:String
  "SecretLocalReference contains information that points to the local secret being used"
  secretReference:com_github_openshift_api_build_v1_SecretLocalReferenceResult
}
"ImageBlobReferences describes the blob references within an image."
type com_github_openshift_api_image_v1_ImageBlobReferencesResult {
  "config, if set, is the blob that contains the image config. Some images do not have separate config blobs and this field will be set to nil if so."
  config:String
  "imageMissing is true if the image is referenced by the image stream but the image object has been deleted from the API by an administrator. When this field is set, layers and config fields may be empty and callers that depend on the image metadata should consider the image to be unavailable for download or viewing."
  imageMissing:Boolean
  "layers is the list of blobs that compose this image, from base layer to top layer. All layers referenced by this array will be defined in the blobs map. Some images may have zero layers."
  layers:[String]
}
"A property entry"
type com_github_openshift_api_image_v1_ImageBlobReferencesResultResultProp {
  key:String!
  value:com_github_openshift_api_image_v1_ImageBlobReferencesResult
}
"ImageImportSpec describes a request to import a specific image."
input com_github_openshift_api_image_v1_ImageImportSpecInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyInput
  "IncludeManifest determines if the manifest for each image is returned in the response"
  includeManifest:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyInput
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  to:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"ImageImportSpec describes a request to import a specific image."
type com_github_openshift_api_image_v1_ImageImportSpecResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyResult
  "IncludeManifest determines if the manifest for each image is returned in the response"
  includeManifest:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyResult
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  to:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"ImageImportStatus describes the result of an image import."
input com_github_openshift_api_image_v1_ImageImportStatusInput {
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageInput
  "Status is a return value for calls that don't return other objects."
  status:io_k8s_apimachinery_pkg_apis_meta_v1_StatusInput
  "Tag is the tag this image was located under, if any"
  tag:String
}
"ImageImportStatus describes the result of an image import."
type com_github_openshift_api_image_v1_ImageImportStatusResult {
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageResult
  "Status is a return value for calls that don't return other objects."
  status:io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  "Tag is the tag this image was located under, if any"
  tag:String
}
"Image is an immutable representation of a Docker image and metadata at a point in time."
input com_github_openshift_api_image_v1_ImageInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2."
  dockerImageConfig:String
  "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data."
  dockerImageLayers:[com_github_openshift_api_image_v1_ImageLayerInput]
  "DockerImageManifest is the raw JSON of the manifest"
  dockerImageManifest:String
  "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2."
  dockerImageManifestMediaType:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  dockerImageMetadata:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\""
  dockerImageMetadataVersion:String
  "DockerImageReference is the string that can be used to pull this image."
  dockerImageReference:String
  "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1."
  dockerImageSignatures:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Signatures holds all signatures of the image."
  signatures:[com_github_openshift_api_image_v1_ImageSignatureInput]
}
"ImageLayerData contains metadata about an image layer."
type com_github_openshift_api_image_v1_ImageLayerDataResult {
  "MediaType of the referenced object."
  mediaType:String
  "Size of the layer in bytes as defined by the underlying store. This field is optional if the necessary information about size is not available."
  size:Int
}
"A property entry"
type com_github_openshift_api_image_v1_ImageLayerDataResultResultProp {
  key:String!
  value:com_github_openshift_api_image_v1_ImageLayerDataResult
}
"ImageLayer represents a single layer of the image. Some images may have multiple layers. Some may have none."
input com_github_openshift_api_image_v1_ImageLayerInput {
  "MediaType of the referenced object."
  mediaType:String
  "Name of the layer as defined by the underlying store."
  name:String
  "Size of the layer in bytes as defined by the underlying store."
  size:Int
}
"ImageLayer represents a single layer of the image. Some images may have multiple layers. Some may have none."
type com_github_openshift_api_image_v1_ImageLayerResult {
  "MediaType of the referenced object."
  mediaType:String
  "Name of the layer as defined by the underlying store."
  name:String
  "Size of the layer in bytes as defined by the underlying store."
  size:Int
}
"ImageList is a list of Image objects."
type com_github_openshift_api_image_v1_ImageListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of images"
  items:[com_github_openshift_api_image_v1_ImageResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
input com_github_openshift_api_image_v1_ImageLookupPolicyInput {
  "local will change the docker short image references (like \"mysql\" or \"php:latest\") on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag's referencePolicy is taken into account on the replaced value. Only works within the current namespace."
  local:Boolean
}
"ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
type com_github_openshift_api_image_v1_ImageLookupPolicyResult {
  "local will change the docker short image references (like \"mysql\" or \"php:latest\") on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag's referencePolicy is taken into account on the replaced value. Only works within the current namespace."
  local:Boolean
}
"Image is an immutable representation of a Docker image and metadata at a point in time."
type com_github_openshift_api_image_v1_ImageResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2."
  dockerImageConfig:String
  "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data."
  dockerImageLayers:[com_github_openshift_api_image_v1_ImageLayerResult]
  "DockerImageManifest is the raw JSON of the manifest"
  dockerImageManifest:String
  "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2."
  dockerImageManifestMediaType:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  dockerImageMetadata:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\""
  dockerImageMetadataVersion:String
  "DockerImageReference is the string that can be used to pull this image."
  dockerImageReference:String
  "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1."
  dockerImageSignatures:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Signatures holds all signatures of the image."
  signatures:[com_github_openshift_api_image_v1_ImageSignatureResult]
}
"ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose."
input com_github_openshift_api_image_v1_ImageSignatureInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Conditions represent the latest available observations of a signature's current state."
  conditions:[com_github_openshift_api_image_v1_SignatureConditionInput]
  "Required: An opaque binary string which is an image's signature."
  content:String
  created:String
  "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\")."
  imageIdentity:String
  "SignatureIssuer holds information about an issuer of signing certificate or key."
  issuedBy:com_github_openshift_api_image_v1_SignatureIssuerInput
  "SignatureSubject holds information about a person or entity who created the signature."
  issuedTo:com_github_openshift_api_image_v1_SignatureSubjectInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Contains claims from the signature."
  signedClaims:[StringInputProp!]
  "Required: Describes a type of stored blob."
  type:String
}
"ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose."
type com_github_openshift_api_image_v1_ImageSignatureResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Conditions represent the latest available observations of a signature's current state."
  conditions:[com_github_openshift_api_image_v1_SignatureConditionResult]
  "Required: An opaque binary string which is an image's signature."
  content:String
  created:String
  "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\")."
  imageIdentity:String
  "SignatureIssuer holds information about an issuer of signing certificate or key."
  issuedBy:com_github_openshift_api_image_v1_SignatureIssuerResult
  "SignatureSubject holds information about a person or entity who created the signature."
  issuedTo:com_github_openshift_api_image_v1_SignatureSubjectResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Contains claims from the signature."
  signedClaims:[StringResultProp!]
  "Required: Describes a type of stored blob."
  type:String
}
"ImageStreamImage represents an Image that is retrieved by image name from an ImageStream."
type com_github_openshift_api_image_v1_ImageStreamImageResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"""
The image stream import resource provides an easy way for a user to find and import Docker images from other Docker registries into the server. Individual images or an entire image repository may be imported, and users may choose to see the results of the import prior to tagging the resulting images into the specified image stream.

This API is intended for end-user tools that need to see the metadata of the image prior to import (for instance, to generate an application from it). Clients that know the desired image can continue to create spec.tags directly into their image streams.
"""
input com_github_openshift_api_image_v1_ImageStreamImportInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ImageStreamImportSpec defines what images should be imported."
  spec:com_github_openshift_api_image_v1_ImageStreamImportSpecInput
  "ImageStreamImportStatus contains information about the status of an image stream import."
  status:com_github_openshift_api_image_v1_ImageStreamImportStatusInput
}
"""
The image stream import resource provides an easy way for a user to find and import Docker images from other Docker registries into the server. Individual images or an entire image repository may be imported, and users may choose to see the results of the import prior to tagging the resulting images into the specified image stream.

This API is intended for end-user tools that need to see the metadata of the image prior to import (for instance, to generate an application from it). Clients that know the desired image can continue to create spec.tags directly into their image streams.
"""
type com_github_openshift_api_image_v1_ImageStreamImportResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ImageStreamImportSpec defines what images should be imported."
  spec:com_github_openshift_api_image_v1_ImageStreamImportSpecResult
  "ImageStreamImportStatus contains information about the status of an image stream import."
  status:com_github_openshift_api_image_v1_ImageStreamImportStatusResult
}
"ImageStreamImportSpec defines what images should be imported."
input com_github_openshift_api_image_v1_ImageStreamImportSpecInput {
  "Images are a list of individual images to import."
  images:[com_github_openshift_api_image_v1_ImageImportSpecInput]
  "Import indicates whether to perform an import - if so, the specified tags are set on the spec and status of the image stream defined by the type meta."
  import:Boolean
  "RepositoryImportSpec describes a request to import images from a Docker image repository."
  repository:com_github_openshift_api_image_v1_RepositoryImportSpecInput
}
"ImageStreamImportSpec defines what images should be imported."
type com_github_openshift_api_image_v1_ImageStreamImportSpecResult {
  "Images are a list of individual images to import."
  images:[com_github_openshift_api_image_v1_ImageImportSpecResult]
  "Import indicates whether to perform an import - if so, the specified tags are set on the spec and status of the image stream defined by the type meta."
  import:Boolean
  "RepositoryImportSpec describes a request to import images from a Docker image repository."
  repository:com_github_openshift_api_image_v1_RepositoryImportSpecResult
}
"ImageStreamImportStatus contains information about the status of an image stream import."
input com_github_openshift_api_image_v1_ImageStreamImportStatusInput {
  "Images is set with the result of importing spec.images"
  images:[com_github_openshift_api_image_v1_ImageImportStatusInput]
  "ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry."
  import:com_github_openshift_api_image_v1_ImageStreamInput
  "RepositoryImportStatus describes the result of an image repository import"
  repository:com_github_openshift_api_image_v1_RepositoryImportStatusInput
}
"ImageStreamImportStatus contains information about the status of an image stream import."
type com_github_openshift_api_image_v1_ImageStreamImportStatusResult {
  "Images is set with the result of importing spec.images"
  images:[com_github_openshift_api_image_v1_ImageImportStatusResult]
  "ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry."
  import:com_github_openshift_api_image_v1_ImageStreamResult
  "RepositoryImportStatus describes the result of an image repository import"
  repository:com_github_openshift_api_image_v1_RepositoryImportStatusResult
}
"ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry."
input com_github_openshift_api_image_v1_ImageStreamInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ImageStreamSpec represents options for ImageStreams."
  spec:com_github_openshift_api_image_v1_ImageStreamSpecInput
  "ImageStreamStatus contains information about the state of this image stream."
  status:com_github_openshift_api_image_v1_ImageStreamStatusInput
}
"ImageStreamLayers describes information about the layers referenced by images in this image stream."
type com_github_openshift_api_image_v1_ImageStreamLayersResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "blobs is a map of blob name to metadata about the blob."
  blobs:[com_github_openshift_api_image_v1_ImageLayerDataResultResultProp!]
  "images is a map between an image name and the names of the blobs and config that comprise the image."
  images:[com_github_openshift_api_image_v1_ImageBlobReferencesResultResultProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"ImageStreamList is a list of ImageStream objects."
type com_github_openshift_api_image_v1_ImageStreamListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of imageStreams"
  items:[com_github_openshift_api_image_v1_ImageStreamResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ImageStreamMapping represents a mapping from a single tag to a Docker image as well as the reference to the Docker image stream the image came from."
input com_github_openshift_api_image_v1_ImageStreamMappingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Tag is a string value this image can be located with inside the stream."
  tag:String
}
"ImageStreamMapping represents a mapping from a single tag to a Docker image as well as the reference to the Docker image stream the image came from."
type com_github_openshift_api_image_v1_ImageStreamMappingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Tag is a string value this image can be located with inside the stream."
  tag:String
}
"ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry."
type com_github_openshift_api_image_v1_ImageStreamResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ImageStreamSpec represents options for ImageStreams."
  spec:com_github_openshift_api_image_v1_ImageStreamSpecResult
  "ImageStreamStatus contains information about the state of this image stream."
  status:com_github_openshift_api_image_v1_ImageStreamStatusResult
}
"ImageStreamSpec represents options for ImageStreams."
input com_github_openshift_api_image_v1_ImageStreamSpecInput {
  "dockerImageRepository is optional, if specified this stream is backed by a Docker repository on this server Deprecated: This field is deprecated as of v3.7 and will be removed in a future release. Specify the source for the tags to be imported in each tag via the spec.tags.from reference instead."
  dockerImageRepository:String
  "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
  lookupPolicy:com_github_openshift_api_image_v1_ImageLookupPolicyInput
  "tags map arbitrary string values to specific image locators"
  tags:[com_github_openshift_api_image_v1_TagReferenceInput]
}
"ImageStreamSpec represents options for ImageStreams."
type com_github_openshift_api_image_v1_ImageStreamSpecResult {
  "dockerImageRepository is optional, if specified this stream is backed by a Docker repository on this server Deprecated: This field is deprecated as of v3.7 and will be removed in a future release. Specify the source for the tags to be imported in each tag via the spec.tags.from reference instead."
  dockerImageRepository:String
  "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
  lookupPolicy:com_github_openshift_api_image_v1_ImageLookupPolicyResult
  "tags map arbitrary string values to specific image locators"
  tags:[com_github_openshift_api_image_v1_TagReferenceResult]
}
"ImageStreamStatus contains information about the state of this image stream."
input com_github_openshift_api_image_v1_ImageStreamStatusInput {
  "DockerImageRepository represents the effective location this stream may be accessed at. May be empty until the server determines where the repository is located"
  dockerImageRepository:String
  "PublicDockerImageRepository represents the public location from where the image can be pulled outside the cluster. This field may be empty if the administrator has not exposed the integrated registry externally."
  publicDockerImageRepository:String
  "Tags are a historical record of images associated with each tag. The first entry in the TagEvent array is the currently tagged image."
  tags:[com_github_openshift_api_image_v1_NamedTagEventListInput]
}
"ImageStreamStatus contains information about the state of this image stream."
type com_github_openshift_api_image_v1_ImageStreamStatusResult {
  "DockerImageRepository represents the effective location this stream may be accessed at. May be empty until the server determines where the repository is located"
  dockerImageRepository:String
  "PublicDockerImageRepository represents the public location from where the image can be pulled outside the cluster. This field may be empty if the administrator has not exposed the integrated registry externally."
  publicDockerImageRepository:String
  "Tags are a historical record of images associated with each tag. The first entry in the TagEvent array is the currently tagged image."
  tags:[com_github_openshift_api_image_v1_NamedTagEventListResult]
}
"ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream."
input com_github_openshift_api_image_v1_ImageStreamTagInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "conditions is an array of conditions that apply to the image stream tag."
  conditions:[com_github_openshift_api_image_v1_TagEventConditionInput]
  "generation is the current generation of the tagged image - if tag is provided and this value is not equal to the tag generation, a user has requested an import that has not completed, or conditions will be filled out indicating any error."
  generation:Int
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
  lookupPolicy:com_github_openshift_api_image_v1_ImageLookupPolicyInput
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track."
  tag:com_github_openshift_api_image_v1_TagReferenceInput
}
"ImageStreamTagList is a list of ImageStreamTag objects."
type com_github_openshift_api_image_v1_ImageStreamTagListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of image stream tags"
  items:[com_github_openshift_api_image_v1_ImageStreamTagResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream."
type com_github_openshift_api_image_v1_ImageStreamTagResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "conditions is an array of conditions that apply to the image stream tag."
  conditions:[com_github_openshift_api_image_v1_TagEventConditionResult]
  "generation is the current generation of the tagged image - if tag is provided and this value is not equal to the tag generation, a user has requested an import that has not completed, or conditions will be filled out indicating any error."
  generation:Int
  "Image is an immutable representation of a Docker image and metadata at a point in time."
  image:com_github_openshift_api_image_v1_ImageResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace."
  lookupPolicy:com_github_openshift_api_image_v1_ImageLookupPolicyResult
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track."
  tag:com_github_openshift_api_image_v1_TagReferenceResult
}
"NamedTagEventList relates a tag to its image history."
input com_github_openshift_api_image_v1_NamedTagEventListInput {
  "Conditions is an array of conditions that apply to the tag event list."
  conditions:[com_github_openshift_api_image_v1_TagEventConditionInput]
  "Standard object's metadata."
  items:[com_github_openshift_api_image_v1_TagEventInput]
  "Tag is the tag for which the history is recorded"
  tag:String
}
"NamedTagEventList relates a tag to its image history."
type com_github_openshift_api_image_v1_NamedTagEventListResult {
  "Conditions is an array of conditions that apply to the tag event list."
  conditions:[com_github_openshift_api_image_v1_TagEventConditionResult]
  "Standard object's metadata."
  items:[com_github_openshift_api_image_v1_TagEventResult]
  "Tag is the tag for which the history is recorded"
  tag:String
}
"RepositoryImportSpec describes a request to import images from a Docker image repository."
input com_github_openshift_api_image_v1_RepositoryImportSpecInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyInput
  "IncludeManifest determines if the manifest for each image is returned in the response"
  includeManifest:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyInput
}
"RepositoryImportSpec describes a request to import images from a Docker image repository."
type com_github_openshift_api_image_v1_RepositoryImportSpecResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyResult
  "IncludeManifest determines if the manifest for each image is returned in the response"
  includeManifest:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyResult
}
"RepositoryImportStatus describes the result of an image repository import"
input com_github_openshift_api_image_v1_RepositoryImportStatusInput {
  "AdditionalTags are tags that exist in the repository but were not imported because a maximum limit of automatic imports was applied."
  additionalTags:[String]
  "Images is a list of images successfully retrieved by the import of the repository."
  images:[com_github_openshift_api_image_v1_ImageImportStatusInput]
  "Status is a return value for calls that don't return other objects."
  status:io_k8s_apimachinery_pkg_apis_meta_v1_StatusInput
}
"RepositoryImportStatus describes the result of an image repository import"
type com_github_openshift_api_image_v1_RepositoryImportStatusResult {
  "AdditionalTags are tags that exist in the repository but were not imported because a maximum limit of automatic imports was applied."
  additionalTags:[String]
  "Images is a list of images successfully retrieved by the import of the repository."
  images:[com_github_openshift_api_image_v1_ImageImportStatusResult]
  "Status is a return value for calls that don't return other objects."
  status:io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
}
"SignatureCondition describes an image signature condition of particular kind at particular probe time."
input com_github_openshift_api_image_v1_SignatureConditionInput {
  lastProbeTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of signature condition, Complete or Failed."
  type:String
}
"SignatureCondition describes an image signature condition of particular kind at particular probe time."
type com_github_openshift_api_image_v1_SignatureConditionResult {
  lastProbeTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of signature condition, Complete or Failed."
  type:String
}
"SignatureIssuer holds information about an issuer of signing certificate or key."
input com_github_openshift_api_image_v1_SignatureIssuerInput {
  "Common name (e.g. openshift-signing-service)."
  commonName:String
  "Organization name."
  organization:String
}
"SignatureIssuer holds information about an issuer of signing certificate or key."
type com_github_openshift_api_image_v1_SignatureIssuerResult {
  "Common name (e.g. openshift-signing-service)."
  commonName:String
  "Organization name."
  organization:String
}
"SignatureSubject holds information about a person or entity who created the signature."
input com_github_openshift_api_image_v1_SignatureSubjectInput {
  "Common name (e.g. openshift-signing-service)."
  commonName:String
  "Organization name."
  organization:String
  "If present, it is a human readable key id of public key belonging to the subject used to verify image signature. It should contain at least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440)."
  publicKeyID:String
}
"SignatureSubject holds information about a person or entity who created the signature."
type com_github_openshift_api_image_v1_SignatureSubjectResult {
  "Common name (e.g. openshift-signing-service)."
  commonName:String
  "Organization name."
  organization:String
  "If present, it is a human readable key id of public key belonging to the subject used to verify image signature. It should contain at least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440)."
  publicKeyID:String
}
"TagEventCondition contains condition information for a tag event."
input com_github_openshift_api_image_v1_TagEventConditionInput {
  "Generation is the spec tag generation that this status corresponds to"
  generation:Int
  lastTransitionTime:String
  "Message is a human readable description of the details about last transition, complementing reason."
  message:String
  "Reason is a brief machine readable explanation for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of tag event condition, currently only ImportSuccess"
  type:String
}
"TagEventCondition contains condition information for a tag event."
type com_github_openshift_api_image_v1_TagEventConditionResult {
  "Generation is the spec tag generation that this status corresponds to"
  generation:Int
  lastTransitionTime:String
  "Message is a human readable description of the details about last transition, complementing reason."
  message:String
  "Reason is a brief machine readable explanation for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of tag event condition, currently only ImportSuccess"
  type:String
}
"TagEvent is used by ImageStreamStatus to keep a historical record of images associated with a tag."
input com_github_openshift_api_image_v1_TagEventInput {
  created:String
  "DockerImageReference is the string that can be used to pull this image"
  dockerImageReference:String
  "Generation is the spec tag generation that resulted in this tag being updated"
  generation:Int
  "Image is the image"
  image:String
}
"TagEvent is used by ImageStreamStatus to keep a historical record of images associated with a tag."
type com_github_openshift_api_image_v1_TagEventResult {
  created:String
  "DockerImageReference is the string that can be used to pull this image"
  dockerImageReference:String
  "Generation is the spec tag generation that resulted in this tag being updated"
  generation:Int
  "Image is the image"
  image:String
}
"TagImportPolicy controls how images related to this tag will be imported."
input com_github_openshift_api_image_v1_TagImportPolicyInput {
  "Insecure is true if the server may bypass certificate verification or connect directly over HTTP during image import."
  insecure:Boolean
  "Scheduled indicates to the server that this tag should be periodically checked to ensure it is up to date, and imported"
  scheduled:Boolean
}
"TagImportPolicy controls how images related to this tag will be imported."
type com_github_openshift_api_image_v1_TagImportPolicyResult {
  "Insecure is true if the server may bypass certificate verification or connect directly over HTTP during image import."
  insecure:Boolean
  "Scheduled indicates to the server that this tag should be periodically checked to ensure it is up to date, and imported"
  scheduled:Boolean
}
"TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track."
input com_github_openshift_api_image_v1_TagReferenceInput {
  "Optional; if specified, annotations that are applied to images retrieved via ImageStreamTags."
  annotations:[StringInputProp!]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceInput
  "Generation is a counter that tracks mutations to the spec tag (user intent). When a tag reference is changed the generation is set to match the current stream generation (which is incremented every time spec is changed). Other processes in the system like the image importer observe that the generation of spec tag is newer than the generation recorded in the status and use that as a trigger to import the newest remote tag. To trigger a new import, clients may set this value to zero which will reset the generation to the latest stream generation. Legacy clients will send this value as nil which will be merged with the current tag generation."
  generation:Int
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyInput
  "Name of the tag"
  name:String
  "Reference states if the tag will be imported. Default value is false, which means the tag will be imported."
  reference:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyInput
}
"TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
input com_github_openshift_api_image_v1_TagReferencePolicyInput {
  "Type determines how the image pull spec should be transformed when the image stream tag is used in deployment config triggers or new builds. The default value is `Source`, indicating the original location of the image should be used (if imported). The user may also specify `Local`, indicating that the pull spec should point to the integrated Docker registry and leverage the registry's ability to proxy the pull to an upstream registry. `Local` allows the credentials used to pull this image to be managed from the image stream's namespace, so others on the platform can access a remote image but have no access to the remote secret. It also allows the image layers to be mirrored into the local registry which the images can still be pulled even if the upstream registry is unavailable."
  type:String
}
"TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
type com_github_openshift_api_image_v1_TagReferencePolicyResult {
  "Type determines how the image pull spec should be transformed when the image stream tag is used in deployment config triggers or new builds. The default value is `Source`, indicating the original location of the image should be used (if imported). The user may also specify `Local`, indicating that the pull spec should point to the integrated Docker registry and leverage the registry's ability to proxy the pull to an upstream registry. `Local` allows the credentials used to pull this image to be managed from the image stream's namespace, so others on the platform can access a remote image but have no access to the remote secret. It also allows the image layers to be mirrored into the local registry which the images can still be pulled even if the upstream registry is unavailable."
  type:String
}
"TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track."
type com_github_openshift_api_image_v1_TagReferenceResult {
  "Optional; if specified, annotations that are applied to images retrieved via ImageStreamTags."
  annotations:[StringResultProp!]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  from:io_k8s_api_core_v1_ObjectReferenceResult
  "Generation is a counter that tracks mutations to the spec tag (user intent). When a tag reference is changed the generation is set to match the current stream generation (which is incremented every time spec is changed). Other processes in the system like the image importer observe that the generation of spec tag is newer than the generation recorded in the status and use that as a trigger to import the newest remote tag. To trigger a new import, clients may set this value to zero which will reset the generation to the latest stream generation. Legacy clients will send this value as nil which will be merged with the current tag generation."
  generation:Int
  "TagImportPolicy controls how images related to this tag will be imported."
  importPolicy:com_github_openshift_api_image_v1_TagImportPolicyResult
  "Name of the tag"
  name:String
  "Reference states if the tag will be imported. Default value is false, which means the tag will be imported."
  reference:Boolean
  "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed."
  referencePolicy:com_github_openshift_api_image_v1_TagReferencePolicyResult
}
"ClusterNetworkEntry defines an individual cluster network. The CIDRs cannot overlap with other cluster network CIDRs, CIDRs reserved for external ips, CIDRs reserved for service networks, and CIDRs reserved for ingress ips."
input com_github_openshift_api_network_v1_ClusterNetworkEntryInput {
  "CIDR defines the total range of a cluster networks address space."
  CIDR:String
  "HostSubnetLength is the number of bits of the accompanying CIDR address to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods."
  hostSubnetLength:Int
}
"ClusterNetworkEntry defines an individual cluster network. The CIDRs cannot overlap with other cluster network CIDRs, CIDRs reserved for external ips, CIDRs reserved for service networks, and CIDRs reserved for ingress ips."
type com_github_openshift_api_network_v1_ClusterNetworkEntryResult {
  "CIDR defines the total range of a cluster networks address space."
  CIDR:String
  "HostSubnetLength is the number of bits of the accompanying CIDR address to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods."
  hostSubnetLength:Int
}
"ClusterNetwork describes the cluster network. There is normally only one object of this type, named \"default\", which is created by the SDN network plugin based on the master configuration when the cluster is brought up for the first time."
input com_github_openshift_api_network_v1_ClusterNetworkInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClusterNetworks is a list of ClusterNetwork objects that defines the global overlay network's L3 space by specifying a set of CIDR and netmasks that the SDN can allocate addressed from."
  clusterNetworks:[com_github_openshift_api_network_v1_ClusterNetworkEntryInput]
  "HostSubnetLength is the number of bits of network to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods"
  hostsubnetlength:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Network is a CIDR string specifying the global overlay network's L3 space"
  network:String
  "PluginName is the name of the network plugin being used"
  pluginName:String
  "ServiceNetwork is the CIDR range that Service IP addresses are allocated from"
  serviceNetwork:String
  "VXLANPort sets the VXLAN destination port used by the cluster. It is set by the master configuration file on startup and cannot be edited manually. Valid values for VXLANPort are integers 1-65535 inclusive and if unset defaults to 4789. Changing VXLANPort allows users to resolve issues between openshift SDN and other software trying to use the same VXLAN destination port."
  vxlanPort:Int
}
"ClusterNetworkList is a collection of ClusterNetworks"
type com_github_openshift_api_network_v1_ClusterNetworkListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of cluster networks"
  items:[com_github_openshift_api_network_v1_ClusterNetworkResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterNetwork describes the cluster network. There is normally only one object of this type, named \"default\", which is created by the SDN network plugin based on the master configuration when the cluster is brought up for the first time."
type com_github_openshift_api_network_v1_ClusterNetworkResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClusterNetworks is a list of ClusterNetwork objects that defines the global overlay network's L3 space by specifying a set of CIDR and netmasks that the SDN can allocate addressed from."
  clusterNetworks:[com_github_openshift_api_network_v1_ClusterNetworkEntryResult]
  "HostSubnetLength is the number of bits of network to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods"
  hostsubnetlength:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Network is a CIDR string specifying the global overlay network's L3 space"
  network:String
  "PluginName is the name of the network plugin being used"
  pluginName:String
  "ServiceNetwork is the CIDR range that Service IP addresses are allocated from"
  serviceNetwork:String
  "VXLANPort sets the VXLAN destination port used by the cluster. It is set by the master configuration file on startup and cannot be edited manually. Valid values for VXLANPort are integers 1-65535 inclusive and if unset defaults to 4789. Changing VXLANPort allows users to resolve issues between openshift SDN and other software trying to use the same VXLAN destination port."
  vxlanPort:Int
}
"EgressNetworkPolicy describes the current egress network policy for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin, traffic from a pod to an IP address outside the cluster will be checked against each EgressNetworkPolicyRule in the pod's namespace's EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy is present) then the traffic will be allowed by default."
input com_github_openshift_api_network_v1_EgressNetworkPolicyInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "EgressNetworkPolicySpec provides a list of policies on outgoing network traffic"
  spec:com_github_openshift_api_network_v1_EgressNetworkPolicySpecInput
}
"EgressNetworkPolicyList is a collection of EgressNetworkPolicy"
type com_github_openshift_api_network_v1_EgressNetworkPolicyListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is the list of policies"
  items:[com_github_openshift_api_network_v1_EgressNetworkPolicyResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"EgressNetworkPolicyPeer specifies a target to apply egress network policy to"
input com_github_openshift_api_network_v1_EgressNetworkPolicyPeerInput {
  "cidrSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset"
  cidrSelector:String
  "dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset"
  dnsName:String
}
"EgressNetworkPolicyPeer specifies a target to apply egress network policy to"
type com_github_openshift_api_network_v1_EgressNetworkPolicyPeerResult {
  "cidrSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset"
  cidrSelector:String
  "dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset"
  dnsName:String
}
"EgressNetworkPolicy describes the current egress network policy for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin, traffic from a pod to an IP address outside the cluster will be checked against each EgressNetworkPolicyRule in the pod's namespace's EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy is present) then the traffic will be allowed by default."
type com_github_openshift_api_network_v1_EgressNetworkPolicyResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "EgressNetworkPolicySpec provides a list of policies on outgoing network traffic"
  spec:com_github_openshift_api_network_v1_EgressNetworkPolicySpecResult
}
"EgressNetworkPolicyRule contains a single egress network policy rule"
input com_github_openshift_api_network_v1_EgressNetworkPolicyRuleInput {
  "EgressNetworkPolicyPeer specifies a target to apply egress network policy to"
  to:com_github_openshift_api_network_v1_EgressNetworkPolicyPeerInput
  "type marks this as an \"Allow\" or \"Deny\" rule"
  type:String
}
"EgressNetworkPolicyRule contains a single egress network policy rule"
type com_github_openshift_api_network_v1_EgressNetworkPolicyRuleResult {
  "EgressNetworkPolicyPeer specifies a target to apply egress network policy to"
  to:com_github_openshift_api_network_v1_EgressNetworkPolicyPeerResult
  "type marks this as an \"Allow\" or \"Deny\" rule"
  type:String
}
"EgressNetworkPolicySpec provides a list of policies on outgoing network traffic"
input com_github_openshift_api_network_v1_EgressNetworkPolicySpecInput {
  "egress contains the list of egress policy rules"
  egress:[com_github_openshift_api_network_v1_EgressNetworkPolicyRuleInput]
}
"EgressNetworkPolicySpec provides a list of policies on outgoing network traffic"
type com_github_openshift_api_network_v1_EgressNetworkPolicySpecResult {
  "egress contains the list of egress policy rules"
  egress:[com_github_openshift_api_network_v1_EgressNetworkPolicyRuleResult]
}
"HostSubnet describes the container subnet network on a node. The HostSubnet object must have the same name as the Node object it corresponds to."
input com_github_openshift_api_network_v1_HostSubnetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "EgressCIDRs is the list of CIDR ranges available for automatically assigning egress IPs to this node from. If this field is set then EgressIPs should be treated as read-only."
  egressCIDRs:[String]
  "EgressIPs is the list of automatic egress IP addresses currently hosted by this node. If EgressCIDRs is empty, this can be set by hand; if EgressCIDRs is set then the master will overwrite the value here with its own allocation of egress IPs."
  egressIPs:[String]
  "Host is the name of the node. (This is the same as the object's name, but both fields must be set.)"
  host:String
  "HostIP is the IP address to be used as a VTEP by other nodes in the overlay network"
  hostIP:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Subnet is the CIDR range of the overlay network assigned to the node for its pods"
  subnet:String
}
"HostSubnetList is a collection of HostSubnets"
type com_github_openshift_api_network_v1_HostSubnetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of host subnets"
  items:[com_github_openshift_api_network_v1_HostSubnetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"HostSubnet describes the container subnet network on a node. The HostSubnet object must have the same name as the Node object it corresponds to."
type com_github_openshift_api_network_v1_HostSubnetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "EgressCIDRs is the list of CIDR ranges available for automatically assigning egress IPs to this node from. If this field is set then EgressIPs should be treated as read-only."
  egressCIDRs:[String]
  "EgressIPs is the list of automatic egress IP addresses currently hosted by this node. If EgressCIDRs is empty, this can be set by hand; if EgressCIDRs is set then the master will overwrite the value here with its own allocation of egress IPs."
  egressIPs:[String]
  "Host is the name of the node. (This is the same as the object's name, but both fields must be set.)"
  host:String
  "HostIP is the IP address to be used as a VTEP by other nodes in the overlay network"
  hostIP:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Subnet is the CIDR range of the overlay network assigned to the node for its pods"
  subnet:String
}
"NetNamespace describes a single isolated network. When using the redhat/openshift-ovs-multitenant plugin, every Namespace will have a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet, NetNamespaces are not used.)"
input com_github_openshift_api_network_v1_NetNamespaceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "EgressIPs is a list of reserved IPs that will be used as the source for external traffic coming from pods in this namespace. (If empty, external traffic will be masqueraded to Node IPs.)"
  egressIPs:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "NetID is the network identifier of the network namespace assigned to each overlay network packet. This can be manipulated with the \"oc adm pod-network\" commands."
  netid:Int
  "NetName is the name of the network namespace. (This is the same as the object's name, but both fields must be set.)"
  netname:String
}
"NetNamespaceList is a collection of NetNamespaces"
type com_github_openshift_api_network_v1_NetNamespaceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of net namespaces"
  items:[com_github_openshift_api_network_v1_NetNamespaceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"NetNamespace describes a single isolated network. When using the redhat/openshift-ovs-multitenant plugin, every Namespace will have a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet, NetNamespaces are not used.)"
type com_github_openshift_api_network_v1_NetNamespaceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "EgressIPs is a list of reserved IPs that will be used as the source for external traffic coming from pods in this namespace. (If empty, external traffic will be masqueraded to Node IPs.)"
  egressIPs:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "NetID is the network identifier of the network namespace assigned to each overlay network packet. This can be manipulated with the \"oc adm pod-network\" commands."
  netid:Int
  "NetName is the name of the network namespace. (This is the same as the object's name, but both fields must be set.)"
  netname:String
}
"ClusterRoleScopeRestriction describes restrictions on cluster role scopes"
input com_github_openshift_api_oauth_v1_ClusterRoleScopeRestrictionInput {
  "AllowEscalation indicates whether you can request roles and their escalating resources"
  allowEscalation:Boolean
  "Namespaces is the list of namespaces that can be referenced.  * means any of them (including *)"
  namespaces:[String]
  "RoleNames is the list of cluster roles that can referenced.  * means anything"
  roleNames:[String]
}
"ClusterRoleScopeRestriction describes restrictions on cluster role scopes"
type com_github_openshift_api_oauth_v1_ClusterRoleScopeRestrictionResult {
  "AllowEscalation indicates whether you can request roles and their escalating resources"
  allowEscalation:Boolean
  "Namespaces is the list of namespaces that can be referenced.  * means any of them (including *)"
  namespaces:[String]
  "RoleNames is the list of cluster roles that can referenced.  * means anything"
  roleNames:[String]
}
"OAuthAccessToken describes an OAuth access token"
input com_github_openshift_api_oauth_v1_OAuthAccessTokenInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "AuthorizeToken contains the token that authorized this token"
  authorizeToken:String
  "ClientName references the client that created this token."
  clientName:String
  "ExpiresIn is the seconds from CreationTime before this token expires."
  expiresIn:Int
  "InactivityTimeoutSeconds is the value in seconds, from the CreationTimestamp, after which this token can no longer be used. The value is automatically incremented when the token is used."
  inactivityTimeoutSeconds:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RedirectURI is the redirection associated with the token."
  redirectURI:String
  "RefreshToken is the value by which this token can be renewed. Can be blank."
  refreshToken:String
  "Scopes is an array of the requested scopes."
  scopes:[String]
  "UserName is the user name associated with this token"
  userName:String
  "UserUID is the unique UID associated with this token"
  userUID:String
}
"OAuthAccessTokenList is a collection of OAuth access tokens"
type com_github_openshift_api_oauth_v1_OAuthAccessTokenListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of OAuth access tokens"
  items:[com_github_openshift_api_oauth_v1_OAuthAccessTokenResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"OAuthAccessToken describes an OAuth access token"
type com_github_openshift_api_oauth_v1_OAuthAccessTokenResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "AuthorizeToken contains the token that authorized this token"
  authorizeToken:String
  "ClientName references the client that created this token."
  clientName:String
  "ExpiresIn is the seconds from CreationTime before this token expires."
  expiresIn:Int
  "InactivityTimeoutSeconds is the value in seconds, from the CreationTimestamp, after which this token can no longer be used. The value is automatically incremented when the token is used."
  inactivityTimeoutSeconds:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RedirectURI is the redirection associated with the token."
  redirectURI:String
  "RefreshToken is the value by which this token can be renewed. Can be blank."
  refreshToken:String
  "Scopes is an array of the requested scopes."
  scopes:[String]
  "UserName is the user name associated with this token"
  userName:String
  "UserUID is the unique UID associated with this token"
  userUID:String
}
"OAuthAuthorizeToken describes an OAuth authorization token"
input com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClientName references the client that created this token."
  clientName:String
  "CodeChallenge is the optional code_challenge associated with this authorization code, as described in rfc7636"
  codeChallenge:String
  "CodeChallengeMethod is the optional code_challenge_method associated with this authorization code, as described in rfc7636"
  codeChallengeMethod:String
  "ExpiresIn is the seconds from CreationTime before this token expires."
  expiresIn:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RedirectURI is the redirection associated with the token."
  redirectURI:String
  "Scopes is an array of the requested scopes."
  scopes:[String]
  "State data from request"
  state:String
  "UserName is the user name associated with this token"
  userName:String
  "UserUID is the unique UID associated with this token. UserUID and UserName must both match for this token to be valid."
  userUID:String
}
"OAuthAuthorizeTokenList is a collection of OAuth authorization tokens"
type com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of OAuth authorization tokens"
  items:[com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"OAuthAuthorizeToken describes an OAuth authorization token"
type com_github_openshift_api_oauth_v1_OAuthAuthorizeTokenResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClientName references the client that created this token."
  clientName:String
  "CodeChallenge is the optional code_challenge associated with this authorization code, as described in rfc7636"
  codeChallenge:String
  "CodeChallengeMethod is the optional code_challenge_method associated with this authorization code, as described in rfc7636"
  codeChallengeMethod:String
  "ExpiresIn is the seconds from CreationTime before this token expires."
  expiresIn:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RedirectURI is the redirection associated with the token."
  redirectURI:String
  "Scopes is an array of the requested scopes."
  scopes:[String]
  "State data from request"
  state:String
  "UserName is the user name associated with this token"
  userName:String
  "UserUID is the unique UID associated with this token. UserUID and UserName must both match for this token to be valid."
  userUID:String
}
"OAuthClientAuthorization describes an authorization created by an OAuth client"
input com_github_openshift_api_oauth_v1_OAuthClientAuthorizationInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClientName references the client that created this authorization"
  clientName:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Scopes is an array of the granted scopes."
  scopes:[String]
  "UserName is the user name that authorized this client"
  userName:String
  "UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid."
  userUID:String
}
"OAuthClientAuthorizationList is a collection of OAuth client authorizations"
type com_github_openshift_api_oauth_v1_OAuthClientAuthorizationListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of OAuth client authorizations"
  items:[com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"OAuthClientAuthorization describes an authorization created by an OAuth client"
type com_github_openshift_api_oauth_v1_OAuthClientAuthorizationResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ClientName references the client that created this authorization"
  clientName:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Scopes is an array of the granted scopes."
  scopes:[String]
  "UserName is the user name that authorized this client"
  userName:String
  "UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid."
  userUID:String
}
"OAuthClient describes an OAuth client"
input com_github_openshift_api_oauth_v1_OAuthClientInput {
  "AccessTokenInactivityTimeoutSeconds overrides the default token inactivity timeout for tokens granted to this client. The value represents the maximum amount of time that can occur between consecutive uses of the token. Tokens become invalid if they are not used within this temporal window. The user will need to acquire a new token to regain access once a token times out. This value needs to be set only if the default set in configuration is not appropriate for this client. Valid values are: - 0: Tokens for this client never time out - X: Tokens time out if there is no activity for X seconds The current minimum allowed value for X is 300 (5 minutes)"
  accessTokenInactivityTimeoutSeconds:Int
  "AccessTokenMaxAgeSeconds overrides the default access token max age for tokens granted to this client. 0 means no expiration."
  accessTokenMaxAgeSeconds:Int
  "AdditionalSecrets holds other secrets that may be used to identify the client.  This is useful for rotation and for service account token validation"
  additionalSecrets:[String]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    GrantMethod determines how to handle grants for this client. If no method is provided, the cluster default grant handling method will be used. Valid grant handling methods are:
     - auto:   always approves grant requests, useful for trusted clients
     - prompt: prompts the end user for approval of grant requests, useful for third-party clients
     - deny:   always denies grant requests, useful for black-listed clients
    """
  grantMethod:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RedirectURIs is the valid redirection URIs associated with a client"
  redirectURIs:[String]
  "RespondWithChallenges indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects"
  respondWithChallenges:Boolean
  "ScopeRestrictions describes which scopes this client can request.  Each requested scope is checked against each restriction.  If any restriction matches, then the scope is allowed. If no restriction matches, then the scope is denied."
  scopeRestrictions:[com_github_openshift_api_oauth_v1_ScopeRestrictionInput]
  "Secret is the unique secret associated with a client"
  secret:String
}
"OAuthClientList is a collection of OAuth clients"
type com_github_openshift_api_oauth_v1_OAuthClientListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of OAuth clients"
  items:[com_github_openshift_api_oauth_v1_OAuthClientResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"OAuthClient describes an OAuth client"
type com_github_openshift_api_oauth_v1_OAuthClientResult {
  "AccessTokenInactivityTimeoutSeconds overrides the default token inactivity timeout for tokens granted to this client. The value represents the maximum amount of time that can occur between consecutive uses of the token. Tokens become invalid if they are not used within this temporal window. The user will need to acquire a new token to regain access once a token times out. This value needs to be set only if the default set in configuration is not appropriate for this client. Valid values are: - 0: Tokens for this client never time out - X: Tokens time out if there is no activity for X seconds The current minimum allowed value for X is 300 (5 minutes)"
  accessTokenInactivityTimeoutSeconds:Int
  "AccessTokenMaxAgeSeconds overrides the default access token max age for tokens granted to this client. 0 means no expiration."
  accessTokenMaxAgeSeconds:Int
  "AdditionalSecrets holds other secrets that may be used to identify the client.  This is useful for rotation and for service account token validation"
  additionalSecrets:[String]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    GrantMethod determines how to handle grants for this client. If no method is provided, the cluster default grant handling method will be used. Valid grant handling methods are:
     - auto:   always approves grant requests, useful for trusted clients
     - prompt: prompts the end user for approval of grant requests, useful for third-party clients
     - deny:   always denies grant requests, useful for black-listed clients
    """
  grantMethod:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RedirectURIs is the valid redirection URIs associated with a client"
  redirectURIs:[String]
  "RespondWithChallenges indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects"
  respondWithChallenges:Boolean
  "ScopeRestrictions describes which scopes this client can request.  Each requested scope is checked against each restriction.  If any restriction matches, then the scope is allowed. If no restriction matches, then the scope is denied."
  scopeRestrictions:[com_github_openshift_api_oauth_v1_ScopeRestrictionResult]
  "Secret is the unique secret associated with a client"
  secret:String
}
"ScopeRestriction describe one restriction on scopes.  Exactly one option must be non-nil."
input com_github_openshift_api_oauth_v1_ScopeRestrictionInput {
  "ClusterRoleScopeRestriction describes restrictions on cluster role scopes"
  clusterRole:com_github_openshift_api_oauth_v1_ClusterRoleScopeRestrictionInput
  "ExactValues means the scope has to match a particular set of strings exactly"
  literals:[String]
}
"ScopeRestriction describe one restriction on scopes.  Exactly one option must be non-nil."
type com_github_openshift_api_oauth_v1_ScopeRestrictionResult {
  "ClusterRoleScopeRestriction describes restrictions on cluster role scopes"
  clusterRole:com_github_openshift_api_oauth_v1_ClusterRoleScopeRestrictionResult
  "ExactValues means the scope has to match a particular set of strings exactly"
  literals:[String]
}
"""
Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members, a quota on the resources that the project may consume, and the security controls on the resources in the project. Within a project, members may have different roles - project administrators can set membership, editors can create and manage the resources, and viewers can see but not access running containers. In a normal cluster project administrators are not able to alter their quotas - that is restricted to cluster administrators.

Listing or watching projects will return only projects the user has the reader role on.

An OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed as editable to end users while namespaces are not. Direct creation of a project is typically restricted to administrators, while end users should use the requestproject resource.
"""
input com_github_openshift_api_project_v1_ProjectInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ProjectSpec describes the attributes on a Project"
  spec:com_github_openshift_api_project_v1_ProjectSpecInput
  "ProjectStatus is information about the current status of a Project"
  status:com_github_openshift_api_project_v1_ProjectStatusInput
}
"ProjectList is a list of Project objects."
type com_github_openshift_api_project_v1_ProjectListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of projects"
  items:[com_github_openshift_api_project_v1_ProjectResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ProjecRequest is the set of options necessary to fully qualify a project request"
input com_github_openshift_api_project_v1_ProjectRequestInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Description is the description to apply to a project"
  description:String
  "DisplayName is the display name to apply to a project"
  displayName:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
"ProjecRequest is the set of options necessary to fully qualify a project request"
type com_github_openshift_api_project_v1_ProjectRequestResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Description is the description to apply to a project"
  description:String
  "DisplayName is the display name to apply to a project"
  displayName:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"""
Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members, a quota on the resources that the project may consume, and the security controls on the resources in the project. Within a project, members may have different roles - project administrators can set membership, editors can create and manage the resources, and viewers can see but not access running containers. In a normal cluster project administrators are not able to alter their quotas - that is restricted to cluster administrators.

Listing or watching projects will return only projects the user has the reader role on.

An OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed as editable to end users while namespaces are not. Direct creation of a project is typically restricted to administrators, while end users should use the requestproject resource.
"""
type com_github_openshift_api_project_v1_ProjectResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ProjectSpec describes the attributes on a Project"
  spec:com_github_openshift_api_project_v1_ProjectSpecResult
  "ProjectStatus is information about the current status of a Project"
  status:com_github_openshift_api_project_v1_ProjectStatusResult
}
"ProjectSpec describes the attributes on a Project"
input com_github_openshift_api_project_v1_ProjectSpecInput {
  "Finalizers is an opaque list of values that must be empty to permanently remove object from storage"
  finalizers:[String]
}
"ProjectSpec describes the attributes on a Project"
type com_github_openshift_api_project_v1_ProjectSpecResult {
  "Finalizers is an opaque list of values that must be empty to permanently remove object from storage"
  finalizers:[String]
}
"ProjectStatus is information about the current status of a Project"
input com_github_openshift_api_project_v1_ProjectStatusInput {
  "Phase is the current lifecycle phase of the project"
  phase:String
}
"ProjectStatus is information about the current status of a Project"
type com_github_openshift_api_project_v1_ProjectStatusResult {
  "Phase is the current lifecycle phase of the project"
  phase:String
}
"AppliedClusterResourceQuotaList is a collection of AppliedClusterResourceQuotas"
type com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of AppliedClusterResourceQuota"
  items:[com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"AppliedClusterResourceQuota mirrors ClusterResourceQuota at a project scope, for projection into a project.  It allows a project-admin to know which ClusterResourceQuotas are applied to his project and their associated usage."
type com_github_openshift_api_quota_v1_AppliedClusterResourceQuotaResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ClusterResourceQuotaSpec defines the desired quota restrictions"
  spec:com_github_openshift_api_quota_v1_ClusterResourceQuotaSpecResult
  "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage"
  status:com_github_openshift_api_quota_v1_ClusterResourceQuotaStatusResult
}
"ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object is easily convertible to synthetic ResourceQuota object to allow quota evaluation re-use."
input com_github_openshift_api_quota_v1_ClusterResourceQuotaInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ClusterResourceQuotaSpec defines the desired quota restrictions"
  spec:com_github_openshift_api_quota_v1_ClusterResourceQuotaSpecInput
  "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage"
  status:com_github_openshift_api_quota_v1_ClusterResourceQuotaStatusInput
}
"ClusterResourceQuotaList is a collection of ClusterResourceQuotas"
type com_github_openshift_api_quota_v1_ClusterResourceQuotaListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterResourceQuotas"
  items:[com_github_openshift_api_quota_v1_ClusterResourceQuotaResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object is easily convertible to synthetic ResourceQuota object to allow quota evaluation re-use."
type com_github_openshift_api_quota_v1_ClusterResourceQuotaResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ClusterResourceQuotaSpec defines the desired quota restrictions"
  spec:com_github_openshift_api_quota_v1_ClusterResourceQuotaSpecResult
  "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage"
  status:com_github_openshift_api_quota_v1_ClusterResourceQuotaStatusResult
}
"ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions."
input com_github_openshift_api_quota_v1_ClusterResourceQuotaSelectorInput {
  "AnnotationSelector is used to select projects by annotation."
  annotations:[StringInputProp!]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  labels:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
"ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions."
type com_github_openshift_api_quota_v1_ClusterResourceQuotaSelectorResult {
  "AnnotationSelector is used to select projects by annotation."
  annotations:[StringResultProp!]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  labels:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
"ClusterResourceQuotaSpec defines the desired quota restrictions"
input com_github_openshift_api_quota_v1_ClusterResourceQuotaSpecInput {
  "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
  quota:io_k8s_api_core_v1_ResourceQuotaSpecInput
  "ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions."
  selector:com_github_openshift_api_quota_v1_ClusterResourceQuotaSelectorInput
}
"ClusterResourceQuotaSpec defines the desired quota restrictions"
type com_github_openshift_api_quota_v1_ClusterResourceQuotaSpecResult {
  "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
  quota:io_k8s_api_core_v1_ResourceQuotaSpecResult
  "ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions."
  selector:com_github_openshift_api_quota_v1_ClusterResourceQuotaSelectorResult
}
"ClusterResourceQuotaStatus defines the actual enforced quota and its current usage"
input com_github_openshift_api_quota_v1_ClusterResourceQuotaStatusInput {
  "Namespaces slices the usage by project.  This division allows for quick resolution of deletion reconciliation inside of a single project without requiring a recalculation across all projects.  This can be used to pull the deltas for a given project."
  namespaces:[com_github_openshift_api_quota_v1_ResourceQuotaStatusByNamespaceInput]
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  total:io_k8s_api_core_v1_ResourceQuotaStatusInput
}
"ClusterResourceQuotaStatus defines the actual enforced quota and its current usage"
type com_github_openshift_api_quota_v1_ClusterResourceQuotaStatusResult {
  "Namespaces slices the usage by project.  This division allows for quick resolution of deletion reconciliation inside of a single project without requiring a recalculation across all projects.  This can be used to pull the deltas for a given project."
  namespaces:[com_github_openshift_api_quota_v1_ResourceQuotaStatusByNamespaceResult]
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  total:io_k8s_api_core_v1_ResourceQuotaStatusResult
}
"ResourceQuotaStatusByNamespace gives status for a particular project"
input com_github_openshift_api_quota_v1_ResourceQuotaStatusByNamespaceInput {
  "Namespace the project this status applies to"
  namespace:String
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  status:io_k8s_api_core_v1_ResourceQuotaStatusInput
}
"ResourceQuotaStatusByNamespace gives status for a particular project"
type com_github_openshift_api_quota_v1_ResourceQuotaStatusByNamespaceResult {
  "Namespace the project this status applies to"
  namespace:String
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  status:io_k8s_api_core_v1_ResourceQuotaStatusResult
}
"RouteIngressCondition contains details for the current condition of this route on a particular router."
input com_github_openshift_api_route_v1_RouteIngressConditionInput {
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition, and is usually a machine and human readable constant"
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition. Currently only Ready."
  type:String
}
"RouteIngressCondition contains details for the current condition of this route on a particular router."
type com_github_openshift_api_route_v1_RouteIngressConditionResult {
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition, and is usually a machine and human readable constant"
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition. Currently only Ready."
  type:String
}
"RouteIngress holds information about the places where a route is exposed."
input com_github_openshift_api_route_v1_RouteIngressInput {
  "Conditions is the state of the route, may be empty."
  conditions:[com_github_openshift_api_route_v1_RouteIngressConditionInput]
  "Host is the host string under which the route is exposed; this value is required"
  host:String
  "CanonicalHostname is the external host name for the router that can be used as a CNAME for the host requested for this route. This value is optional and may not be set in all cases."
  routerCanonicalHostname:String
  "Name is a name chosen by the router to identify itself; this value is required"
  routerName:String
  "Wildcard policy is the wildcard policy that was allowed where this route is exposed."
  wildcardPolicy:String
}
"RouteIngress holds information about the places where a route is exposed."
type com_github_openshift_api_route_v1_RouteIngressResult {
  "Conditions is the state of the route, may be empty."
  conditions:[com_github_openshift_api_route_v1_RouteIngressConditionResult]
  "Host is the host string under which the route is exposed; this value is required"
  host:String
  "CanonicalHostname is the external host name for the router that can be used as a CNAME for the host requested for this route. This value is optional and may not be set in all cases."
  routerCanonicalHostname:String
  "Name is a name chosen by the router to identify itself; this value is required"
  routerName:String
  "Wildcard policy is the wildcard policy that was allowed where this route is exposed."
  wildcardPolicy:String
}
"""
A route allows developers to expose services through an HTTP(S) aware load balancing and proxy layer via a public DNS entry. The route may further specify TLS options and a certificate, or specify a public CNAME that the router should also accept for HTTP and HTTPS traffic. An administrator typically configures their router to be visible outside the cluster firewall, and may also add additional security, caching, or traffic controls on the service content. Routers usually talk directly to the service endpoints.

Once a route is created, the `host` field may not be changed. Generally, routers use the oldest route with a given host when resolving conflicts.

Routers are subject to additional customization and may support additional controls via the annotations field.

Because administrators may configure multiple routers, the route status field is used to return information to clients about the names and states of the route under each router. If a client chooses a duplicate name, for instance, the route status conditions are used to indicate the route cannot be chosen.
"""
input com_github_openshift_api_route_v1_RouteInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  """
    RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.
    
    The `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.
    """
  spec:com_github_openshift_api_route_v1_RouteSpecInput
  "RouteStatus provides relevant info about the status of a route, including which routers acknowledge it."
  status:com_github_openshift_api_route_v1_RouteStatusInput
}
"RouteList is a collection of Routes."
type com_github_openshift_api_route_v1_RouteListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of routes"
  items:[com_github_openshift_api_route_v1_RouteResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoutePort defines a port mapping from a router to an endpoint in the service endpoints."
input com_github_openshift_api_route_v1_RoutePortInput {
  targetPort:String
}
"RoutePort defines a port mapping from a router to an endpoint in the service endpoints."
type com_github_openshift_api_route_v1_RoutePortResult {
  targetPort:String
}
"""
A route allows developers to expose services through an HTTP(S) aware load balancing and proxy layer via a public DNS entry. The route may further specify TLS options and a certificate, or specify a public CNAME that the router should also accept for HTTP and HTTPS traffic. An administrator typically configures their router to be visible outside the cluster firewall, and may also add additional security, caching, or traffic controls on the service content. Routers usually talk directly to the service endpoints.

Once a route is created, the `host` field may not be changed. Generally, routers use the oldest route with a given host when resolving conflicts.

Routers are subject to additional customization and may support additional controls via the annotations field.

Because administrators may configure multiple routers, the route status field is used to return information to clients about the names and states of the route under each router. If a client chooses a duplicate name, for instance, the route status conditions are used to indicate the route cannot be chosen.
"""
type com_github_openshift_api_route_v1_RouteResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  """
    RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.
    
    The `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.
    """
  spec:com_github_openshift_api_route_v1_RouteSpecResult
  "RouteStatus provides relevant info about the status of a route, including which routers acknowledge it."
  status:com_github_openshift_api_route_v1_RouteStatusResult
}
"""
RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.

The `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.
"""
input com_github_openshift_api_route_v1_RouteSpecInput {
  "alternateBackends allows up to 3 additional backends to be assigned to the route. Only the Service kind is allowed, and it will be defaulted to Service. Use the weight field in RouteTargetReference object to specify relative preference."
  alternateBackends:[com_github_openshift_api_route_v1_RouteTargetReferenceInput]
  "host is an alias/DNS that points to the service. Optional. If not specified a route name will typically be automatically chosen. Must follow DNS952 subdomain conventions."
  host:String
  "Path that the router watches for, to route traffic for to the service. Optional"
  path:String
  "RoutePort defines a port mapping from a router to an endpoint in the service endpoints."
  port:com_github_openshift_api_route_v1_RoutePortInput
  "TLSConfig defines config used to secure a route and provide termination"
  tls:com_github_openshift_api_route_v1_TLSConfigInput
  "RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others."
  to:com_github_openshift_api_route_v1_RouteTargetReferenceInput
  "Wildcard policy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
  wildcardPolicy:String
}
"""
RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.

The `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.
"""
type com_github_openshift_api_route_v1_RouteSpecResult {
  "alternateBackends allows up to 3 additional backends to be assigned to the route. Only the Service kind is allowed, and it will be defaulted to Service. Use the weight field in RouteTargetReference object to specify relative preference."
  alternateBackends:[com_github_openshift_api_route_v1_RouteTargetReferenceResult]
  "host is an alias/DNS that points to the service. Optional. If not specified a route name will typically be automatically chosen. Must follow DNS952 subdomain conventions."
  host:String
  "Path that the router watches for, to route traffic for to the service. Optional"
  path:String
  "RoutePort defines a port mapping from a router to an endpoint in the service endpoints."
  port:com_github_openshift_api_route_v1_RoutePortResult
  "TLSConfig defines config used to secure a route and provide termination"
  tls:com_github_openshift_api_route_v1_TLSConfigResult
  "RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others."
  to:com_github_openshift_api_route_v1_RouteTargetReferenceResult
  "Wildcard policy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
  wildcardPolicy:String
}
"RouteStatus provides relevant info about the status of a route, including which routers acknowledge it."
input com_github_openshift_api_route_v1_RouteStatusInput {
  "ingress describes the places where the route may be exposed. The list of ingress points may contain duplicate Host or RouterName values. Routes are considered live once they are `Ready`"
  ingress:[com_github_openshift_api_route_v1_RouteIngressInput]
}
"RouteStatus provides relevant info about the status of a route, including which routers acknowledge it."
type com_github_openshift_api_route_v1_RouteStatusResult {
  "ingress describes the places where the route may be exposed. The list of ingress points may contain duplicate Host or RouterName values. Routes are considered live once they are `Ready`"
  ingress:[com_github_openshift_api_route_v1_RouteIngressResult]
}
"RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others."
input com_github_openshift_api_route_v1_RouteTargetReferenceInput {
  "The kind of target that the route is referring to. Currently, only 'Service' is allowed"
  kind:String
  "name of the service/target that is being referred to. e.g. name of the service"
  name:String
  "weight as an integer between 0 and 256, default 1, that specifies the target's relative weight against other target reference objects. 0 suppresses requests to this backend."
  weight:Int
}
"RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others."
type com_github_openshift_api_route_v1_RouteTargetReferenceResult {
  "The kind of target that the route is referring to. Currently, only 'Service' is allowed"
  kind:String
  "name of the service/target that is being referred to. e.g. name of the service"
  name:String
  "weight as an integer between 0 and 256, default 1, that specifies the target's relative weight against other target reference objects. 0 suppresses requests to this backend."
  weight:Int
}
"TLSConfig defines config used to secure a route and provide termination"
input com_github_openshift_api_route_v1_TLSConfigInput {
  "caCertificate provides the cert authority certificate contents"
  caCertificate:String
  "certificate provides certificate contents"
  certificate:String
  "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify."
  destinationCACertificate:String
  """
    insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.
    
    * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
    """
  insecureEdgeTerminationPolicy:String
  "key provides key file contents"
  key:String
  "termination indicates termination type."
  termination:String
}
"TLSConfig defines config used to secure a route and provide termination"
type com_github_openshift_api_route_v1_TLSConfigResult {
  "caCertificate provides the cert authority certificate contents"
  caCertificate:String
  "certificate provides certificate contents"
  certificate:String
  "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify."
  destinationCACertificate:String
  """
    insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.
    
    * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
    """
  insecureEdgeTerminationPolicy:String
  "key provides key file contents"
  key:String
  "termination indicates termination type."
  termination:String
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used."
input com_github_openshift_api_security_v1_AllowedFlexVolumeInput {
  "Driver is the name of the Flexvolume driver."
  driver:String
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used."
type com_github_openshift_api_security_v1_AllowedFlexVolumeResult {
  "Driver is the name of the Flexvolume driver."
  driver:String
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
input com_github_openshift_api_security_v1_FSGroupStrategyOptionsInput {
  "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end."
  ranges:[com_github_openshift_api_security_v1_IDRangeInput]
  "Type is the strategy that will dictate what FSGroup is used in the SecurityContext."
  type:String
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
type com_github_openshift_api_security_v1_FSGroupStrategyOptionsResult {
  "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end."
  ranges:[com_github_openshift_api_security_v1_IDRangeResult]
  "Type is the strategy that will dictate what FSGroup is used in the SecurityContext."
  type:String
}
"IDRange provides a min/max of an allowed range of IDs."
input com_github_openshift_api_security_v1_IDRangeInput {
  "Max is the end of the range, inclusive."
  max:Int
  "Min is the start of the range, inclusive."
  min:Int
}
"IDRange provides a min/max of an allowed range of IDs."
type com_github_openshift_api_security_v1_IDRangeResult {
  "Max is the end of the range, inclusive."
  max:Int
  "Min is the start of the range, inclusive."
  min:Int
}
"PodSecurityPolicyReview checks which service accounts (not users, since that would be cluster-wide) can create the `PodTemplateSpec` in question."
input com_github_openshift_api_security_v1_PodSecurityPolicyReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview"
  spec:com_github_openshift_api_security_v1_PodSecurityPolicyReviewSpecInput
  "PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicyReviewStatusInput
}
"PodSecurityPolicyReview checks which service accounts (not users, since that would be cluster-wide) can create the `PodTemplateSpec` in question."
type com_github_openshift_api_security_v1_PodSecurityPolicyReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview"
  spec:com_github_openshift_api_security_v1_PodSecurityPolicyReviewSpecResult
  "PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicyReviewStatusResult
}
"PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview"
input com_github_openshift_api_security_v1_PodSecurityPolicyReviewSpecInput {
  "serviceAccountNames is an optional set of ServiceAccounts to run the check with. If serviceAccountNames is empty, the template.spec.serviceAccountName is used, unless it's empty, in which case \"default\" is used instead. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored."
  serviceAccountNames:[String]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview"
type com_github_openshift_api_security_v1_PodSecurityPolicyReviewSpecResult {
  "serviceAccountNames is an optional set of ServiceAccounts to run the check with. If serviceAccountNames is empty, the template.spec.serviceAccountName is used, unless it's empty, in which case \"default\" is used instead. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored."
  serviceAccountNames:[String]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview."
input com_github_openshift_api_security_v1_PodSecurityPolicyReviewStatusInput {
  "allowedServiceAccounts returns the list of service accounts in *this* namespace that have the power to create the PodTemplateSpec."
  allowedServiceAccounts:[com_github_openshift_api_security_v1_ServiceAccountPodSecurityPolicyReviewStatusInput]
}
"PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview."
type com_github_openshift_api_security_v1_PodSecurityPolicyReviewStatusResult {
  "allowedServiceAccounts returns the list of service accounts in *this* namespace that have the power to create the PodTemplateSpec."
  allowedServiceAccounts:[com_github_openshift_api_security_v1_ServiceAccountPodSecurityPolicyReviewStatusResult]
}
"PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can create the PodTemplateSpec"
input com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview."
  spec:com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewSpecInput
  "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusInput
}
"PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can create the PodTemplateSpec"
type com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview."
  spec:com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewSpecResult
  "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusResult
}
"PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview."
input com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewSpecInput {
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview."
type com_github_openshift_api_security_v1_PodSecurityPolicySelfSubjectReviewSpecResult {
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can create the PodTemplateSpec."
input com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview"
  spec:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewSpecInput
  "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusInput
}
"PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can create the PodTemplateSpec."
type com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview"
  spec:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewSpecResult
  "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
  status:com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusResult
}
"PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview"
input com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewSpecInput {
  "groups is the groups you're testing for."
  groups:[String]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "user is the user you're testing for. If you specify \"user\" but not \"group\", then is it interpreted as \"What if user were not a member of any groups. If user and groups are empty, then the check is performed using *only* the serviceAccountName in the template."
  user:String
}
"PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview"
type com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewSpecResult {
  "groups is the groups you're testing for."
  groups:[String]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "user is the user you're testing for. If you specify \"user\" but not \"group\", then is it interpreted as \"What if user were not a member of any groups. If user and groups are empty, then the check is performed using *only* the serviceAccountName in the template."
  user:String
}
"PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
input com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  allowedBy:io_k8s_api_core_v1_ObjectReferenceInput
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
  reason:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview."
type com_github_openshift_api_security_v1_PodSecurityPolicySubjectReviewStatusResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  allowedBy:io_k8s_api_core_v1_ObjectReferenceResult
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
  reason:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"RangeAllocation is used so we can easily expose a RangeAllocation typed for security group"
input com_github_openshift_api_security_v1_RangeAllocationInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "data is a byte array representing the serialized state of a range allocation.  It is a bitmap with each bit set to one to represent a range is taken."
  data:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "range is a string representing a unique label for a range of uids, \"1000000000-2000000000/10000\"."
  range:String
}
"RangeAllocationList is a list of RangeAllocations objects"
type com_github_openshift_api_security_v1_RangeAllocationListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of RangeAllocations."
  items:[com_github_openshift_api_security_v1_RangeAllocationResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RangeAllocation is used so we can easily expose a RangeAllocation typed for security group"
type com_github_openshift_api_security_v1_RangeAllocationResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "data is a byte array representing the serialized state of a range allocation.  It is a bitmap with each bit set to one to represent a range is taken."
  data:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "range is a string representing a unique label for a range of uids, \"1000000000-2000000000/10000\"."
  range:String
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
input com_github_openshift_api_security_v1_RunAsUserStrategyOptionsInput {
  "Type is the strategy that will dictate what RunAsUser is used in the SecurityContext."
  type:String
  "UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using namespace/service account allocated uids."
  uid:Int
  "UIDRangeMax defines the max value for a strategy that allocates by range."
  uidRangeMax:Int
  "UIDRangeMin defines the min value for a strategy that allocates by range."
  uidRangeMin:Int
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
type com_github_openshift_api_security_v1_RunAsUserStrategyOptionsResult {
  "Type is the strategy that will dictate what RunAsUser is used in the SecurityContext."
  type:String
  "UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using namespace/service account allocated uids."
  uid:Int
  "UIDRangeMax defines the max value for a strategy that allocates by range."
  uidRangeMax:Int
  "UIDRangeMin defines the min value for a strategy that allocates by range."
  uidRangeMin:Int
}
"SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy."
input com_github_openshift_api_security_v1_SELinuxContextStrategyOptionsInput {
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
  "Type is the strategy that will dictate what SELinux context is used in the SecurityContext."
  type:String
}
"SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy."
type com_github_openshift_api_security_v1_SELinuxContextStrategyOptionsResult {
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
  "Type is the strategy that will dictate what SELinux context is used in the SecurityContext."
  type:String
}
"SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints."
input com_github_openshift_api_security_v1_SecurityContextConstraintsInput {
  "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin"
  allowHostDirVolumePlugin:Boolean
  "AllowHostIPC determines if the policy allows host ipc in the containers."
  allowHostIPC:Boolean
  "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  allowHostNetwork:Boolean
  "AllowHostPID determines if the policy allows host pid in the containers."
  allowHostPID:Boolean
  "AllowHostPorts determines if the policy allows host ports in the containers."
  allowHostPorts:Boolean
  "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "AllowPrivilegedContainer determines if a container can request to be run as privileged."
  allowPrivilegedContainer:Boolean
  "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'."
  allowedCapabilities:[String]
  "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field."
  allowedFlexVolumes:[com_github_openshift_api_security_v1_AllowedFlexVolumeInput]
  """
    AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities."
  defaultAddCapabilities:[String]
  "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
  fsGroup:com_github_openshift_api_security_v1_FSGroupStrategyOptionsInput
  "The groups that have permission to use this security context constraints"
  groups:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name."
  priority:Int
  "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
  runAsUser:com_github_openshift_api_security_v1_RunAsUserStrategyOptionsInput
  "SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy."
  seLinuxContext:com_github_openshift_api_security_v1_SELinuxContextStrategyOptionsInput
  "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container.\tThe wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default."
  seccompProfiles:[String]
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
  supplementalGroups:com_github_openshift_api_security_v1_SupplementalGroupsStrategyOptionsInput
  "The users who have permissions to use this security context constraints"
  users:[String]
  "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"]."
  volumes:[String]
}
"SecurityContextConstraintsList is a list of SecurityContextConstraints objects"
type com_github_openshift_api_security_v1_SecurityContextConstraintsListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of security context constraints."
  items:[com_github_openshift_api_security_v1_SecurityContextConstraintsResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints."
type com_github_openshift_api_security_v1_SecurityContextConstraintsResult {
  "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin"
  allowHostDirVolumePlugin:Boolean
  "AllowHostIPC determines if the policy allows host ipc in the containers."
  allowHostIPC:Boolean
  "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  allowHostNetwork:Boolean
  "AllowHostPID determines if the policy allows host pid in the containers."
  allowHostPID:Boolean
  "AllowHostPorts determines if the policy allows host ports in the containers."
  allowHostPorts:Boolean
  "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "AllowPrivilegedContainer determines if a container can request to be run as privileged."
  allowPrivilegedContainer:Boolean
  "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'."
  allowedCapabilities:[String]
  "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field."
  allowedFlexVolumes:[com_github_openshift_api_security_v1_AllowedFlexVolumeResult]
  """
    AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities."
  defaultAddCapabilities:[String]
  "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
  fsGroup:com_github_openshift_api_security_v1_FSGroupStrategyOptionsResult
  "The groups that have permission to use this security context constraints"
  groups:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name."
  priority:Int
  "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
  runAsUser:com_github_openshift_api_security_v1_RunAsUserStrategyOptionsResult
  "SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy."
  seLinuxContext:com_github_openshift_api_security_v1_SELinuxContextStrategyOptionsResult
  "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container.\tThe wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default."
  seccompProfiles:[String]
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
  supplementalGroups:com_github_openshift_api_security_v1_SupplementalGroupsStrategyOptionsResult
  "The users who have permissions to use this security context constraints"
  users:[String]
  "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"]."
  volumes:[String]
}
"ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name and related review status"
input com_github_openshift_api_security_v1_ServiceAccountPodSecurityPolicyReviewStatusInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  allowedBy:io_k8s_api_core_v1_ObjectReferenceInput
  "name contains the allowed and the denied ServiceAccount name"
  name:String
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
  reason:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name and related review status"
type com_github_openshift_api_security_v1_ServiceAccountPodSecurityPolicyReviewStatusResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  allowedBy:io_k8s_api_core_v1_ObjectReferenceResult
  "name contains the allowed and the denied ServiceAccount name"
  name:String
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
  reason:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
input com_github_openshift_api_security_v1_SupplementalGroupsStrategyOptionsInput {
  "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end."
  ranges:[com_github_openshift_api_security_v1_IDRangeInput]
  "Type is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  type:String
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
type com_github_openshift_api_security_v1_SupplementalGroupsStrategyOptionsResult {
  "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end."
  ranges:[com_github_openshift_api_security_v1_IDRangeResult]
  "Type is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  type:String
}
"BrokerTemplateInstance holds the service broker-related state associated with a TemplateInstance.  BrokerTemplateInstance is part of an experimental API."
input com_github_openshift_api_template_v1_BrokerTemplateInstanceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance."
  spec:com_github_openshift_api_template_v1_BrokerTemplateInstanceSpecInput
}
"BrokerTemplateInstanceList is a list of BrokerTemplateInstance objects."
type com_github_openshift_api_template_v1_BrokerTemplateInstanceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of BrokerTemplateInstances"
  items:[com_github_openshift_api_template_v1_BrokerTemplateInstanceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"BrokerTemplateInstance holds the service broker-related state associated with a TemplateInstance.  BrokerTemplateInstance is part of an experimental API."
type com_github_openshift_api_template_v1_BrokerTemplateInstanceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance."
  spec:com_github_openshift_api_template_v1_BrokerTemplateInstanceSpecResult
}
"BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance."
input com_github_openshift_api_template_v1_BrokerTemplateInstanceSpecInput {
  "bindingids is a list of 'binding_id's provided during successive bind calls to the template service broker."
  bindingIDs:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  secret:io_k8s_api_core_v1_ObjectReferenceInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  templateInstance:io_k8s_api_core_v1_ObjectReferenceInput
}
"BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance."
type com_github_openshift_api_template_v1_BrokerTemplateInstanceSpecResult {
  "bindingids is a list of 'binding_id's provided during successive bind calls to the template service broker."
  bindingIDs:[String]
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  secret:io_k8s_api_core_v1_ObjectReferenceResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  templateInstance:io_k8s_api_core_v1_ObjectReferenceResult
}
"Parameter defines a name/value variable that is to be processed during the Template to Config transformation."
input com_github_openshift_api_template_v1_ParameterInput {
  "Description of a parameter. Optional."
  description:String
  "Optional: The name that will show in UI instead of parameter 'Name'"
  displayName:String
  "From is an input value for the generator. Optional."
  from:String
  """
    generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.
    
    The only supported generator is "expression", which accepts a "from" value in the form of a simple regular expression containing the range expression "[a-zA-Z0-9]", and the length expression "a{length}".
    
    Examples:
    
    from             | value ----------------------------- "test[0-9]{1}x"  | "test7x" "[0-1]{8}"       | "01001100" "0x[A-F0-9]{4}"  | "0xB3AF" "[a-zA-Z0-9]{8}" | "hW4yQU5i"
    """
  generate:String
  "Name must be set and it can be referenced in Template Items using ${PARAMETER_NAME}. Required."
  name:String
  "Optional: Indicates the parameter must have a value.  Defaults to false."
  required:Boolean
  "Value holds the Parameter data. If specified, the generator will be ignored. The value replaces all occurrences of the Parameter ${Name} expression during the Template to Config transformation. Optional."
  value:String
}
"Parameter defines a name/value variable that is to be processed during the Template to Config transformation."
type com_github_openshift_api_template_v1_ParameterResult {
  "Description of a parameter. Optional."
  description:String
  "Optional: The name that will show in UI instead of parameter 'Name'"
  displayName:String
  "From is an input value for the generator. Optional."
  from:String
  """
    generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.
    
    The only supported generator is "expression", which accepts a "from" value in the form of a simple regular expression containing the range expression "[a-zA-Z0-9]", and the length expression "a{length}".
    
    Examples:
    
    from             | value ----------------------------- "test[0-9]{1}x"  | "test7x" "[0-1]{8}"       | "01001100" "0x[A-F0-9]{4}"  | "0xB3AF" "[a-zA-Z0-9]{8}" | "hW4yQU5i"
    """
  generate:String
  "Name must be set and it can be referenced in Template Items using ${PARAMETER_NAME}. Required."
  name:String
  "Optional: Indicates the parameter must have a value.  Defaults to false."
  required:Boolean
  "Value holds the Parameter data. If specified, the generator will be ignored. The value replaces all occurrences of the Parameter ${Name} expression during the Template to Config transformation. Optional."
  value:String
}
"Template contains the inputs needed to produce a Config."
input com_github_openshift_api_template_v1_TemplateInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "labels is a optional set of labels that are applied to every object during the Template to Config transformation."
  labels:[StringInputProp!]
  "message is an optional instructional message that will be displayed when this template is instantiated. This field should inform the user how to utilize the newly created resources. Parameter substitution will be performed on the message before being displayed so that generated credentials and other parameters can be included in the output."
  message:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "objects is an array of resources to include in this template. If a namespace value is hardcoded in the object, it will be removed during template instantiation, however if the namespace value is, or contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter substitution will be respected and the object will be created in that namespace."
  objects:[io_k8s_apimachinery_pkg_runtime_RawExtensionInput]
  "parameters is an optional array of Parameters used during the Template to Config transformation."
  parameters:[com_github_openshift_api_template_v1_ParameterInput]
}
"TemplateInstanceCondition contains condition information for a TemplateInstance."
input com_github_openshift_api_template_v1_TemplateInstanceConditionInput {
  lastTransitionTime:String
  "Message is a human readable description of the details of the last transition, complementing reason."
  message:String
  "Reason is a brief machine readable explanation for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False or Unknown."
  status:String
  "Type of the condition, currently Ready or InstantiateFailure."
  type:String
}
"TemplateInstanceCondition contains condition information for a TemplateInstance."
type com_github_openshift_api_template_v1_TemplateInstanceConditionResult {
  lastTransitionTime:String
  "Message is a human readable description of the details of the last transition, complementing reason."
  message:String
  "Reason is a brief machine readable explanation for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False or Unknown."
  status:String
  "Type of the condition, currently Ready or InstantiateFailure."
  type:String
}
"TemplateInstance requests and records the instantiation of a Template. TemplateInstance is part of an experimental API."
input com_github_openshift_api_template_v1_TemplateInstanceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "TemplateInstanceSpec describes the desired state of a TemplateInstance."
  spec:com_github_openshift_api_template_v1_TemplateInstanceSpecInput
  "TemplateInstanceStatus describes the current state of a TemplateInstance."
  status:com_github_openshift_api_template_v1_TemplateInstanceStatusInput
}
"TemplateInstanceList is a list of TemplateInstance objects."
type com_github_openshift_api_template_v1_TemplateInstanceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of Templateinstances"
  items:[com_github_openshift_api_template_v1_TemplateInstanceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"TemplateInstanceObject references an object created by a TemplateInstance."
input com_github_openshift_api_template_v1_TemplateInstanceObjectInput {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  ref:io_k8s_api_core_v1_ObjectReferenceInput
}
"TemplateInstanceObject references an object created by a TemplateInstance."
type com_github_openshift_api_template_v1_TemplateInstanceObjectResult {
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  ref:io_k8s_api_core_v1_ObjectReferenceResult
}
"TemplateInstanceRequester holds the identity of an agent requesting a template instantiation."
input com_github_openshift_api_template_v1_TemplateInstanceRequesterInput {
  "extra holds additional information provided by the authenticator."
  extra:[StringInputProp!]
  "groups represent the groups this user is a part of."
  groups:[String]
  "uid is a unique value that identifies this user across time; if this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "username uniquely identifies this user among all active users."
  username:String
}
"TemplateInstanceRequester holds the identity of an agent requesting a template instantiation."
type com_github_openshift_api_template_v1_TemplateInstanceRequesterResult {
  "extra holds additional information provided by the authenticator."
  extra:[StringResultProp!]
  "groups represent the groups this user is a part of."
  groups:[String]
  "uid is a unique value that identifies this user across time; if this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "username uniquely identifies this user among all active users."
  username:String
}
"TemplateInstance requests and records the instantiation of a Template. TemplateInstance is part of an experimental API."
type com_github_openshift_api_template_v1_TemplateInstanceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "TemplateInstanceSpec describes the desired state of a TemplateInstance."
  spec:com_github_openshift_api_template_v1_TemplateInstanceSpecResult
  "TemplateInstanceStatus describes the current state of a TemplateInstance."
  status:com_github_openshift_api_template_v1_TemplateInstanceStatusResult
}
"TemplateInstanceSpec describes the desired state of a TemplateInstance."
input com_github_openshift_api_template_v1_TemplateInstanceSpecInput {
  "TemplateInstanceRequester holds the identity of an agent requesting a template instantiation."
  requester:com_github_openshift_api_template_v1_TemplateInstanceRequesterInput
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secret:io_k8s_api_core_v1_LocalObjectReferenceInput
  "Template contains the inputs needed to produce a Config."
  template:com_github_openshift_api_template_v1_TemplateInput
}
"TemplateInstanceSpec describes the desired state of a TemplateInstance."
type com_github_openshift_api_template_v1_TemplateInstanceSpecResult {
  "TemplateInstanceRequester holds the identity of an agent requesting a template instantiation."
  requester:com_github_openshift_api_template_v1_TemplateInstanceRequesterResult
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secret:io_k8s_api_core_v1_LocalObjectReferenceResult
  "Template contains the inputs needed to produce a Config."
  template:com_github_openshift_api_template_v1_TemplateResult
}
"TemplateInstanceStatus describes the current state of a TemplateInstance."
input com_github_openshift_api_template_v1_TemplateInstanceStatusInput {
  "conditions represent the latest available observations of a TemplateInstance's current state."
  conditions:[com_github_openshift_api_template_v1_TemplateInstanceConditionInput]
  "Objects references the objects created by the TemplateInstance."
  objects:[com_github_openshift_api_template_v1_TemplateInstanceObjectInput]
}
"TemplateInstanceStatus describes the current state of a TemplateInstance."
type com_github_openshift_api_template_v1_TemplateInstanceStatusResult {
  "conditions represent the latest available observations of a TemplateInstance's current state."
  conditions:[com_github_openshift_api_template_v1_TemplateInstanceConditionResult]
  "Objects references the objects created by the TemplateInstance."
  objects:[com_github_openshift_api_template_v1_TemplateInstanceObjectResult]
}
"TemplateList is a list of Template objects."
type com_github_openshift_api_template_v1_TemplateListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of templates"
  items:[com_github_openshift_api_template_v1_TemplateResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Template contains the inputs needed to produce a Config."
type com_github_openshift_api_template_v1_TemplateResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "labels is a optional set of labels that are applied to every object during the Template to Config transformation."
  labels:[StringResultProp!]
  "message is an optional instructional message that will be displayed when this template is instantiated. This field should inform the user how to utilize the newly created resources. Parameter substitution will be performed on the message before being displayed so that generated credentials and other parameters can be included in the output."
  message:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "objects is an array of resources to include in this template. If a namespace value is hardcoded in the object, it will be removed during template instantiation, however if the namespace value is, or contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter substitution will be respected and the object will be created in that namespace."
  objects:[io_k8s_apimachinery_pkg_runtime_RawExtensionResult]
  "parameters is an optional array of Parameters used during the Template to Config transformation."
  parameters:[com_github_openshift_api_template_v1_ParameterResult]
}
"Group represents a referenceable set of Users"
input com_github_openshift_api_user_v1_GroupInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Users is the list of users in this group."
  users:[String]
}
"GroupList is a collection of Groups"
type com_github_openshift_api_user_v1_GroupListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of groups"
  items:[com_github_openshift_api_user_v1_GroupResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Group represents a referenceable set of Users"
type com_github_openshift_api_user_v1_GroupResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Users is the list of users in this group."
  users:[String]
}
"Identity records a successful authentication of a user with an identity provider. The information about the source of authentication is stored on the identity, and the identity is then associated with a single user object. Multiple identities can reference a single user. Information retrieved from the authentication provider is stored in the extra field using a schema determined by the provider."
input com_github_openshift_api_user_v1_IdentityInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Extra holds extra information about this identity"
  extra:[StringInputProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ProviderName is the source of identity information"
  providerName:String
  "ProviderUserName uniquely represents this identity in the scope of the provider"
  providerUserName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  user:io_k8s_api_core_v1_ObjectReferenceInput
}
"IdentityList is a collection of Identities"
type com_github_openshift_api_user_v1_IdentityListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of identities"
  items:[com_github_openshift_api_user_v1_IdentityResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Identity records a successful authentication of a user with an identity provider. The information about the source of authentication is stored on the identity, and the identity is then associated with a single user object. Multiple identities can reference a single user. Information retrieved from the authentication provider is stored in the extra field using a schema determined by the provider."
type com_github_openshift_api_user_v1_IdentityResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Extra holds extra information about this identity"
  extra:[StringResultProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ProviderName is the source of identity information"
  providerName:String
  "ProviderUserName uniquely represents this identity in the scope of the provider"
  providerUserName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  user:io_k8s_api_core_v1_ObjectReferenceResult
}
"UserIdentityMapping maps a user to an identity"
input com_github_openshift_api_user_v1_UserIdentityMappingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  identity:io_k8s_api_core_v1_ObjectReferenceInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  user:io_k8s_api_core_v1_ObjectReferenceInput
}
"UserIdentityMapping maps a user to an identity"
type com_github_openshift_api_user_v1_UserIdentityMappingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  identity:io_k8s_api_core_v1_ObjectReferenceResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  user:io_k8s_api_core_v1_ObjectReferenceResult
}
"Upon log in, every user of the system receives a User and Identity resource. Administrators may directly manipulate the attributes of the users for their own tracking, or set groups via the API. The user name is unique and is chosen based on the value provided by the identity provider - if a user already exists with the incoming name, the user name may have a number appended to it depending on the configuration of the system."
input com_github_openshift_api_user_v1_UserInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "FullName is the full name of user"
  fullName:String
  "Groups specifies group names this user is a member of. This field is deprecated and will be removed in a future release. Instead, create a Group object containing the name of this User."
  groups:[String]
  "Identities are the identities associated with this user"
  identities:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
"UserList is a collection of Users"
type com_github_openshift_api_user_v1_UserListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of users"
  items:[com_github_openshift_api_user_v1_UserResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Upon log in, every user of the system receives a User and Identity resource. Administrators may directly manipulate the attributes of the users for their own tracking, or set groups via the API. The user name is unique and is chosen based on the value provided by the identity provider - if a user already exists with the incoming name, the user name may have a number appended to it depending on the configuration of the system."
type com_github_openshift_api_user_v1_UserResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "FullName is the full name of user"
  fullName:String
  "Groups specifies group names this user is a member of. This field is deprecated and will be removed in a future release. Instead, create a Group object containing the name of this User."
  groups:[String]
  "Identities are the identities associated with this user"
  identities:[String]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object."
input io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Webhooks is a list of webhooks and the affected resources and operations."
  webhooks:[io_k8s_api_admissionregistration_v1beta1_WebhookInput]
}
"MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration."
type io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of MutatingWebhookConfiguration."
  items:[io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object."
type io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Webhooks is a list of webhooks and the affected resources and operations."
  webhooks:[io_k8s_api_admissionregistration_v1beta1_WebhookResult]
}
"RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid."
input io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsInput {
  "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required."
  apiGroups:[String]
  "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required."
  apiVersions:[String]
  "Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required."
  operations:[String]
  """
    Resources is a list of resources this rule applies to.
    
    For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
    
    If wildcard is present, the validation rule will ensure resources do not overlap with each other.
    
    Depending on the enclosing object, subresources might not be allowed. Required.
    """
  resources:[String]
}
"RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid."
type io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsResult {
  "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required."
  apiGroups:[String]
  "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required."
  apiVersions:[String]
  "Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required."
  operations:[String]
  """
    Resources is a list of resources this rule applies to.
    
    For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
    
    If wildcard is present, the validation rule will ensure resources do not overlap with each other.
    
    Depending on the enclosing object, subresources might not be allowed. Required.
    """
  resources:[String]
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
input io_k8s_api_admissionregistration_v1beta1_ServiceReferenceInput {
  "`name` is the name of the service. Required"
  name:String
  "`namespace` is the namespace of the service. Required"
  namespace:String
  "`path` is an optional URL path which will be sent in any request to this service."
  path:String
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
type io_k8s_api_admissionregistration_v1beta1_ServiceReferenceResult {
  "`name` is the name of the service. Required"
  name:String
  "`namespace` is the namespace of the service. Required"
  namespace:String
  "`path` is an optional URL path which will be sent in any request to this service."
  path:String
}
"ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it."
input io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Webhooks is a list of webhooks and the affected resources and operations."
  webhooks:[io_k8s_api_admissionregistration_v1beta1_WebhookInput]
}
"ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration."
type io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ValidatingWebhookConfiguration."
  items:[io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it."
type io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Webhooks is a list of webhooks and the affected resources and operations."
  webhooks:[io_k8s_api_admissionregistration_v1beta1_WebhookResult]
}
"WebhookClientConfig contains the information to make a TLS connection with the webhook"
input io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigInput {
  "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. Required."
  caBundle:String
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_api_admissionregistration_v1beta1_ServiceReferenceInput
  """
    `url` gives the location of the webhook, in standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or `service` must be specified.
    
    The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
    
    Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
    
    The scheme must be "https"; the URL must begin with "https://".
    
    A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
    
    Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
    """
  url:String
}
"WebhookClientConfig contains the information to make a TLS connection with the webhook"
type io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigResult {
  "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. Required."
  caBundle:String
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_api_admissionregistration_v1beta1_ServiceReferenceResult
  """
    `url` gives the location of the webhook, in standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or `service` must be specified.
    
    The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
    
    Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
    
    The scheme must be "https"; the URL must begin with "https://".
    
    A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
    
    Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
    """
  url:String
}
"Webhook describes an admission webhook and the resources and operations it applies to."
input io_k8s_api_admissionregistration_v1beta1_WebhookInput {
  "WebhookClientConfig contains the information to make a TLS connection with the webhook"
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigInput
  "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore."
  failurePolicy:String
  "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required."
  name:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects."
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsInput]
}
"Webhook describes an admission webhook and the resources and operations it applies to."
type io_k8s_api_admissionregistration_v1beta1_WebhookResult {
  "WebhookClientConfig contains the information to make a TLS connection with the webhook"
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigResult
  "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore."
  failurePolicy:String
  "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required."
  name:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects."
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsResult]
}
"ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
input io_k8s_api_apps_v1_ControllerRevisionInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"ControllerRevisionList is a resource containing a list of ControllerRevision objects."
type io_k8s_api_apps_v1_ControllerRevisionListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of ControllerRevisions"
  items:[io_k8s_api_apps_v1_ControllerRevisionResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
type io_k8s_api_apps_v1_ControllerRevisionResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
input io_k8s_api_apps_v1_DaemonSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
type io_k8s_api_apps_v1_DaemonSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DaemonSet represents the configuration of a daemon set."
input io_k8s_api_apps_v1_DaemonSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_apps_v1_DaemonSetSpecInput
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_apps_v1_DaemonSetStatusInput
}
"DaemonSetList is a collection of daemon sets."
type io_k8s_api_apps_v1_DaemonSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "A list of daemon sets."
  items:[io_k8s_api_apps_v1_DaemonSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DaemonSet represents the configuration of a daemon set."
type io_k8s_api_apps_v1_DaemonSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_apps_v1_DaemonSetSpecResult
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_apps_v1_DaemonSetStatusResult
}
"DaemonSetSpec is the specification of a daemon set."
input io_k8s_api_apps_v1_DaemonSetSpecInput {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
  updateStrategy:io_k8s_api_apps_v1_DaemonSetUpdateStrategyInput
}
"DaemonSetSpec is the specification of a daemon set."
type io_k8s_api_apps_v1_DaemonSetSpecResult {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
  updateStrategy:io_k8s_api_apps_v1_DaemonSetUpdateStrategyResult
}
"DaemonSetStatus represents the current status of a daemon set."
input io_k8s_api_apps_v1_DaemonSetStatusInput {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_apps_v1_DaemonSetConditionInput]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
"DaemonSetStatus represents the current status of a daemon set."
type io_k8s_api_apps_v1_DaemonSetStatusResult {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_apps_v1_DaemonSetConditionResult]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
"DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
input io_k8s_api_apps_v1_DaemonSetUpdateStrategyInput {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDaemonSetInput
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate."
  type:String
}
"DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
type io_k8s_api_apps_v1_DaemonSetUpdateStrategyResult {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDaemonSetResult
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
input io_k8s_api_apps_v1_DeploymentConditionInput {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
type io_k8s_api_apps_v1_DeploymentConditionResult {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"Deployment enables declarative updates for Pods and ReplicaSets."
input io_k8s_api_apps_v1_DeploymentInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1_DeploymentSpecInput
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1_DeploymentStatusInput
}
"DeploymentList is a list of Deployments."
type io_k8s_api_apps_v1_DeploymentListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Deployments."
  items:[io_k8s_api_apps_v1_DeploymentResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Deployment enables declarative updates for Pods and ReplicaSets."
type io_k8s_api_apps_v1_DeploymentResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1_DeploymentSpecResult
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1_DeploymentStatusResult
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
input io_k8s_api_apps_v1_DeploymentSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1_DeploymentStrategyInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
type io_k8s_api_apps_v1_DeploymentSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1_DeploymentStrategyResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"DeploymentStatus is the most recently observed status of the Deployment."
input io_k8s_api_apps_v1_DeploymentStatusInput {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1_DeploymentConditionInput]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStatus is the most recently observed status of the Deployment."
type io_k8s_api_apps_v1_DeploymentStatusResult {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1_DeploymentConditionResult]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStrategy describes how to replace existing pods with new ones."
input io_k8s_api_apps_v1_DeploymentStrategyInput {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDeploymentInput
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"DeploymentStrategy describes how to replace existing pods with new ones."
type io_k8s_api_apps_v1_DeploymentStrategyResult {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDeploymentResult
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
input io_k8s_api_apps_v1_ReplicaSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
type io_k8s_api_apps_v1_ReplicaSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"ReplicaSet ensures that a specified number of pod replicas are running at any given time."
input io_k8s_api_apps_v1_ReplicaSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_apps_v1_ReplicaSetSpecInput
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_apps_v1_ReplicaSetStatusInput
}
"ReplicaSetList is a collection of ReplicaSets."
type io_k8s_api_apps_v1_ReplicaSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
  items:[io_k8s_api_apps_v1_ReplicaSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ReplicaSet ensures that a specified number of pod replicas are running at any given time."
type io_k8s_api_apps_v1_ReplicaSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_apps_v1_ReplicaSetSpecResult
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_apps_v1_ReplicaSetStatusResult
}
"ReplicaSetSpec is the specification of a ReplicaSet."
input io_k8s_api_apps_v1_ReplicaSetSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"ReplicaSetSpec is the specification of a ReplicaSet."
type io_k8s_api_apps_v1_ReplicaSetSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
input io_k8s_api_apps_v1_ReplicaSetStatusInput {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_apps_v1_ReplicaSetConditionInput]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
type io_k8s_api_apps_v1_ReplicaSetStatusResult {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_apps_v1_ReplicaSetConditionResult]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"Spec to control the desired behavior of daemon set rolling update."
input io_k8s_api_apps_v1_RollingUpdateDaemonSetInput {
  maxUnavailable:String
}
"Spec to control the desired behavior of daemon set rolling update."
type io_k8s_api_apps_v1_RollingUpdateDaemonSetResult {
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
input io_k8s_api_apps_v1_RollingUpdateDeploymentInput {
  maxSurge:String
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
type io_k8s_api_apps_v1_RollingUpdateDeploymentResult {
  maxSurge:String
  maxUnavailable:String
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
input io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyInput {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0."
  partition:Int
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
type io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyResult {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0."
  partition:Int
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
input io_k8s_api_apps_v1_StatefulSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
type io_k8s_api_apps_v1_StatefulSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"""
StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
input io_k8s_api_apps_v1_StatefulSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1_StatefulSetSpecInput
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1_StatefulSetStatusInput
}
"StatefulSetList is a collection of StatefulSets."
type io_k8s_api_apps_v1_StatefulSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_api_apps_v1_StatefulSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
type io_k8s_api_apps_v1_StatefulSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1_StatefulSetSpecResult
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1_StatefulSetStatusResult
}
"A StatefulSetSpec is the specification of a StatefulSet."
input io_k8s_api_apps_v1_StatefulSetSpecInput {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1_StatefulSetUpdateStrategyInput
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimInput]
}
"A StatefulSetSpec is the specification of a StatefulSet."
type io_k8s_api_apps_v1_StatefulSetSpecResult {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1_StatefulSetUpdateStrategyResult
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
}
"StatefulSetStatus represents the current state of a StatefulSet."
input io_k8s_api_apps_v1_StatefulSetStatusInput {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1_StatefulSetConditionInput]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetStatus represents the current state of a StatefulSet."
type io_k8s_api_apps_v1_StatefulSetStatusResult {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1_StatefulSetConditionResult]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
input io_k8s_api_apps_v1_StatefulSetUpdateStrategyInput {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyInput
  "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate."
  type:String
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
type io_k8s_api_apps_v1_StatefulSetUpdateStrategyResult {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyResult
  "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate."
  type:String
}
"DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
input io_k8s_api_apps_v1beta1_ControllerRevisionInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"ControllerRevisionList is a resource containing a list of ControllerRevision objects."
type io_k8s_api_apps_v1beta1_ControllerRevisionListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of ControllerRevisions"
  items:[io_k8s_api_apps_v1beta1_ControllerRevisionResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
type io_k8s_api_apps_v1beta1_ControllerRevisionResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"DeploymentCondition describes the state of a deployment at a certain point."
input io_k8s_api_apps_v1beta1_DeploymentConditionInput {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
type io_k8s_api_apps_v1beta1_DeploymentConditionResult {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
input io_k8s_api_apps_v1beta1_DeploymentInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1beta1_DeploymentSpecInput
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1beta1_DeploymentStatusInput
}
"DeploymentList is a list of Deployments."
type io_k8s_api_apps_v1beta1_DeploymentListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Deployments."
  items:[io_k8s_api_apps_v1beta1_DeploymentResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
type io_k8s_api_apps_v1beta1_DeploymentResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1beta1_DeploymentSpecResult
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1beta1_DeploymentStatusResult
}
"DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."
input io_k8s_api_apps_v1beta1_DeploymentRollbackInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Required: This must match the Name of a deployment."
  name:String
  "DEPRECATED."
  rollbackTo:io_k8s_api_apps_v1beta1_RollbackConfigInput
  "The annotations to be updated to a deployment"
  updatedAnnotations:[StringInputProp!]
}
"DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."
type io_k8s_api_apps_v1beta1_DeploymentRollbackResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Required: This must match the Name of a deployment."
  name:String
  "DEPRECATED."
  rollbackTo:io_k8s_api_apps_v1beta1_RollbackConfigResult
  "The annotations to be updated to a deployment"
  updatedAnnotations:[StringResultProp!]
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
input io_k8s_api_apps_v1beta1_DeploymentSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2."
  revisionHistoryLimit:Int
  "DEPRECATED."
  rollbackTo:io_k8s_api_apps_v1beta1_RollbackConfigInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1beta1_DeploymentStrategyInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
type io_k8s_api_apps_v1beta1_DeploymentSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2."
  revisionHistoryLimit:Int
  "DEPRECATED."
  rollbackTo:io_k8s_api_apps_v1beta1_RollbackConfigResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1beta1_DeploymentStrategyResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"DeploymentStatus is the most recently observed status of the Deployment."
input io_k8s_api_apps_v1beta1_DeploymentStatusInput {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1beta1_DeploymentConditionInput]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStatus is the most recently observed status of the Deployment."
type io_k8s_api_apps_v1beta1_DeploymentStatusResult {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1beta1_DeploymentConditionResult]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStrategy describes how to replace existing pods with new ones."
input io_k8s_api_apps_v1beta1_DeploymentStrategyInput {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta1_RollingUpdateDeploymentInput
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"DeploymentStrategy describes how to replace existing pods with new ones."
type io_k8s_api_apps_v1beta1_DeploymentStrategyResult {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta1_RollingUpdateDeploymentResult
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"DEPRECATED."
input io_k8s_api_apps_v1beta1_RollbackConfigInput {
  "The revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"DEPRECATED."
type io_k8s_api_apps_v1beta1_RollbackConfigResult {
  "The revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"Spec to control the desired behavior of rolling update."
input io_k8s_api_apps_v1beta1_RollingUpdateDeploymentInput {
  maxSurge:String
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
type io_k8s_api_apps_v1beta1_RollingUpdateDeploymentResult {
  maxSurge:String
  maxUnavailable:String
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
input io_k8s_api_apps_v1beta1_RollingUpdateStatefulSetStrategyInput {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned."
  partition:Int
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
type io_k8s_api_apps_v1beta1_RollingUpdateStatefulSetStrategyResult {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned."
  partition:Int
}
"Scale represents a scaling request for a resource."
input io_k8s_api_apps_v1beta1_ScaleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ScaleSpec describes the attributes of a scale subresource"
  spec:io_k8s_api_apps_v1beta1_ScaleSpecInput
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_apps_v1beta1_ScaleStatusInput
}
"Scale represents a scaling request for a resource."
type io_k8s_api_apps_v1beta1_ScaleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ScaleSpec describes the attributes of a scale subresource"
  spec:io_k8s_api_apps_v1beta1_ScaleSpecResult
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_apps_v1beta1_ScaleStatusResult
}
"ScaleSpec describes the attributes of a scale subresource"
input io_k8s_api_apps_v1beta1_ScaleSpecInput {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleSpec describes the attributes of a scale subresource"
type io_k8s_api_apps_v1beta1_ScaleSpecResult {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleStatus represents the current status of a scale subresource."
input io_k8s_api_apps_v1beta1_ScaleStatusInput {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringInputProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"ScaleStatus represents the current status of a scale subresource."
type io_k8s_api_apps_v1beta1_ScaleStatusResult {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringResultProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
input io_k8s_api_apps_v1beta1_StatefulSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
type io_k8s_api_apps_v1beta1_StatefulSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"""
DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
input io_k8s_api_apps_v1beta1_StatefulSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1beta1_StatefulSetSpecInput
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1beta1_StatefulSetStatusInput
}
"StatefulSetList is a collection of StatefulSets."
type io_k8s_api_apps_v1beta1_StatefulSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_api_apps_v1beta1_StatefulSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
type io_k8s_api_apps_v1beta1_StatefulSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1beta1_StatefulSetSpecResult
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1beta1_StatefulSetStatusResult
}
"A StatefulSetSpec is the specification of a StatefulSet."
input io_k8s_api_apps_v1beta1_StatefulSetSpecInput {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1beta1_StatefulSetUpdateStrategyInput
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimInput]
}
"A StatefulSetSpec is the specification of a StatefulSet."
type io_k8s_api_apps_v1beta1_StatefulSetSpecResult {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1beta1_StatefulSetUpdateStrategyResult
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
}
"StatefulSetStatus represents the current state of a StatefulSet."
input io_k8s_api_apps_v1beta1_StatefulSetStatusInput {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1beta1_StatefulSetConditionInput]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetStatus represents the current state of a StatefulSet."
type io_k8s_api_apps_v1beta1_StatefulSetStatusResult {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1beta1_StatefulSetConditionResult]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
input io_k8s_api_apps_v1beta1_StatefulSetUpdateStrategyInput {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1beta1_RollingUpdateStatefulSetStrategyInput
  "Type indicates the type of the StatefulSetUpdateStrategy."
  type:String
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
type io_k8s_api_apps_v1beta1_StatefulSetUpdateStrategyResult {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1beta1_RollingUpdateStatefulSetStrategyResult
  "Type indicates the type of the StatefulSetUpdateStrategy."
  type:String
}
"DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
input io_k8s_api_apps_v1beta2_ControllerRevisionInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"ControllerRevisionList is a resource containing a list of ControllerRevision objects."
type io_k8s_api_apps_v1beta2_ControllerRevisionListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of ControllerRevisions"
  items:[io_k8s_api_apps_v1beta2_ControllerRevisionResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
type io_k8s_api_apps_v1beta2_ControllerRevisionResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  data:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Revision indicates the revision of the state represented by Data."
  revision:Int
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
input io_k8s_api_apps_v1beta2_DaemonSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
type io_k8s_api_apps_v1beta2_DaemonSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DEPRECATED - This group version of DaemonSet is deprecated by apps/v1/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
input io_k8s_api_apps_v1beta2_DaemonSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_apps_v1beta2_DaemonSetSpecInput
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_apps_v1beta2_DaemonSetStatusInput
}
"DaemonSetList is a collection of daemon sets."
type io_k8s_api_apps_v1beta2_DaemonSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "A list of daemon sets."
  items:[io_k8s_api_apps_v1beta2_DaemonSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of DaemonSet is deprecated by apps/v1/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
type io_k8s_api_apps_v1beta2_DaemonSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_apps_v1beta2_DaemonSetSpecResult
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_apps_v1beta2_DaemonSetStatusResult
}
"DaemonSetSpec is the specification of a daemon set."
input io_k8s_api_apps_v1beta2_DaemonSetSpecInput {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
  updateStrategy:io_k8s_api_apps_v1beta2_DaemonSetUpdateStrategyInput
}
"DaemonSetSpec is the specification of a daemon set."
type io_k8s_api_apps_v1beta2_DaemonSetSpecResult {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
  updateStrategy:io_k8s_api_apps_v1beta2_DaemonSetUpdateStrategyResult
}
"DaemonSetStatus represents the current status of a daemon set."
input io_k8s_api_apps_v1beta2_DaemonSetStatusInput {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_apps_v1beta2_DaemonSetConditionInput]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
"DaemonSetStatus represents the current status of a daemon set."
type io_k8s_api_apps_v1beta2_DaemonSetStatusResult {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_apps_v1beta2_DaemonSetConditionResult]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
"DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
input io_k8s_api_apps_v1beta2_DaemonSetUpdateStrategyInput {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateDaemonSetInput
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate."
  type:String
}
"DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
type io_k8s_api_apps_v1beta2_DaemonSetUpdateStrategyResult {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateDaemonSetResult
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
input io_k8s_api_apps_v1beta2_DeploymentConditionInput {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
type io_k8s_api_apps_v1beta2_DeploymentConditionResult {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
input io_k8s_api_apps_v1beta2_DeploymentInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1beta2_DeploymentSpecInput
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1beta2_DeploymentStatusInput
}
"DeploymentList is a list of Deployments."
type io_k8s_api_apps_v1beta2_DeploymentListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Deployments."
  items:[io_k8s_api_apps_v1beta2_DeploymentResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
type io_k8s_api_apps_v1beta2_DeploymentResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_apps_v1beta2_DeploymentSpecResult
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_apps_v1beta2_DeploymentStatusResult
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
input io_k8s_api_apps_v1beta2_DeploymentSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1beta2_DeploymentStrategyInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
type io_k8s_api_apps_v1beta2_DeploymentSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_apps_v1beta2_DeploymentStrategyResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"DeploymentStatus is the most recently observed status of the Deployment."
input io_k8s_api_apps_v1beta2_DeploymentStatusInput {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1beta2_DeploymentConditionInput]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStatus is the most recently observed status of the Deployment."
type io_k8s_api_apps_v1beta2_DeploymentStatusResult {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_apps_v1beta2_DeploymentConditionResult]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStrategy describes how to replace existing pods with new ones."
input io_k8s_api_apps_v1beta2_DeploymentStrategyInput {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateDeploymentInput
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"DeploymentStrategy describes how to replace existing pods with new ones."
type io_k8s_api_apps_v1beta2_DeploymentStrategyResult {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateDeploymentResult
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
input io_k8s_api_apps_v1beta2_ReplicaSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
type io_k8s_api_apps_v1beta2_ReplicaSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
input io_k8s_api_apps_v1beta2_ReplicaSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_apps_v1beta2_ReplicaSetSpecInput
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_apps_v1beta2_ReplicaSetStatusInput
}
"ReplicaSetList is a collection of ReplicaSets."
type io_k8s_api_apps_v1beta2_ReplicaSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
  items:[io_k8s_api_apps_v1beta2_ReplicaSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
type io_k8s_api_apps_v1beta2_ReplicaSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_apps_v1beta2_ReplicaSetSpecResult
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_apps_v1beta2_ReplicaSetStatusResult
}
"ReplicaSetSpec is the specification of a ReplicaSet."
input io_k8s_api_apps_v1beta2_ReplicaSetSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"ReplicaSetSpec is the specification of a ReplicaSet."
type io_k8s_api_apps_v1beta2_ReplicaSetSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
input io_k8s_api_apps_v1beta2_ReplicaSetStatusInput {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_apps_v1beta2_ReplicaSetConditionInput]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
type io_k8s_api_apps_v1beta2_ReplicaSetStatusResult {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_apps_v1beta2_ReplicaSetConditionResult]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"Spec to control the desired behavior of daemon set rolling update."
input io_k8s_api_apps_v1beta2_RollingUpdateDaemonSetInput {
  maxUnavailable:String
}
"Spec to control the desired behavior of daemon set rolling update."
type io_k8s_api_apps_v1beta2_RollingUpdateDaemonSetResult {
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
input io_k8s_api_apps_v1beta2_RollingUpdateDeploymentInput {
  maxSurge:String
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
type io_k8s_api_apps_v1beta2_RollingUpdateDeploymentResult {
  maxSurge:String
  maxUnavailable:String
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
input io_k8s_api_apps_v1beta2_RollingUpdateStatefulSetStrategyInput {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0."
  partition:Int
}
"RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
type io_k8s_api_apps_v1beta2_RollingUpdateStatefulSetStrategyResult {
  "Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0."
  partition:Int
}
"Scale represents a scaling request for a resource."
input io_k8s_api_apps_v1beta2_ScaleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ScaleSpec describes the attributes of a scale subresource"
  spec:io_k8s_api_apps_v1beta2_ScaleSpecInput
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_apps_v1beta2_ScaleStatusInput
}
"Scale represents a scaling request for a resource."
type io_k8s_api_apps_v1beta2_ScaleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ScaleSpec describes the attributes of a scale subresource"
  spec:io_k8s_api_apps_v1beta2_ScaleSpecResult
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_apps_v1beta2_ScaleStatusResult
}
"ScaleSpec describes the attributes of a scale subresource"
input io_k8s_api_apps_v1beta2_ScaleSpecInput {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleSpec describes the attributes of a scale subresource"
type io_k8s_api_apps_v1beta2_ScaleSpecResult {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleStatus represents the current status of a scale subresource."
input io_k8s_api_apps_v1beta2_ScaleStatusInput {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringInputProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"ScaleStatus represents the current status of a scale subresource."
type io_k8s_api_apps_v1beta2_ScaleStatusResult {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringResultProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
input io_k8s_api_apps_v1beta2_StatefulSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"StatefulSetCondition describes the state of a statefulset at a certain point."
type io_k8s_api_apps_v1beta2_StatefulSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of statefulset condition."
  type:String
}
"""
DEPRECATED - This group version of StatefulSet is deprecated by apps/v1/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
input io_k8s_api_apps_v1beta2_StatefulSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1beta2_StatefulSetSpecInput
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1beta2_StatefulSetStatusInput
}
"StatefulSetList is a collection of StatefulSets."
type io_k8s_api_apps_v1beta2_StatefulSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_api_apps_v1beta2_StatefulSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
DEPRECATED - This group version of StatefulSet is deprecated by apps/v1/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
 - Network: A single stable DNS and hostname.
 - Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.
"""
type io_k8s_api_apps_v1beta2_StatefulSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "A StatefulSetSpec is the specification of a StatefulSet."
  spec:io_k8s_api_apps_v1beta2_StatefulSetSpecResult
  "StatefulSetStatus represents the current state of a StatefulSet."
  status:io_k8s_api_apps_v1beta2_StatefulSetStatusResult
}
"A StatefulSetSpec is the specification of a StatefulSet."
input io_k8s_api_apps_v1beta2_StatefulSetSpecInput {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1beta2_StatefulSetUpdateStrategyInput
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimInput]
}
"A StatefulSetSpec is the specification of a StatefulSet."
type io_k8s_api_apps_v1beta2_StatefulSetSpecResult {
  "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once."
  podManagementPolicy:String
  "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
  replicas:Int
  "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
  serviceName:String
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
  updateStrategy:io_k8s_api_apps_v1beta2_StatefulSetUpdateStrategyResult
  "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
}
"StatefulSetStatus represents the current state of a StatefulSet."
input io_k8s_api_apps_v1beta2_StatefulSetStatusInput {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1beta2_StatefulSetConditionInput]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetStatus represents the current state of a StatefulSet."
type io_k8s_api_apps_v1beta2_StatefulSetStatusResult {
  "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a statefulset's current state."
  conditions:[io_k8s_api_apps_v1beta2_StatefulSetConditionResult]
  "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision."
  currentReplicas:Int
  "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
  currentRevision:String
  "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."
  observedGeneration:Int
  "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition."
  readyReplicas:Int
  "replicas is the number of Pods created by the StatefulSet controller."
  replicas:Int
  "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
  updateRevision:String
  "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision."
  updatedReplicas:Int
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
input io_k8s_api_apps_v1beta2_StatefulSetUpdateStrategyInput {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateStatefulSetStrategyInput
  "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate."
  type:String
}
"StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy."
type io_k8s_api_apps_v1beta2_StatefulSetUpdateStrategyResult {
  "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
  rollingUpdate:io_k8s_api_apps_v1beta2_RollingUpdateStatefulSetStrategyResult
  "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate."
  type:String
}
"TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
input io_k8s_api_authentication_v1_TokenReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "TokenReviewSpec is a description of the token authentication request."
  spec:io_k8s_api_authentication_v1_TokenReviewSpecInput
  "TokenReviewStatus is the result of the token authentication request."
  status:io_k8s_api_authentication_v1_TokenReviewStatusInput
}
"TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
type io_k8s_api_authentication_v1_TokenReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "TokenReviewSpec is a description of the token authentication request."
  spec:io_k8s_api_authentication_v1_TokenReviewSpecResult
  "TokenReviewStatus is the result of the token authentication request."
  status:io_k8s_api_authentication_v1_TokenReviewStatusResult
}
"TokenReviewSpec is a description of the token authentication request."
input io_k8s_api_authentication_v1_TokenReviewSpecInput {
  "Token is the opaque bearer token."
  token:String
}
"TokenReviewSpec is a description of the token authentication request."
type io_k8s_api_authentication_v1_TokenReviewSpecResult {
  "Token is the opaque bearer token."
  token:String
}
"TokenReviewStatus is the result of the token authentication request."
input io_k8s_api_authentication_v1_TokenReviewStatusInput {
  "Authenticated indicates that the token was associated with a known user."
  authenticated:Boolean
  "Error indicates that the token couldn't be checked"
  error:String
  "UserInfo holds the information about the user needed to implement the user.Info interface."
  user:io_k8s_api_authentication_v1_UserInfoInput
}
"TokenReviewStatus is the result of the token authentication request."
type io_k8s_api_authentication_v1_TokenReviewStatusResult {
  "Authenticated indicates that the token was associated with a known user."
  authenticated:Boolean
  "Error indicates that the token couldn't be checked"
  error:String
  "UserInfo holds the information about the user needed to implement the user.Info interface."
  user:io_k8s_api_authentication_v1_UserInfoResult
}
"UserInfo holds the information about the user needed to implement the user.Info interface."
input io_k8s_api_authentication_v1_UserInfoInput {
  "Any additional information provided by the authenticator."
  extra:[StringInputProp!]
  "The names of groups this user is a part of."
  groups:[String]
  "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "The name that uniquely identifies this user among all active users."
  username:String
}
"UserInfo holds the information about the user needed to implement the user.Info interface."
type io_k8s_api_authentication_v1_UserInfoResult {
  "Any additional information provided by the authenticator."
  extra:[StringResultProp!]
  "The names of groups this user is a part of."
  groups:[String]
  "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "The name that uniquely identifies this user among all active users."
  username:String
}
"TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
input io_k8s_api_authentication_v1beta1_TokenReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "TokenReviewSpec is a description of the token authentication request."
  spec:io_k8s_api_authentication_v1beta1_TokenReviewSpecInput
  "TokenReviewStatus is the result of the token authentication request."
  status:io_k8s_api_authentication_v1beta1_TokenReviewStatusInput
}
"TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
type io_k8s_api_authentication_v1beta1_TokenReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "TokenReviewSpec is a description of the token authentication request."
  spec:io_k8s_api_authentication_v1beta1_TokenReviewSpecResult
  "TokenReviewStatus is the result of the token authentication request."
  status:io_k8s_api_authentication_v1beta1_TokenReviewStatusResult
}
"TokenReviewSpec is a description of the token authentication request."
input io_k8s_api_authentication_v1beta1_TokenReviewSpecInput {
  "Token is the opaque bearer token."
  token:String
}
"TokenReviewSpec is a description of the token authentication request."
type io_k8s_api_authentication_v1beta1_TokenReviewSpecResult {
  "Token is the opaque bearer token."
  token:String
}
"TokenReviewStatus is the result of the token authentication request."
input io_k8s_api_authentication_v1beta1_TokenReviewStatusInput {
  "Authenticated indicates that the token was associated with a known user."
  authenticated:Boolean
  "Error indicates that the token couldn't be checked"
  error:String
  "UserInfo holds the information about the user needed to implement the user.Info interface."
  user:io_k8s_api_authentication_v1beta1_UserInfoInput
}
"TokenReviewStatus is the result of the token authentication request."
type io_k8s_api_authentication_v1beta1_TokenReviewStatusResult {
  "Authenticated indicates that the token was associated with a known user."
  authenticated:Boolean
  "Error indicates that the token couldn't be checked"
  error:String
  "UserInfo holds the information about the user needed to implement the user.Info interface."
  user:io_k8s_api_authentication_v1beta1_UserInfoResult
}
"UserInfo holds the information about the user needed to implement the user.Info interface."
input io_k8s_api_authentication_v1beta1_UserInfoInput {
  "Any additional information provided by the authenticator."
  extra:[StringInputProp!]
  "The names of groups this user is a part of."
  groups:[String]
  "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "The name that uniquely identifies this user among all active users."
  username:String
}
"UserInfo holds the information about the user needed to implement the user.Info interface."
type io_k8s_api_authentication_v1beta1_UserInfoResult {
  "Any additional information provided by the authenticator."
  extra:[StringResultProp!]
  "The names of groups this user is a part of."
  groups:[String]
  "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
  uid:String
  "The name that uniquely identifies this user among all active users."
  username:String
}
"LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking."
input io_k8s_api_authorization_v1_LocalSubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
}
"LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking."
type io_k8s_api_authorization_v1_LocalSubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
"NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
input io_k8s_api_authorization_v1_NonResourceAttributesInput {
  "Path is the URL path of the request"
  path:String
  "Verb is the standard HTTP verb"
  verb:String
}
"NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
type io_k8s_api_authorization_v1_NonResourceAttributesResult {
  "Path is the URL path of the request"
  path:String
  "Verb is the standard HTTP verb"
  verb:String
}
"NonResourceRule holds information that describes a rule for the non-resource"
input io_k8s_api_authorization_v1_NonResourceRuleInput {
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all."
  nonResourceURLs:[String]
  "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all."
  verbs:[String]
}
"NonResourceRule holds information that describes a rule for the non-resource"
type io_k8s_api_authorization_v1_NonResourceRuleResult {
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all."
  nonResourceURLs:[String]
  "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all."
  verbs:[String]
}
"ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
input io_k8s_api_authorization_v1_ResourceAttributesInput {
  "Group is the API Group of the Resource.  \"*\" means all."
  group:String
  "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
  name:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
  namespace:String
  "Resource is one of the existing resource types.  \"*\" means all."
  resource:String
  "Subresource is one of the existing resource types.  \"\" means none."
  subresource:String
  "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verb:String
  "Version is the API Version of the Resource.  \"*\" means all."
  version:String
}
"ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
type io_k8s_api_authorization_v1_ResourceAttributesResult {
  "Group is the API Group of the Resource.  \"*\" means all."
  group:String
  "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
  name:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
  namespace:String
  "Resource is one of the existing resource types.  \"*\" means all."
  resource:String
  "Subresource is one of the existing resource types.  \"\" means none."
  subresource:String
  "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verb:String
  "Version is the API Version of the Resource.  \"*\" means all."
  version:String
}
"ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
input io_k8s_api_authorization_v1_ResourceRuleInput {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all."
  apiGroups:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all."
  resourceNames:[String]
  """
    Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
     "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
    """
  resources:[String]
  "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verbs:[String]
}
"ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
type io_k8s_api_authorization_v1_ResourceRuleResult {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all."
  apiGroups:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all."
  resourceNames:[String]
  """
    Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
     "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
    """
  resources:[String]
  "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verbs:[String]
}
"SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
input io_k8s_api_authorization_v1_SelfSubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
}
"SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
type io_k8s_api_authorization_v1_SelfSubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
"SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
input io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecInput {
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesInput
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesInput
}
"SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
type io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecResult {
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesResult
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesResult
}
"SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
input io_k8s_api_authorization_v1_SelfSubjectRulesReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  spec:io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecInput
  "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
  status:io_k8s_api_authorization_v1_SubjectRulesReviewStatusInput
}
"SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
type io_k8s_api_authorization_v1_SelfSubjectRulesReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  spec:io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecResult
  "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
  status:io_k8s_api_authorization_v1_SubjectRulesReviewStatusResult
}
input io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecInput {
  "Namespace to evaluate rules for. Required."
  namespace:String
}
type io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecResult {
  "Namespace to evaluate rules for. Required."
  namespace:String
}
"SubjectAccessReview checks whether or not a user or group can perform an action."
input io_k8s_api_authorization_v1_SubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
}
"SubjectAccessReview checks whether or not a user or group can perform an action."
type io_k8s_api_authorization_v1_SubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
"SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
input io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput {
  "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
  extra:[StringInputProp!]
  "Groups is the groups you're testing for."
  groups:[String]
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesInput
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesInput
  "UID information about the requesting user."
  uid:String
  "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups"
  user:String
}
"SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
type io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult {
  "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
  extra:[StringResultProp!]
  "Groups is the groups you're testing for."
  groups:[String]
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesResult
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesResult
  "UID information about the requesting user."
  uid:String
  "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups"
  user:String
}
"SubjectAccessReviewStatus"
input io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput {
  "Allowed is required. True if the action would be allowed, false otherwise."
  allowed:Boolean
  "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true."
  denied:Boolean
  "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
  evaluationError:String
  "Reason is optional.  It indicates why a request was allowed or denied."
  reason:String
}
"SubjectAccessReviewStatus"
type io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult {
  "Allowed is required. True if the action would be allowed, false otherwise."
  allowed:Boolean
  "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true."
  denied:Boolean
  "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
  evaluationError:String
  "Reason is optional.  It indicates why a request was allowed or denied."
  reason:String
}
"SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
input io_k8s_api_authorization_v1_SubjectRulesReviewStatusInput {
  "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."
  evaluationError:String
  "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."
  incomplete:Boolean
  "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  nonResourceRules:[io_k8s_api_authorization_v1_NonResourceRuleInput]
  "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  resourceRules:[io_k8s_api_authorization_v1_ResourceRuleInput]
}
"SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
type io_k8s_api_authorization_v1_SubjectRulesReviewStatusResult {
  "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."
  evaluationError:String
  "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."
  incomplete:Boolean
  "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  nonResourceRules:[io_k8s_api_authorization_v1_NonResourceRuleResult]
  "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  resourceRules:[io_k8s_api_authorization_v1_ResourceRuleResult]
}
"LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking."
input io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
}
"LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking."
type io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
"NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
input io_k8s_api_authorization_v1beta1_NonResourceAttributesInput {
  "Path is the URL path of the request"
  path:String
  "Verb is the standard HTTP verb"
  verb:String
}
"NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
type io_k8s_api_authorization_v1beta1_NonResourceAttributesResult {
  "Path is the URL path of the request"
  path:String
  "Verb is the standard HTTP verb"
  verb:String
}
"NonResourceRule holds information that describes a rule for the non-resource"
input io_k8s_api_authorization_v1beta1_NonResourceRuleInput {
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all."
  nonResourceURLs:[String]
  "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all."
  verbs:[String]
}
"NonResourceRule holds information that describes a rule for the non-resource"
type io_k8s_api_authorization_v1beta1_NonResourceRuleResult {
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all."
  nonResourceURLs:[String]
  "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all."
  verbs:[String]
}
"ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
input io_k8s_api_authorization_v1beta1_ResourceAttributesInput {
  "Group is the API Group of the Resource.  \"*\" means all."
  group:String
  "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
  name:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
  namespace:String
  "Resource is one of the existing resource types.  \"*\" means all."
  resource:String
  "Subresource is one of the existing resource types.  \"\" means none."
  subresource:String
  "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verb:String
  "Version is the API Version of the Resource.  \"*\" means all."
  version:String
}
"ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
type io_k8s_api_authorization_v1beta1_ResourceAttributesResult {
  "Group is the API Group of the Resource.  \"*\" means all."
  group:String
  "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
  name:String
  "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
  namespace:String
  "Resource is one of the existing resource types.  \"*\" means all."
  resource:String
  "Subresource is one of the existing resource types.  \"\" means none."
  subresource:String
  "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verb:String
  "Version is the API Version of the Resource.  \"*\" means all."
  version:String
}
"ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
input io_k8s_api_authorization_v1beta1_ResourceRuleInput {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all."
  apiGroups:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all."
  resourceNames:[String]
  """
    Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
     "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
    """
  resources:[String]
  "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verbs:[String]
}
"ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
type io_k8s_api_authorization_v1beta1_ResourceRuleResult {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all."
  apiGroups:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all."
  resourceNames:[String]
  """
    Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
     "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
    """
  resources:[String]
  "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
  verbs:[String]
}
"SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
input io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
}
"SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
type io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
"SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
input io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecInput {
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesInput
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesInput
}
"SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
type io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecResult {
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesResult
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesResult
}
"SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
input io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecInput
  "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
  status:io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusInput
}
"SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
type io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecResult
  "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
  status:io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusResult
}
input io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecInput {
  "Namespace to evaluate rules for. Required."
  namespace:String
}
type io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecResult {
  "Namespace to evaluate rules for. Required."
  namespace:String
}
"SubjectAccessReview checks whether or not a user or group can perform an action."
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
}
"SubjectAccessReview checks whether or not a user or group can perform an action."
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult
  "SubjectAccessReviewStatus"
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
"SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput {
  "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
  extra:[StringInputProp!]
  "Groups is the groups you're testing for."
  group:[String]
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesInput
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesInput
  "UID information about the requesting user."
  uid:String
  "User is the user you're testing for. If you specify \"User\" but not \"Group\", then is it interpreted as \"What if User were not a member of any groups"
  user:String
}
"SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set"
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult {
  "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
  extra:[StringResultProp!]
  "Groups is the groups you're testing for."
  group:[String]
  "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface"
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesResult
  "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface"
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesResult
  "UID information about the requesting user."
  uid:String
  "User is the user you're testing for. If you specify \"User\" but not \"Group\", then is it interpreted as \"What if User were not a member of any groups"
  user:String
}
"SubjectAccessReviewStatus"
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput {
  "Allowed is required. True if the action would be allowed, false otherwise."
  allowed:Boolean
  "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true."
  denied:Boolean
  "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
  evaluationError:String
  "Reason is optional.  It indicates why a request was allowed or denied."
  reason:String
}
"SubjectAccessReviewStatus"
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult {
  "Allowed is required. True if the action would be allowed, false otherwise."
  allowed:Boolean
  "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true."
  denied:Boolean
  "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
  evaluationError:String
  "Reason is optional.  It indicates why a request was allowed or denied."
  reason:String
}
"SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
input io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusInput {
  "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."
  evaluationError:String
  "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."
  incomplete:Boolean
  "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  nonResourceRules:[io_k8s_api_authorization_v1beta1_NonResourceRuleInput]
  "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  resourceRules:[io_k8s_api_authorization_v1beta1_ResourceRuleInput]
}
"SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete."
type io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusResult {
  "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."
  evaluationError:String
  "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."
  incomplete:Boolean
  "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  nonResourceRules:[io_k8s_api_authorization_v1beta1_NonResourceRuleResult]
  "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."
  resourceRules:[io_k8s_api_authorization_v1beta1_ResourceRuleResult]
}
"CrossVersionObjectReference contains enough information to let you identify the referred resource."
input io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceInput {
  "API version of the referent"
  apiVersion:String
  "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
  kind:String
  "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
}
"CrossVersionObjectReference contains enough information to let you identify the referred resource."
type io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceResult {
  "API version of the referent"
  apiVersion:String
  "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
  kind:String
  "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
}
"configuration of a horizontal pod autoscaler."
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "specification of a horizontal pod autoscaler."
  spec:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecInput
  "current status of a horizontal pod autoscaler"
  status:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusInput
}
"list of horizontal pod autoscaler objects."
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "list of horizontal pod autoscaler objects."
  items:[io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"configuration of a horizontal pod autoscaler."
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "specification of a horizontal pod autoscaler."
  spec:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecResult
  "current status of a horizontal pod autoscaler"
  status:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusResult
}
"specification of a horizontal pod autoscaler."
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecInput {
  "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas."
  maxReplicas:Int
  "lower limit for the number of pods that can be set by the autoscaler, default 1."
  minReplicas:Int
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  scaleTargetRef:io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceInput
  "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used."
  targetCPUUtilizationPercentage:Int
}
"specification of a horizontal pod autoscaler."
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecResult {
  "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas."
  maxReplicas:Int
  "lower limit for the number of pods that can be set by the autoscaler, default 1."
  minReplicas:Int
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  scaleTargetRef:io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceResult
  "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used."
  targetCPUUtilizationPercentage:Int
}
"current status of a horizontal pod autoscaler"
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusInput {
  "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU."
  currentCPUUtilizationPercentage:Int
  "current number of replicas of pods managed by this autoscaler."
  currentReplicas:Int
  "desired number of replicas of pods managed by this autoscaler."
  desiredReplicas:Int
  lastScaleTime:String
  "most recent generation observed by this autoscaler."
  observedGeneration:Int
}
"current status of a horizontal pod autoscaler"
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusResult {
  "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU."
  currentCPUUtilizationPercentage:Int
  "current number of replicas of pods managed by this autoscaler."
  currentReplicas:Int
  "desired number of replicas of pods managed by this autoscaler."
  desiredReplicas:Int
  lastScaleTime:String
  "most recent generation observed by this autoscaler."
  observedGeneration:Int
}
"Scale represents a scaling request for a resource."
input io_k8s_api_autoscaling_v1_ScaleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ScaleSpec describes the attributes of a scale subresource."
  spec:io_k8s_api_autoscaling_v1_ScaleSpecInput
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_autoscaling_v1_ScaleStatusInput
}
"Scale represents a scaling request for a resource."
type io_k8s_api_autoscaling_v1_ScaleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ScaleSpec describes the attributes of a scale subresource."
  spec:io_k8s_api_autoscaling_v1_ScaleSpecResult
  "ScaleStatus represents the current status of a scale subresource."
  status:io_k8s_api_autoscaling_v1_ScaleStatusResult
}
"ScaleSpec describes the attributes of a scale subresource."
input io_k8s_api_autoscaling_v1_ScaleSpecInput {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleSpec describes the attributes of a scale subresource."
type io_k8s_api_autoscaling_v1_ScaleSpecResult {
  "desired number of instances for the scaled object."
  replicas:Int
}
"ScaleStatus represents the current status of a scale subresource."
input io_k8s_api_autoscaling_v1_ScaleStatusInput {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:String
}
"ScaleStatus represents the current status of a scale subresource."
type io_k8s_api_autoscaling_v1_ScaleStatusResult {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:String
}
"CrossVersionObjectReference contains enough information to let you identify the referred resource."
input io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput {
  "API version of the referent"
  apiVersion:String
  "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
  kind:String
  "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
}
"CrossVersionObjectReference contains enough information to let you identify the referred resource."
type io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult {
  "API version of the referent"
  apiVersion:String
  "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
  kind:String
  "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
}
"ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set."
input io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceInput {
  "metricName is the name of the metric in question."
  metricName:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  targetAverageValue:String
  targetValue:String
}
"ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set."
type io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceResult {
  "metricName is the name of the metric in question."
  metricName:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  targetAverageValue:String
  targetValue:String
}
"ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object."
input io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusInput {
  currentAverageValue:String
  currentValue:String
  "metricName is the name of a metric used for autoscaling in metric system."
  metricName:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
"ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object."
type io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusResult {
  currentAverageValue:String
  currentValue:String
  "metricName is the name of a metric used for autoscaling in metric system."
  metricName:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
"HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point."
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionInput {
  lastTransitionTime:String
  "message is a human-readable explanation containing details about the transition"
  message:String
  "reason is the reason for the condition's last transition."
  reason:String
  "status is the status of the condition (True, False, Unknown)"
  status:String
  "type describes the current condition"
  type:String
}
"HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point."
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionResult {
  lastTransitionTime:String
  "message is a human-readable explanation containing details about the transition"
  message:String
  "reason is the reason for the condition's last transition."
  reason:String
  "status is the status of the condition (True, False, Unknown)"
  status:String
  "type describes the current condition"
  type:String
}
"HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler."
  spec:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecInput
  "HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler."
  status:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusInput
}
"HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects."
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is the list of horizontal pod autoscaler objects."
  items:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler."
  spec:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecResult
  "HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler."
  status:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusResult
}
"HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler."
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecInput {
  "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas."
  maxReplicas:Int
  "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond."
  metrics:[io_k8s_api_autoscaling_v2beta1_MetricSpecInput]
  "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod."
  minReplicas:Int
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  scaleTargetRef:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
}
"HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler."
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecResult {
  "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas."
  maxReplicas:Int
  "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond."
  metrics:[io_k8s_api_autoscaling_v2beta1_MetricSpecResult]
  "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod."
  minReplicas:Int
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  scaleTargetRef:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
}
"HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler."
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusInput {
  "conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met."
  conditions:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionInput]
  "currentMetrics is the last read state of the metrics used by this autoscaler."
  currentMetrics:[io_k8s_api_autoscaling_v2beta1_MetricStatusInput]
  "currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler."
  currentReplicas:Int
  "desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler."
  desiredReplicas:Int
  lastScaleTime:String
  "observedGeneration is the most recent generation observed by this autoscaler."
  observedGeneration:Int
}
"HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler."
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusResult {
  "conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met."
  conditions:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionResult]
  "currentMetrics is the last read state of the metrics used by this autoscaler."
  currentMetrics:[io_k8s_api_autoscaling_v2beta1_MetricStatusResult]
  "currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler."
  currentReplicas:Int
  "desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler."
  desiredReplicas:Int
  lastScaleTime:String
  "observedGeneration is the most recent generation observed by this autoscaler."
  observedGeneration:Int
}
"MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once)."
input io_k8s_api_autoscaling_v2beta1_MetricSpecInput {
  "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set."
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceInput
  "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceInput
  "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value."
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricSourceInput
  "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceInput
  "type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object."
  type:String
}
"MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once)."
type io_k8s_api_autoscaling_v2beta1_MetricSpecResult {
  "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set."
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceResult
  "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceResult
  "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value."
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricSourceResult
  "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceResult
  "type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object."
  type:String
}
"MetricStatus describes the last-read state of a single metric."
input io_k8s_api_autoscaling_v2beta1_MetricStatusInput {
  "ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object."
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusInput
  "ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusInput
  "PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricStatusInput
  "ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusInput
  "type is the type of metric source.  It will be one of \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object."
  type:String
}
"MetricStatus describes the last-read state of a single metric."
type io_k8s_api_autoscaling_v2beta1_MetricStatusResult {
  "ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object."
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusResult
  "ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusResult
  "PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricStatusResult
  "ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusResult
  "type is the type of metric source.  It will be one of \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object."
  type:String
}
"ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
input io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceInput {
  "metricName is the name of the metric in question."
  metricName:String
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
  targetValue:String
}
"ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
type io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceResult {
  "metricName is the name of the metric in question."
  metricName:String
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
  targetValue:String
}
"ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
input io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusInput {
  currentValue:String
  "metricName is the name of the metric in question."
  metricName:String
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
}
"ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
type io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusResult {
  currentValue:String
  "metricName is the name of the metric in question."
  metricName:String
  "CrossVersionObjectReference contains enough information to let you identify the referred resource."
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
}
"PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value."
input io_k8s_api_autoscaling_v2beta1_PodsMetricSourceInput {
  "metricName is the name of the metric in question"
  metricName:String
  targetAverageValue:String
}
"PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value."
type io_k8s_api_autoscaling_v2beta1_PodsMetricSourceResult {
  "metricName is the name of the metric in question"
  metricName:String
  targetAverageValue:String
}
"PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
input io_k8s_api_autoscaling_v2beta1_PodsMetricStatusInput {
  currentAverageValue:String
  "metricName is the name of the metric in question"
  metricName:String
}
"PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
type io_k8s_api_autoscaling_v2beta1_PodsMetricStatusResult {
  currentAverageValue:String
  "metricName is the name of the metric in question"
  metricName:String
}
"ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
input io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceInput {
  "name is the name of the resource in question."
  name:String
  "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods."
  targetAverageUtilization:Int
  targetAverageValue:String
}
"ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
type io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceResult {
  "name is the name of the resource in question."
  name:String
  "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods."
  targetAverageUtilization:Int
  targetAverageValue:String
}
"ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
input io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusInput {
  "currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification."
  currentAverageUtilization:Int
  currentAverageValue:String
  "name is the name of the resource in question."
  name:String
}
"ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
type io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusResult {
  "currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification."
  currentAverageUtilization:Int
  currentAverageValue:String
  "name is the name of the resource in question."
  name:String
}
"JobCondition describes current state of a job."
input io_k8s_api_batch_v1_JobConditionInput {
  lastProbeTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of job condition, Complete or Failed."
  type:String
}
"JobCondition describes current state of a job."
type io_k8s_api_batch_v1_JobConditionResult {
  lastProbeTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of job condition, Complete or Failed."
  type:String
}
"Job represents the configuration of a single job."
input io_k8s_api_batch_v1_JobInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "JobSpec describes how the job execution will look like."
  spec:io_k8s_api_batch_v1_JobSpecInput
  "JobStatus represents the current state of a Job."
  status:io_k8s_api_batch_v1_JobStatusInput
}
"JobList is a collection of jobs."
type io_k8s_api_batch_v1_JobListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is the list of Jobs."
  items:[io_k8s_api_batch_v1_JobResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Job represents the configuration of a single job."
type io_k8s_api_batch_v1_JobResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "JobSpec describes how the job execution will look like."
  spec:io_k8s_api_batch_v1_JobSpecResult
  "JobStatus represents the current state of a Job."
  status:io_k8s_api_batch_v1_JobStatusResult
}
"JobSpec describes how the job execution will look like."
input io_k8s_api_batch_v1_JobSpecInput {
  "Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer"
  activeDeadlineSeconds:Int
  "Specifies the number of retries before marking this job failed. Defaults to 6"
  backoffLimit:Int
  "Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  completions:Int
  "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector"
  manualSelector:Boolean
  "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  parallelism:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"JobSpec describes how the job execution will look like."
type io_k8s_api_batch_v1_JobSpecResult {
  "Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer"
  activeDeadlineSeconds:Int
  "Specifies the number of retries before marking this job failed. Defaults to 6"
  backoffLimit:Int
  "Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  completions:Int
  "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector"
  manualSelector:Boolean
  "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  parallelism:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"JobStatus represents the current state of a Job."
input io_k8s_api_batch_v1_JobStatusInput {
  "The number of actively running pods."
  active:Int
  completionTime:String
  "The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  conditions:[io_k8s_api_batch_v1_JobConditionInput]
  "The number of pods which reached phase Failed."
  failed:Int
  startTime:String
  "The number of pods which reached phase Succeeded."
  succeeded:Int
}
"JobStatus represents the current state of a Job."
type io_k8s_api_batch_v1_JobStatusResult {
  "The number of actively running pods."
  active:Int
  completionTime:String
  "The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
  conditions:[io_k8s_api_batch_v1_JobConditionResult]
  "The number of pods which reached phase Failed."
  failed:Int
  startTime:String
  "The number of pods which reached phase Succeeded."
  succeeded:Int
}
"CronJob represents the configuration of a single cron job."
input io_k8s_api_batch_v1beta1_CronJobInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "CronJobSpec describes how the job execution will look like and when it will actually run."
  spec:io_k8s_api_batch_v1beta1_CronJobSpecInput
  "CronJobStatus represents the current state of a cron job."
  status:io_k8s_api_batch_v1beta1_CronJobStatusInput
}
"CronJobList is a collection of cron jobs."
type io_k8s_api_batch_v1beta1_CronJobListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is the list of CronJobs."
  items:[io_k8s_api_batch_v1beta1_CronJobResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"CronJob represents the configuration of a single cron job."
type io_k8s_api_batch_v1beta1_CronJobResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "CronJobSpec describes how the job execution will look like and when it will actually run."
  spec:io_k8s_api_batch_v1beta1_CronJobSpecResult
  "CronJobStatus represents the current state of a cron job."
  status:io_k8s_api_batch_v1beta1_CronJobStatusResult
}
"CronJobSpec describes how the job execution will look like and when it will actually run."
input io_k8s_api_batch_v1beta1_CronJobSpecInput {
  "Specifies how to treat concurrent executions of a Job. Valid values are: - \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one"
  concurrencyPolicy:String
  "The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  failedJobsHistoryLimit:Int
  "JobTemplateSpec describes the data a Job should have when created from a template"
  jobTemplate:io_k8s_api_batch_v1beta1_JobTemplateSpecInput
  "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron."
  schedule:String
  "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones."
  startingDeadlineSeconds:Int
  "The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3."
  successfulJobsHistoryLimit:Int
  "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false."
  suspend:Boolean
}
"CronJobSpec describes how the job execution will look like and when it will actually run."
type io_k8s_api_batch_v1beta1_CronJobSpecResult {
  "Specifies how to treat concurrent executions of a Job. Valid values are: - \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one"
  concurrencyPolicy:String
  "The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  failedJobsHistoryLimit:Int
  "JobTemplateSpec describes the data a Job should have when created from a template"
  jobTemplate:io_k8s_api_batch_v1beta1_JobTemplateSpecResult
  "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron."
  schedule:String
  "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones."
  startingDeadlineSeconds:Int
  "The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3."
  successfulJobsHistoryLimit:Int
  "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false."
  suspend:Boolean
}
"CronJobStatus represents the current state of a cron job."
input io_k8s_api_batch_v1beta1_CronJobStatusInput {
  "A list of pointers to currently running jobs."
  active:[io_k8s_api_core_v1_ObjectReferenceInput]
  lastScheduleTime:String
}
"CronJobStatus represents the current state of a cron job."
type io_k8s_api_batch_v1beta1_CronJobStatusResult {
  "A list of pointers to currently running jobs."
  active:[io_k8s_api_core_v1_ObjectReferenceResult]
  lastScheduleTime:String
}
"JobTemplateSpec describes the data a Job should have when created from a template"
input io_k8s_api_batch_v1beta1_JobTemplateSpecInput {
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "JobSpec describes how the job execution will look like."
  spec:io_k8s_api_batch_v1_JobSpecInput
}
"JobTemplateSpec describes the data a Job should have when created from a template"
type io_k8s_api_batch_v1beta1_JobTemplateSpecResult {
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "JobSpec describes how the job execution will look like."
  spec:io_k8s_api_batch_v1_JobSpecResult
}
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionInput {
  lastUpdateTime:String
  "human readable message with details about the request state"
  message:String
  "brief reason for the request state"
  reason:String
  "request approval state, currently Approved or Denied."
  type:String
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionResult {
  lastUpdateTime:String
  "human readable message with details about the request state"
  message:String
  "brief reason for the request state"
  reason:String
  "request approval state, currently Approved or Denied."
  type:String
}
"Describes a certificate signing request"
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users."
  spec:io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecInput
  status:io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusInput
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Describes a certificate signing request"
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users."
  spec:io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecResult
  status:io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusResult
}
"This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users."
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecInput {
  "Extra information about the requesting user. See user.Info interface for details."
  extra:[StringInputProp!]
  "Group information about the requesting user. See user.Info interface for details."
  groups:[String]
  "Base64-encoded PKCS#10 CSR data"
  request:String
  "UID information about the requesting user. See user.Info interface for details."
  uid:String
  """
    allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
         https://tools.ietf.org/html/rfc5280#section-4.2.1.12
    """
  usages:[String]
  "Information about the requesting user. See user.Info interface for details."
  username:String
}
"This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users."
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecResult {
  "Extra information about the requesting user. See user.Info interface for details."
  extra:[StringResultProp!]
  "Group information about the requesting user. See user.Info interface for details."
  groups:[String]
  "Base64-encoded PKCS#10 CSR data"
  request:String
  "UID information about the requesting user. See user.Info interface for details."
  uid:String
  """
    allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
         https://tools.ietf.org/html/rfc5280#section-4.2.1.12
    """
  usages:[String]
  "Information about the requesting user. See user.Info interface for details."
  username:String
}
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusInput {
  "If request was approved, the controller will place the issued certificate here."
  certificate:String
  "Conditions applied to the request, such as approval or denial."
  conditions:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionInput]
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusResult {
  "If request was approved, the controller will place the issued certificate here."
  certificate:String
  "Conditions applied to the request, such as approval or denial."
  conditions:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionResult]
}
"""
Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
"""
input io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  fsType:String
  "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
  partition:Int
  "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  readOnly:Boolean
  "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  volumeID:String
}
"""
Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
"""
type io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  fsType:String
  "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
  partition:Int
  "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  readOnly:Boolean
  "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
  volumeID:String
}
"Affinity is a group of affinity scheduling rules."
input io_k8s_api_core_v1_AffinityInput {
  "Node affinity is a group of node affinity scheduling rules."
  nodeAffinity:io_k8s_api_core_v1_NodeAffinityInput
  "Pod affinity is a group of inter pod affinity scheduling rules."
  podAffinity:io_k8s_api_core_v1_PodAffinityInput
  "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
  podAntiAffinity:io_k8s_api_core_v1_PodAntiAffinityInput
}
"Affinity is a group of affinity scheduling rules."
type io_k8s_api_core_v1_AffinityResult {
  "Node affinity is a group of node affinity scheduling rules."
  nodeAffinity:io_k8s_api_core_v1_NodeAffinityResult
  "Pod affinity is a group of inter pod affinity scheduling rules."
  podAffinity:io_k8s_api_core_v1_PodAffinityResult
  "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
  podAntiAffinity:io_k8s_api_core_v1_PodAntiAffinityResult
}
"AttachedVolume describes a volume attached to a node"
input io_k8s_api_core_v1_AttachedVolumeInput {
  "DevicePath represents the device path where the volume should be available"
  devicePath:String
  "Name of the attached volume"
  name:String
}
"AttachedVolume describes a volume attached to a node"
type io_k8s_api_core_v1_AttachedVolumeResult {
  "DevicePath represents the device path where the volume should be available"
  devicePath:String
  "Name of the attached volume"
  name:String
}
"AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
input io_k8s_api_core_v1_AzureDiskVolumeSourceInput {
  "Host Caching mode: None, Read Only, Read Write."
  cachingMode:String
  "The Name of the data disk in the blob storage"
  diskName:String
  "The URI the data disk in the blob storage"
  diskURI:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
  kind:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
}
"AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
type io_k8s_api_core_v1_AzureDiskVolumeSourceResult {
  "Host Caching mode: None, Read Only, Read Write."
  cachingMode:String
  "The Name of the data disk in the blob storage"
  diskName:String
  "The URI the data disk in the blob storage"
  diskURI:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
  kind:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
}
"AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
input io_k8s_api_core_v1_AzureFilePersistentVolumeSourceInput {
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "the name of secret that contains Azure Storage Account Name and Key"
  secretName:String
  "the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod"
  secretNamespace:String
  "Share Name"
  shareName:String
}
"AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
type io_k8s_api_core_v1_AzureFilePersistentVolumeSourceResult {
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "the name of secret that contains Azure Storage Account Name and Key"
  secretName:String
  "the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod"
  secretNamespace:String
  "Share Name"
  shareName:String
}
"AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
input io_k8s_api_core_v1_AzureFileVolumeSourceInput {
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "the name of secret that contains Azure Storage Account Name and Key"
  secretName:String
  "Share Name"
  shareName:String
}
"AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
type io_k8s_api_core_v1_AzureFileVolumeSourceResult {
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "the name of secret that contains Azure Storage Account Name and Key"
  secretName:String
  "Share Name"
  shareName:String
}
"Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead."
input io_k8s_api_core_v1_BindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  target:io_k8s_api_core_v1_ObjectReferenceInput
}
"Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead."
type io_k8s_api_core_v1_BindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  target:io_k8s_api_core_v1_ObjectReferenceResult
}
"Represents storage that is managed by an external CSI volume driver (Beta feature)"
input io_k8s_api_core_v1_CSIPersistentVolumeSourceInput {
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  controllerPublishSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  "Driver is the name of the driver to use for this volume. Required."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\"."
  fsType:String
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  nodePublishSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  nodeStageSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  "Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write)."
  readOnly:Boolean
  "Attributes of the volume to publish."
  volumeAttributes:[StringInputProp!]
  "VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required."
  volumeHandle:String
}
"Represents storage that is managed by an external CSI volume driver (Beta feature)"
type io_k8s_api_core_v1_CSIPersistentVolumeSourceResult {
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  controllerPublishSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  "Driver is the name of the driver to use for this volume. Required."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\"."
  fsType:String
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  nodePublishSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  nodeStageSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  "Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write)."
  readOnly:Boolean
  "Attributes of the volume to publish."
  volumeAttributes:[StringResultProp!]
  "VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required."
  volumeHandle:String
}
"Adds and removes POSIX capabilities from running containers."
input io_k8s_api_core_v1_CapabilitiesInput {
  "Added capabilities"
  add:[String]
  "Removed capabilities"
  drop:[String]
}
"Adds and removes POSIX capabilities from running containers."
type io_k8s_api_core_v1_CapabilitiesResult {
  "Added capabilities"
  add:[String]
  "Removed capabilities"
  drop:[String]
}
"Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_CephFSPersistentVolumeSourceInput {
  "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  monitors:[String]
  "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
  path:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  readOnly:Boolean
  "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  secretFile:String
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  user:String
}
"Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_CephFSPersistentVolumeSourceResult {
  "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  monitors:[String]
  "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
  path:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  readOnly:Boolean
  "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  secretFile:String
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  user:String
}
"Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_CephFSVolumeSourceInput {
  "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  monitors:[String]
  "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
  path:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  readOnly:Boolean
  "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  secretFile:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  user:String
}
"Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_CephFSVolumeSourceResult {
  "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  monitors:[String]
  "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
  path:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  readOnly:Boolean
  "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  secretFile:String
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
  user:String
}
"Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_CinderPersistentVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  fsType:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  volumeID:String
}
"Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_CinderPersistentVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  fsType:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  volumeID:String
}
"Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_CinderVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  fsType:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  volumeID:String
}
"Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_CinderVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  fsType:String
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
  volumeID:String
}
"ClientIPConfig represents the configurations of Client IP based session affinity."
input io_k8s_api_core_v1_ClientIPConfigInput {
  "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours)."
  timeoutSeconds:Int
}
"ClientIPConfig represents the configurations of Client IP based session affinity."
type io_k8s_api_core_v1_ClientIPConfigResult {
  "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours)."
  timeoutSeconds:Int
}
"Information about the condition of a component."
type io_k8s_api_core_v1_ComponentConditionResult {
  "Condition error code for a component. For example, a health check error code."
  error:String
  "Message about the condition for a component. For example, information about a health check."
  message:String
  "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\"."
  status:String
  "Type of condition for a component. Valid value: \"Healthy\""
  type:String
}
"Status of all the conditions for the component as a list of ComponentStatus objects."
type io_k8s_api_core_v1_ComponentStatusListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ComponentStatus objects."
  items:[io_k8s_api_core_v1_ComponentStatusResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ComponentStatus (and ComponentStatusList) holds the cluster validation info."
type io_k8s_api_core_v1_ComponentStatusResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of component conditions observed"
  conditions:[io_k8s_api_core_v1_ComponentConditionResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"""
ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
"""
input io_k8s_api_core_v1_ConfigMapEnvSourceInput {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap must be defined"
  optional:Boolean
}
"""
ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
"""
type io_k8s_api_core_v1_ConfigMapEnvSourceResult {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap must be defined"
  optional:Boolean
}
"ConfigMap holds configuration data for pods to consume."
input io_k8s_api_core_v1_ConfigMapInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet."
  binaryData:[StringInputProp!]
  "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process."
  data:[StringInputProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
"Selects a key from a ConfigMap."
input io_k8s_api_core_v1_ConfigMapKeySelectorInput {
  "The key to select."
  key:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's key must be defined"
  optional:Boolean
}
"Selects a key from a ConfigMap."
type io_k8s_api_core_v1_ConfigMapKeySelectorResult {
  "The key to select."
  key:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's key must be defined"
  optional:Boolean
}
"ConfigMapList is a resource containing a list of ConfigMap objects."
type io_k8s_api_core_v1_ConfigMapListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of ConfigMaps."
  items:[io_k8s_api_core_v1_ConfigMapResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node."
input io_k8s_api_core_v1_ConfigMapNodeConfigSourceInput {
  "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases."
  kubeletConfigKey:String
  "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases."
  name:String
  "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases."
  namespace:String
  "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
  resourceVersion:String
  "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
  uid:String
}
"ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node."
type io_k8s_api_core_v1_ConfigMapNodeConfigSourceResult {
  "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases."
  kubeletConfigKey:String
  "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases."
  name:String
  "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases."
  namespace:String
  "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
  resourceVersion:String
  "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
  uid:String
}
"""
Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
"""
input io_k8s_api_core_v1_ConfigMapProjectionInput {
  "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathInput]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's keys must be defined"
  optional:Boolean
}
"""
Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
"""
type io_k8s_api_core_v1_ConfigMapProjectionResult {
  "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathResult]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's keys must be defined"
  optional:Boolean
}
"ConfigMap holds configuration data for pods to consume."
type io_k8s_api_core_v1_ConfigMapResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet."
  binaryData:[StringResultProp!]
  "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process."
  data:[StringResultProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"""
Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
"""
input io_k8s_api_core_v1_ConfigMapVolumeSourceInput {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathInput]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's keys must be defined"
  optional:Boolean
}
"""
Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
"""
type io_k8s_api_core_v1_ConfigMapVolumeSourceResult {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathResult]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the ConfigMap or it's keys must be defined"
  optional:Boolean
}
"Describe a container image"
input io_k8s_api_core_v1_ContainerImageInput {
  "Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]"
  names:[String]
  "The size of the image in bytes."
  sizeBytes:Int
}
"Describe a container image"
type io_k8s_api_core_v1_ContainerImageResult {
  "Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]"
  names:[String]
  "The size of the image in bytes."
  sizeBytes:Int
}
"A single application container that you want to run within a pod."
input io_k8s_api_core_v1_ContainerInput {
  "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
  args:[String]
  "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
  command:[String]
  "List of environment variables to set in the container. Cannot be updated."
  env:[io_k8s_api_core_v1_EnvVarInput]
  "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
  envFrom:[io_k8s_api_core_v1_EnvFromSourceInput]
  "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
  image:String
  "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
  imagePullPolicy:String
  "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted."
  lifecycle:io_k8s_api_core_v1_LifecycleInput
  "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
  livenessProbe:io_k8s_api_core_v1_ProbeInput
  "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
  name:String
  "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated."
  ports:[io_k8s_api_core_v1_ContainerPortInput]
  "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
  readinessProbe:io_k8s_api_core_v1_ProbeInput
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsInput
  "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence."
  securityContext:io_k8s_api_core_v1_SecurityContextInput
  "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
  stdin:Boolean
  "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
  stdinOnce:Boolean
  "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
  terminationMessagePath:String
  "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
  terminationMessagePolicy:String
  "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
  tty:Boolean
  "volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future."
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceInput]
  "Pod volumes to mount into the container's filesystem. Cannot be updated."
  volumeMounts:[io_k8s_api_core_v1_VolumeMountInput]
  "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
  workingDir:String
}
"ContainerPort represents a network port in a single container."
input io_k8s_api_core_v1_ContainerPortInput {
  "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536."
  containerPort:Int
  "What host IP to bind the external port to."
  hostIP:String
  "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
  hostPort:Int
  "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
  name:String
  "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\"."
  protocol:String
}
"ContainerPort represents a network port in a single container."
type io_k8s_api_core_v1_ContainerPortResult {
  "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536."
  containerPort:Int
  "What host IP to bind the external port to."
  hostIP:String
  "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
  hostPort:Int
  "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
  name:String
  "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\"."
  protocol:String
}
"A single application container that you want to run within a pod."
type io_k8s_api_core_v1_ContainerResult {
  "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
  args:[String]
  "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
  command:[String]
  "List of environment variables to set in the container. Cannot be updated."
  env:[io_k8s_api_core_v1_EnvVarResult]
  "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
  envFrom:[io_k8s_api_core_v1_EnvFromSourceResult]
  "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
  image:String
  "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
  imagePullPolicy:String
  "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted."
  lifecycle:io_k8s_api_core_v1_LifecycleResult
  "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
  livenessProbe:io_k8s_api_core_v1_ProbeResult
  "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
  name:String
  "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated."
  ports:[io_k8s_api_core_v1_ContainerPortResult]
  "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
  readinessProbe:io_k8s_api_core_v1_ProbeResult
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsResult
  "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence."
  securityContext:io_k8s_api_core_v1_SecurityContextResult
  "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
  stdin:Boolean
  "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
  stdinOnce:Boolean
  "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
  terminationMessagePath:String
  "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
  terminationMessagePolicy:String
  "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
  tty:Boolean
  "volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future."
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceResult]
  "Pod volumes to mount into the container's filesystem. Cannot be updated."
  volumeMounts:[io_k8s_api_core_v1_VolumeMountResult]
  "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
  workingDir:String
}
"ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
input io_k8s_api_core_v1_ContainerStateInput {
  "ContainerStateRunning is a running state of a container."
  running:io_k8s_api_core_v1_ContainerStateRunningInput
  "ContainerStateTerminated is a terminated state of a container."
  terminated:io_k8s_api_core_v1_ContainerStateTerminatedInput
  "ContainerStateWaiting is a waiting state of a container."
  waiting:io_k8s_api_core_v1_ContainerStateWaitingInput
}
"ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
type io_k8s_api_core_v1_ContainerStateResult {
  "ContainerStateRunning is a running state of a container."
  running:io_k8s_api_core_v1_ContainerStateRunningResult
  "ContainerStateTerminated is a terminated state of a container."
  terminated:io_k8s_api_core_v1_ContainerStateTerminatedResult
  "ContainerStateWaiting is a waiting state of a container."
  waiting:io_k8s_api_core_v1_ContainerStateWaitingResult
}
"ContainerStateRunning is a running state of a container."
input io_k8s_api_core_v1_ContainerStateRunningInput {
  startedAt:String
}
"ContainerStateRunning is a running state of a container."
type io_k8s_api_core_v1_ContainerStateRunningResult {
  startedAt:String
}
"ContainerStateTerminated is a terminated state of a container."
input io_k8s_api_core_v1_ContainerStateTerminatedInput {
  "Container's ID in the format 'docker://<container_id>'"
  containerID:String
  "Exit status from the last termination of the container"
  exitCode:Int
  finishedAt:String
  "Message regarding the last termination of the container"
  message:String
  "(brief) reason from the last termination of the container"
  reason:String
  "Signal from the last termination of the container"
  signal:Int
  startedAt:String
}
"ContainerStateTerminated is a terminated state of a container."
type io_k8s_api_core_v1_ContainerStateTerminatedResult {
  "Container's ID in the format 'docker://<container_id>'"
  containerID:String
  "Exit status from the last termination of the container"
  exitCode:Int
  finishedAt:String
  "Message regarding the last termination of the container"
  message:String
  "(brief) reason from the last termination of the container"
  reason:String
  "Signal from the last termination of the container"
  signal:Int
  startedAt:String
}
"ContainerStateWaiting is a waiting state of a container."
input io_k8s_api_core_v1_ContainerStateWaitingInput {
  "Message regarding why the container is not yet running."
  message:String
  "(brief) reason the container is not yet running."
  reason:String
}
"ContainerStateWaiting is a waiting state of a container."
type io_k8s_api_core_v1_ContainerStateWaitingResult {
  "Message regarding why the container is not yet running."
  message:String
  "(brief) reason the container is not yet running."
  reason:String
}
"ContainerStatus contains details for the current status of this container."
input io_k8s_api_core_v1_ContainerStatusInput {
  "Container's ID in the format 'docker://<container_id>'."
  containerID:String
  "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images"
  image:String
  "ImageID of the container's image."
  imageID:String
  "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
  lastState:io_k8s_api_core_v1_ContainerStateInput
  "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated."
  name:String
  "Specifies whether the container has passed its readiness probe."
  ready:Boolean
  "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC."
  restartCount:Int
  "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
  state:io_k8s_api_core_v1_ContainerStateInput
}
"ContainerStatus contains details for the current status of this container."
type io_k8s_api_core_v1_ContainerStatusResult {
  "Container's ID in the format 'docker://<container_id>'."
  containerID:String
  "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images"
  image:String
  "ImageID of the container's image."
  imageID:String
  "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
  lastState:io_k8s_api_core_v1_ContainerStateResult
  "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated."
  name:String
  "Specifies whether the container has passed its readiness probe."
  ready:Boolean
  "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC."
  restartCount:Int
  "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting."
  state:io_k8s_api_core_v1_ContainerStateResult
}
"DaemonEndpoint contains information about a single Daemon endpoint."
input io_k8s_api_core_v1_DaemonEndpointInput {
  "Port number of the given endpoint."
  Port:Int
}
"DaemonEndpoint contains information about a single Daemon endpoint."
type io_k8s_api_core_v1_DaemonEndpointResult {
  "Port number of the given endpoint."
  Port:Int
}
"Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode."
input io_k8s_api_core_v1_DownwardAPIProjectionInput {
  "Items is a list of DownwardAPIVolume file"
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileInput]
}
"Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode."
type io_k8s_api_core_v1_DownwardAPIProjectionResult {
  "Items is a list of DownwardAPIVolume file"
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileResult]
}
"DownwardAPIVolumeFile represents information to create the file containing the pod field"
input io_k8s_api_core_v1_DownwardAPIVolumeFileInput {
  "ObjectFieldSelector selects an APIVersioned field of an object."
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorInput
  "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  mode:Int
  "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
  path:String
  "ResourceFieldSelector represents container resources (cpu, memory) and their output format"
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorInput
}
"DownwardAPIVolumeFile represents information to create the file containing the pod field"
type io_k8s_api_core_v1_DownwardAPIVolumeFileResult {
  "ObjectFieldSelector selects an APIVersioned field of an object."
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorResult
  "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  mode:Int
  "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
  path:String
  "ResourceFieldSelector represents container resources (cpu, memory) and their output format"
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorResult
}
"DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_DownwardAPIVolumeSourceInput {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "Items is a list of downward API volume file"
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileInput]
}
"DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_DownwardAPIVolumeSourceResult {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "Items is a list of downward API volume file"
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileResult]
}
"Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_EmptyDirVolumeSourceInput {
  "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
  medium:String
  sizeLimit:String
}
"Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_EmptyDirVolumeSourceResult {
  "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
  medium:String
  sizeLimit:String
}
"EndpointAddress is a tuple that describes single IP address."
input io_k8s_api_core_v1_EndpointAddressInput {
  "The Hostname of this endpoint"
  hostname:String
  "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready."
  ip:String
  "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
  nodeName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  targetRef:io_k8s_api_core_v1_ObjectReferenceInput
}
"EndpointAddress is a tuple that describes single IP address."
type io_k8s_api_core_v1_EndpointAddressResult {
  "The Hostname of this endpoint"
  hostname:String
  "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready."
  ip:String
  "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
  nodeName:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  targetRef:io_k8s_api_core_v1_ObjectReferenceResult
}
"EndpointPort is a tuple that describes a single port."
input io_k8s_api_core_v1_EndpointPortInput {
  "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined."
  name:String
  "The port number of the endpoint."
  port:Int
  "The IP protocol for this port. Must be UDP or TCP. Default is TCP."
  protocol:String
}
"EndpointPort is a tuple that describes a single port."
type io_k8s_api_core_v1_EndpointPortResult {
  "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined."
  name:String
  "The port number of the endpoint."
  port:Int
  "The IP protocol for this port. Must be UDP or TCP. Default is TCP."
  protocol:String
}
"""
EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
  {
    Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
    Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
  }
The resulting set of endpoints can be viewed as:
    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
    b: [ 10.10.1.1:309, 10.10.2.2:309 ]
"""
input io_k8s_api_core_v1_EndpointSubsetInput {
  "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize."
  addresses:[io_k8s_api_core_v1_EndpointAddressInput]
  "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check."
  notReadyAddresses:[io_k8s_api_core_v1_EndpointAddressInput]
  "Port numbers available on the related IP addresses."
  ports:[io_k8s_api_core_v1_EndpointPortInput]
}
"""
EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
  {
    Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
    Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
  }
The resulting set of endpoints can be viewed as:
    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
    b: [ 10.10.1.1:309, 10.10.2.2:309 ]
"""
type io_k8s_api_core_v1_EndpointSubsetResult {
  "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize."
  addresses:[io_k8s_api_core_v1_EndpointAddressResult]
  "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check."
  notReadyAddresses:[io_k8s_api_core_v1_EndpointAddressResult]
  "Port numbers available on the related IP addresses."
  ports:[io_k8s_api_core_v1_EndpointPortResult]
}
"""
Endpoints is a collection of endpoints that implement the actual service. Example:
  Name: "mysvc",
  Subsets: [
    {
      Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
      Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
    },
    {
      Addresses: [{"ip": "10.10.3.3"}],
      Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
    },
 ]
"""
input io_k8s_api_core_v1_EndpointsInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service."
  subsets:[io_k8s_api_core_v1_EndpointSubsetInput]
}
"EndpointsList is a list of endpoints."
type io_k8s_api_core_v1_EndpointsListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of endpoints."
  items:[io_k8s_api_core_v1_EndpointsResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
Endpoints is a collection of endpoints that implement the actual service. Example:
  Name: "mysvc",
  Subsets: [
    {
      Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
      Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
    },
    {
      Addresses: [{"ip": "10.10.3.3"}],
      Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
    },
 ]
"""
type io_k8s_api_core_v1_EndpointsResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service."
  subsets:[io_k8s_api_core_v1_EndpointSubsetResult]
}
"EnvFromSource represents the source of a set of ConfigMaps"
input io_k8s_api_core_v1_EnvFromSourceInput {
  """
    ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
    
    The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
    """
  configMapRef:io_k8s_api_core_v1_ConfigMapEnvSourceInput
  "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
  prefix:String
  """
    SecretEnvSource selects a Secret to populate the environment variables with.
    
    The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
    """
  secretRef:io_k8s_api_core_v1_SecretEnvSourceInput
}
"EnvFromSource represents the source of a set of ConfigMaps"
type io_k8s_api_core_v1_EnvFromSourceResult {
  """
    ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
    
    The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
    """
  configMapRef:io_k8s_api_core_v1_ConfigMapEnvSourceResult
  "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
  prefix:String
  """
    SecretEnvSource selects a Secret to populate the environment variables with.
    
    The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
    """
  secretRef:io_k8s_api_core_v1_SecretEnvSourceResult
}
"EnvVar represents an environment variable present in a Container."
input io_k8s_api_core_v1_EnvVarInput {
  "Name of the environment variable. Must be a C_IDENTIFIER."
  name:String
  "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
  value:String
  "EnvVarSource represents a source for the value of an EnvVar."
  valueFrom:io_k8s_api_core_v1_EnvVarSourceInput
}
"EnvVar represents an environment variable present in a Container."
type io_k8s_api_core_v1_EnvVarResult {
  "Name of the environment variable. Must be a C_IDENTIFIER."
  name:String
  "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
  value:String
  "EnvVarSource represents a source for the value of an EnvVar."
  valueFrom:io_k8s_api_core_v1_EnvVarSourceResult
}
"EnvVarSource represents a source for the value of an EnvVar."
input io_k8s_api_core_v1_EnvVarSourceInput {
  "Selects a key from a ConfigMap."
  configMapKeyRef:io_k8s_api_core_v1_ConfigMapKeySelectorInput
  "ObjectFieldSelector selects an APIVersioned field of an object."
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorInput
  "ResourceFieldSelector represents container resources (cpu, memory) and their output format"
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorInput
  "SecretKeySelector selects a key of a Secret."
  secretKeyRef:io_k8s_api_core_v1_SecretKeySelectorInput
}
"EnvVarSource represents a source for the value of an EnvVar."
type io_k8s_api_core_v1_EnvVarSourceResult {
  "Selects a key from a ConfigMap."
  configMapKeyRef:io_k8s_api_core_v1_ConfigMapKeySelectorResult
  "ObjectFieldSelector selects an APIVersioned field of an object."
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorResult
  "ResourceFieldSelector represents container resources (cpu, memory) and their output format"
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorResult
  "SecretKeySelector selects a key of a Secret."
  secretKeyRef:io_k8s_api_core_v1_SecretKeySelectorResult
}
"Event is a report of an event somewhere in the cluster."
input io_k8s_api_core_v1_EventInput {
  "What action was taken/failed regarding to the Regarding object."
  action:String
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "The number of times this event has occurred."
  count:Int
  eventTime:String
  firstTimestamp:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  involvedObject:io_k8s_api_core_v1_ObjectReferenceInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  lastTimestamp:String
  "A human-readable description of the status of this operation."
  message:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "This should be a short, machine understandable string that gives the reason for the transition into the object's current status."
  reason:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  related:io_k8s_api_core_v1_ObjectReferenceInput
  "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`."
  reportingComponent:String
  "ID of the controller instance, e.g. `kubelet-xyzf`."
  reportingInstance:String
  "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
  series:io_k8s_api_core_v1_EventSeriesInput
  "EventSource contains information for an event."
  source:io_k8s_api_core_v1_EventSourceInput
  "Type of this event (Normal, Warning), new types could be added in the future"
  type:String
}
"EventList is a list of events."
type io_k8s_api_core_v1_EventListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of events"
  items:[io_k8s_api_core_v1_EventResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Event is a report of an event somewhere in the cluster."
type io_k8s_api_core_v1_EventResult {
  "What action was taken/failed regarding to the Regarding object."
  action:String
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "The number of times this event has occurred."
  count:Int
  eventTime:String
  firstTimestamp:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  involvedObject:io_k8s_api_core_v1_ObjectReferenceResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  lastTimestamp:String
  "A human-readable description of the status of this operation."
  message:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "This should be a short, machine understandable string that gives the reason for the transition into the object's current status."
  reason:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  related:io_k8s_api_core_v1_ObjectReferenceResult
  "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`."
  reportingComponent:String
  "ID of the controller instance, e.g. `kubelet-xyzf`."
  reportingInstance:String
  "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
  series:io_k8s_api_core_v1_EventSeriesResult
  "EventSource contains information for an event."
  source:io_k8s_api_core_v1_EventSourceResult
  "Type of this event (Normal, Warning), new types could be added in the future"
  type:String
}
"EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
input io_k8s_api_core_v1_EventSeriesInput {
  "Number of occurrences in this series up to the last heartbeat time"
  count:Int
  lastObservedTime:String
  "State of this Series: Ongoing or Finished"
  state:String
}
"EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
type io_k8s_api_core_v1_EventSeriesResult {
  "Number of occurrences in this series up to the last heartbeat time"
  count:Int
  lastObservedTime:String
  "State of this Series: Ongoing or Finished"
  state:String
}
"EventSource contains information for an event."
input io_k8s_api_core_v1_EventSourceInput {
  "Component from which the event is generated."
  component:String
  "Node name on which the event is generated."
  host:String
}
"EventSource contains information for an event."
type io_k8s_api_core_v1_EventSourceResult {
  "Component from which the event is generated."
  component:String
  "Node name on which the event is generated."
  host:String
}
"ExecAction describes a \"run in container\" action."
input io_k8s_api_core_v1_ExecActionInput {
  "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
  command:[String]
}
"ExecAction describes a \"run in container\" action."
type io_k8s_api_core_v1_ExecActionResult {
  "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
  command:[String]
}
"Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_FCVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Optional: FC target lun number"
  lun:Int
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "Optional: FC target worldwide names (WWNs)"
  targetWWNs:[String]
  "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
  wwids:[String]
}
"Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_FCVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Optional: FC target lun number"
  lun:Int
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "Optional: FC target worldwide names (WWNs)"
  targetWWNs:[String]
  "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
  wwids:[String]
}
"FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin."
input io_k8s_api_core_v1_FlexPersistentVolumeSourceInput {
  "Driver is the name of the driver to use for this volume."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
  fsType:String
  "Optional: Extra command options if any."
  options:[StringInputProp!]
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
}
"FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin."
type io_k8s_api_core_v1_FlexPersistentVolumeSourceResult {
  "Driver is the name of the driver to use for this volume."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
  fsType:String
  "Optional: Extra command options if any."
  options:[StringResultProp!]
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
}
"FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
input io_k8s_api_core_v1_FlexVolumeSourceInput {
  "Driver is the name of the driver to use for this volume."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
  fsType:String
  "Optional: Extra command options if any."
  options:[StringInputProp!]
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
}
"FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
type io_k8s_api_core_v1_FlexVolumeSourceResult {
  "Driver is the name of the driver to use for this volume."
  driver:String
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
  fsType:String
  "Optional: Extra command options if any."
  options:[StringResultProp!]
  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
}
"Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_FlockerVolumeSourceInput {
  "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated"
  datasetName:String
  "UUID of the dataset. This is unique identifier of a Flocker dataset"
  datasetUUID:String
}
"Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_FlockerVolumeSourceResult {
  "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated"
  datasetName:String
  "UUID of the dataset. This is unique identifier of a Flocker dataset"
  datasetUUID:String
}
"""
Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
"""
input io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  fsType:String
  "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  partition:Int
  "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  pdName:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  readOnly:Boolean
}
"""
Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
"""
type io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  fsType:String
  "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  partition:Int
  "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  pdName:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
  readOnly:Boolean
}
"""
Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
"""
input io_k8s_api_core_v1_GitRepoVolumeSourceInput {
  "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
  directory:String
  "Repository URL"
  repository:String
  "Commit hash for the specified revision."
  revision:String
}
"""
Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
"""
type io_k8s_api_core_v1_GitRepoVolumeSourceResult {
  "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
  directory:String
  "Repository URL"
  repository:String
  "Commit hash for the specified revision."
  revision:String
}
"Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_GlusterfsVolumeSourceInput {
  "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  endpoints:String
  "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  path:String
  "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  readOnly:Boolean
}
"Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_GlusterfsVolumeSourceResult {
  "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  endpoints:String
  "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  path:String
  "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
  readOnly:Boolean
}
"HTTPGetAction describes an action based on HTTP Get requests."
input io_k8s_api_core_v1_HTTPGetActionInput {
  "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
  host:String
  "Custom headers to set in the request. HTTP allows repeated headers."
  httpHeaders:[io_k8s_api_core_v1_HTTPHeaderInput]
  "Path to access on the HTTP server."
  path:String
  port:String
  "Scheme to use for connecting to the host. Defaults to HTTP."
  scheme:String
}
"HTTPGetAction describes an action based on HTTP Get requests."
type io_k8s_api_core_v1_HTTPGetActionResult {
  "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
  host:String
  "Custom headers to set in the request. HTTP allows repeated headers."
  httpHeaders:[io_k8s_api_core_v1_HTTPHeaderResult]
  "Path to access on the HTTP server."
  path:String
  port:String
  "Scheme to use for connecting to the host. Defaults to HTTP."
  scheme:String
}
"HTTPHeader describes a custom header to be used in HTTP probes"
input io_k8s_api_core_v1_HTTPHeaderInput {
  "The header field name"
  name:String
  "The header field value"
  value:String
}
"HTTPHeader describes a custom header to be used in HTTP probes"
type io_k8s_api_core_v1_HTTPHeaderResult {
  "The header field name"
  name:String
  "The header field value"
  value:String
}
"Handler defines a specific action that should be taken"
input io_k8s_api_core_v1_HandlerInput {
  "ExecAction describes a \"run in container\" action."
  exec:io_k8s_api_core_v1_ExecActionInput
  "HTTPGetAction describes an action based on HTTP Get requests."
  httpGet:io_k8s_api_core_v1_HTTPGetActionInput
  "TCPSocketAction describes an action based on opening a socket"
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionInput
}
"Handler defines a specific action that should be taken"
type io_k8s_api_core_v1_HandlerResult {
  "ExecAction describes a \"run in container\" action."
  exec:io_k8s_api_core_v1_ExecActionResult
  "HTTPGetAction describes an action based on HTTP Get requests."
  httpGet:io_k8s_api_core_v1_HTTPGetActionResult
  "TCPSocketAction describes an action based on opening a socket"
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionResult
}
"HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file."
input io_k8s_api_core_v1_HostAliasInput {
  "Hostnames for the above IP address."
  hostnames:[String]
  "IP address of the host file entry."
  ip:String
}
"HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file."
type io_k8s_api_core_v1_HostAliasResult {
  "Hostnames for the above IP address."
  hostnames:[String]
  "IP address of the host file entry."
  ip:String
}
"Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_HostPathVolumeSourceInput {
  "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
  path:String
  "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
  type:String
}
"Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_HostPathVolumeSourceResult {
  "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
  path:String
  "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
  type:String
}
"ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_ISCSIPersistentVolumeSourceInput {
  "whether support iSCSI Discovery CHAP authentication"
  chapAuthDiscovery:Boolean
  "whether support iSCSI Session CHAP authentication"
  chapAuthSession:Boolean
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
  fsType:String
  "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection."
  initiatorName:String
  "Target iSCSI Qualified Name."
  iqn:String
  "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."
  iscsiInterface:String
  "iSCSI Target Lun number."
  lun:Int
  "iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  portals:[String]
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  targetPortal:String
}
"ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_ISCSIPersistentVolumeSourceResult {
  "whether support iSCSI Discovery CHAP authentication"
  chapAuthDiscovery:Boolean
  "whether support iSCSI Session CHAP authentication"
  chapAuthSession:Boolean
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
  fsType:String
  "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection."
  initiatorName:String
  "Target iSCSI Qualified Name."
  iqn:String
  "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."
  iscsiInterface:String
  "iSCSI Target Lun number."
  lun:Int
  "iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  portals:[String]
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  targetPortal:String
}
"Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_ISCSIVolumeSourceInput {
  "whether support iSCSI Discovery CHAP authentication"
  chapAuthDiscovery:Boolean
  "whether support iSCSI Session CHAP authentication"
  chapAuthSession:Boolean
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
  fsType:String
  "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection."
  initiatorName:String
  "Target iSCSI Qualified Name."
  iqn:String
  "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."
  iscsiInterface:String
  "iSCSI Target Lun number."
  lun:Int
  "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  portals:[String]
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  targetPortal:String
}
"Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_ISCSIVolumeSourceResult {
  "whether support iSCSI Discovery CHAP authentication"
  chapAuthDiscovery:Boolean
  "whether support iSCSI Session CHAP authentication"
  chapAuthSession:Boolean
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
  fsType:String
  "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection."
  initiatorName:String
  "Target iSCSI Qualified Name."
  iqn:String
  "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."
  iscsiInterface:String
  "iSCSI Target Lun number."
  lun:Int
  "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  portals:[String]
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
  targetPortal:String
}
"Maps a string key to a path within a volume."
input io_k8s_api_core_v1_KeyToPathInput {
  "The key to project."
  key:String
  "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  mode:Int
  "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
  path:String
}
"Maps a string key to a path within a volume."
type io_k8s_api_core_v1_KeyToPathResult {
  "The key to project."
  key:String
  "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  mode:Int
  "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
  path:String
}
"Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted."
input io_k8s_api_core_v1_LifecycleInput {
  "Handler defines a specific action that should be taken"
  postStart:io_k8s_api_core_v1_HandlerInput
  "Handler defines a specific action that should be taken"
  preStop:io_k8s_api_core_v1_HandlerInput
}
"Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted."
type io_k8s_api_core_v1_LifecycleResult {
  "Handler defines a specific action that should be taken"
  postStart:io_k8s_api_core_v1_HandlerResult
  "Handler defines a specific action that should be taken"
  preStop:io_k8s_api_core_v1_HandlerResult
}
"LimitRange sets resource usage limits for each kind of resource in a Namespace."
input io_k8s_api_core_v1_LimitRangeInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "LimitRangeSpec defines a min/max usage limit for resources that match on kind."
  spec:io_k8s_api_core_v1_LimitRangeSpecInput
}
"LimitRangeItem defines a min/max usage limit for any resource that matches on kind."
input io_k8s_api_core_v1_LimitRangeItemInput {
  "Default resource requirement limit value by resource name if resource limit is omitted."
  default:[StringInputProp!]
  "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted."
  defaultRequest:[StringInputProp!]
  "Max usage constraints on this kind by resource name."
  max:[StringInputProp!]
  "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource."
  maxLimitRequestRatio:[StringInputProp!]
  "Min usage constraints on this kind by resource name."
  min:[StringInputProp!]
  "Type of resource that this limit applies to."
  type:String
}
"LimitRangeItem defines a min/max usage limit for any resource that matches on kind."
type io_k8s_api_core_v1_LimitRangeItemResult {
  "Default resource requirement limit value by resource name if resource limit is omitted."
  default:[StringResultProp!]
  "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted."
  defaultRequest:[StringResultProp!]
  "Max usage constraints on this kind by resource name."
  max:[StringResultProp!]
  "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource."
  maxLimitRequestRatio:[StringResultProp!]
  "Min usage constraints on this kind by resource name."
  min:[StringResultProp!]
  "Type of resource that this limit applies to."
  type:String
}
"LimitRangeList is a list of LimitRange items."
type io_k8s_api_core_v1_LimitRangeListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
  items:[io_k8s_api_core_v1_LimitRangeResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"LimitRange sets resource usage limits for each kind of resource in a Namespace."
type io_k8s_api_core_v1_LimitRangeResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "LimitRangeSpec defines a min/max usage limit for resources that match on kind."
  spec:io_k8s_api_core_v1_LimitRangeSpecResult
}
"LimitRangeSpec defines a min/max usage limit for resources that match on kind."
input io_k8s_api_core_v1_LimitRangeSpecInput {
  "Limits is the list of LimitRangeItem objects that are enforced."
  limits:[io_k8s_api_core_v1_LimitRangeItemInput]
}
"LimitRangeSpec defines a min/max usage limit for resources that match on kind."
type io_k8s_api_core_v1_LimitRangeSpecResult {
  "Limits is the list of LimitRangeItem objects that are enforced."
  limits:[io_k8s_api_core_v1_LimitRangeItemResult]
}
"LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point."
input io_k8s_api_core_v1_LoadBalancerIngressInput {
  "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)"
  hostname:String
  "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)"
  ip:String
}
"LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point."
type io_k8s_api_core_v1_LoadBalancerIngressResult {
  "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)"
  hostname:String
  "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)"
  ip:String
}
"LoadBalancerStatus represents the status of a load-balancer."
input io_k8s_api_core_v1_LoadBalancerStatusInput {
  "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points."
  ingress:[io_k8s_api_core_v1_LoadBalancerIngressInput]
}
"LoadBalancerStatus represents the status of a load-balancer."
type io_k8s_api_core_v1_LoadBalancerStatusResult {
  "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points."
  ingress:[io_k8s_api_core_v1_LoadBalancerIngressResult]
}
"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
input io_k8s_api_core_v1_LocalObjectReferenceInput {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
}
"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
type io_k8s_api_core_v1_LocalObjectReferenceResult {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
}
"Local represents directly-attached storage with node affinity (Beta feature)"
input io_k8s_api_core_v1_LocalVolumeSourceInput {
  "The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...). Directories can be represented only by PersistentVolume with VolumeMode=Filesystem. Block devices can be represented only by VolumeMode=Block, which also requires the BlockVolume alpha feature gate to be enabled."
  path:String
}
"Local represents directly-attached storage with node affinity (Beta feature)"
type io_k8s_api_core_v1_LocalVolumeSourceResult {
  "The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...). Directories can be represented only by PersistentVolume with VolumeMode=Filesystem. Block devices can be represented only by VolumeMode=Block, which also requires the BlockVolume alpha feature gate to be enabled."
  path:String
}
"Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_NFSVolumeSourceInput {
  "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  path:String
  "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  readOnly:Boolean
  "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  server:String
}
"Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_NFSVolumeSourceResult {
  "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  path:String
  "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  readOnly:Boolean
  "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
  server:String
}
"Namespace provides a scope for Names. Use of multiple namespaces is optional."
input io_k8s_api_core_v1_NamespaceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "NamespaceSpec describes the attributes on a Namespace."
  spec:io_k8s_api_core_v1_NamespaceSpecInput
  "NamespaceStatus is information about the current status of a Namespace."
  status:io_k8s_api_core_v1_NamespaceStatusInput
}
"NamespaceList is a list of Namespaces."
type io_k8s_api_core_v1_NamespaceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
  items:[io_k8s_api_core_v1_NamespaceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Namespace provides a scope for Names. Use of multiple namespaces is optional."
type io_k8s_api_core_v1_NamespaceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "NamespaceSpec describes the attributes on a Namespace."
  spec:io_k8s_api_core_v1_NamespaceSpecResult
  "NamespaceStatus is information about the current status of a Namespace."
  status:io_k8s_api_core_v1_NamespaceStatusResult
}
"NamespaceSpec describes the attributes on a Namespace."
input io_k8s_api_core_v1_NamespaceSpecInput {
  "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
  finalizers:[String]
}
"NamespaceSpec describes the attributes on a Namespace."
type io_k8s_api_core_v1_NamespaceSpecResult {
  "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
  finalizers:[String]
}
"NamespaceStatus is information about the current status of a Namespace."
input io_k8s_api_core_v1_NamespaceStatusInput {
  "Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
  phase:String
}
"NamespaceStatus is information about the current status of a Namespace."
type io_k8s_api_core_v1_NamespaceStatusResult {
  "Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
  phase:String
}
"NodeAddress contains information for the node's address."
input io_k8s_api_core_v1_NodeAddressInput {
  "The node address."
  address:String
  "Node address type, one of Hostname, ExternalIP or InternalIP."
  type:String
}
"NodeAddress contains information for the node's address."
type io_k8s_api_core_v1_NodeAddressResult {
  "The node address."
  address:String
  "Node address type, one of Hostname, ExternalIP or InternalIP."
  type:String
}
"Node affinity is a group of node affinity scheduling rules."
input io_k8s_api_core_v1_NodeAffinityInput {
  "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PreferredSchedulingTermInput]
  "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
  requiredDuringSchedulingIgnoredDuringExecution:io_k8s_api_core_v1_NodeSelectorInput
}
"Node affinity is a group of node affinity scheduling rules."
type io_k8s_api_core_v1_NodeAffinityResult {
  "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PreferredSchedulingTermResult]
  "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
  requiredDuringSchedulingIgnoredDuringExecution:io_k8s_api_core_v1_NodeSelectorResult
}
"NodeCondition contains condition information for a node."
input io_k8s_api_core_v1_NodeConditionInput {
  lastHeartbeatTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of node condition."
  type:String
}
"NodeCondition contains condition information for a node."
type io_k8s_api_core_v1_NodeConditionResult {
  lastHeartbeatTime:String
  lastTransitionTime:String
  "Human readable message indicating details about last transition."
  message:String
  "(brief) reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of node condition."
  type:String
}
"NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
input io_k8s_api_core_v1_NodeConfigSourceInput {
  "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node."
  configMap:io_k8s_api_core_v1_ConfigMapNodeConfigSourceInput
}
"NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
type io_k8s_api_core_v1_NodeConfigSourceResult {
  "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node."
  configMap:io_k8s_api_core_v1_ConfigMapNodeConfigSourceResult
}
"NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource."
input io_k8s_api_core_v1_NodeConfigStatusInput {
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  active:io_k8s_api_core_v1_NodeConfigSourceInput
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  assigned:io_k8s_api_core_v1_NodeConfigSourceInput
  "Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions."
  error:String
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  lastKnownGood:io_k8s_api_core_v1_NodeConfigSourceInput
}
"NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource."
type io_k8s_api_core_v1_NodeConfigStatusResult {
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  active:io_k8s_api_core_v1_NodeConfigSourceResult
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  assigned:io_k8s_api_core_v1_NodeConfigSourceResult
  "Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions."
  error:String
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  lastKnownGood:io_k8s_api_core_v1_NodeConfigSourceResult
}
"NodeDaemonEndpoints lists ports opened by daemons running on the Node."
input io_k8s_api_core_v1_NodeDaemonEndpointsInput {
  "DaemonEndpoint contains information about a single Daemon endpoint."
  kubeletEndpoint:io_k8s_api_core_v1_DaemonEndpointInput
}
"NodeDaemonEndpoints lists ports opened by daemons running on the Node."
type io_k8s_api_core_v1_NodeDaemonEndpointsResult {
  "DaemonEndpoint contains information about a single Daemon endpoint."
  kubeletEndpoint:io_k8s_api_core_v1_DaemonEndpointResult
}
"Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd)."
input io_k8s_api_core_v1_NodeInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "NodeSpec describes the attributes that a node is created with."
  spec:io_k8s_api_core_v1_NodeSpecInput
  "NodeStatus is information about the current status of a node."
  status:io_k8s_api_core_v1_NodeStatusInput
}
"NodeList is the whole list of all Nodes which have been registered with master."
type io_k8s_api_core_v1_NodeListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of nodes"
  items:[io_k8s_api_core_v1_NodeResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd)."
type io_k8s_api_core_v1_NodeResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "NodeSpec describes the attributes that a node is created with."
  spec:io_k8s_api_core_v1_NodeSpecResult
  "NodeStatus is information about the current status of a node."
  status:io_k8s_api_core_v1_NodeStatusResult
}
"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
input io_k8s_api_core_v1_NodeSelectorInput {
  "Required. A list of node selector terms. The terms are ORed."
  nodeSelectorTerms:[io_k8s_api_core_v1_NodeSelectorTermInput]
}
"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
input io_k8s_api_core_v1_NodeSelectorRequirementInput {
  "The label key that the selector applies to."
  key:String
  "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
  operator:String
  "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
  values:[String]
}
"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
type io_k8s_api_core_v1_NodeSelectorRequirementResult {
  "The label key that the selector applies to."
  key:String
  "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
  operator:String
  "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
  values:[String]
}
"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
type io_k8s_api_core_v1_NodeSelectorResult {
  "Required. A list of node selector terms. The terms are ORed."
  nodeSelectorTerms:[io_k8s_api_core_v1_NodeSelectorTermResult]
}
"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
input io_k8s_api_core_v1_NodeSelectorTermInput {
  "A list of node selector requirements by node's labels."
  matchExpressions:[io_k8s_api_core_v1_NodeSelectorRequirementInput]
  "A list of node selector requirements by node's fields."
  matchFields:[io_k8s_api_core_v1_NodeSelectorRequirementInput]
}
"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
type io_k8s_api_core_v1_NodeSelectorTermResult {
  "A list of node selector requirements by node's labels."
  matchExpressions:[io_k8s_api_core_v1_NodeSelectorRequirementResult]
  "A list of node selector requirements by node's fields."
  matchFields:[io_k8s_api_core_v1_NodeSelectorRequirementResult]
}
"NodeSpec describes the attributes that a node is created with."
input io_k8s_api_core_v1_NodeSpecInput {
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  configSource:io_k8s_api_core_v1_NodeConfigSourceInput
  "Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966"
  externalID:String
  "PodCIDR represents the pod IP range assigned to the node."
  podCIDR:String
  "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>"
  providerID:String
  "If specified, the node's taints."
  taints:[io_k8s_api_core_v1_TaintInput]
  "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration"
  unschedulable:Boolean
}
"NodeSpec describes the attributes that a node is created with."
type io_k8s_api_core_v1_NodeSpecResult {
  "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil."
  configSource:io_k8s_api_core_v1_NodeConfigSourceResult
  "Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966"
  externalID:String
  "PodCIDR represents the pod IP range assigned to the node."
  podCIDR:String
  "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>"
  providerID:String
  "If specified, the node's taints."
  taints:[io_k8s_api_core_v1_TaintResult]
  "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration"
  unschedulable:Boolean
}
"NodeStatus is information about the current status of a node."
input io_k8s_api_core_v1_NodeStatusInput {
  "List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses"
  addresses:[io_k8s_api_core_v1_NodeAddressInput]
  "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity."
  allocatable:[StringInputProp!]
  "Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
  capacity:[StringInputProp!]
  "Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition"
  conditions:[io_k8s_api_core_v1_NodeConditionInput]
  "NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource."
  config:io_k8s_api_core_v1_NodeConfigStatusInput
  "NodeDaemonEndpoints lists ports opened by daemons running on the Node."
  daemonEndpoints:io_k8s_api_core_v1_NodeDaemonEndpointsInput
  "List of container images on this node"
  images:[io_k8s_api_core_v1_ContainerImageInput]
  "NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
  nodeInfo:io_k8s_api_core_v1_NodeSystemInfoInput
  "NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated."
  phase:String
  "List of volumes that are attached to the node."
  volumesAttached:[io_k8s_api_core_v1_AttachedVolumeInput]
  "List of attachable volumes in use (mounted) by the node."
  volumesInUse:[String]
}
"NodeStatus is information about the current status of a node."
type io_k8s_api_core_v1_NodeStatusResult {
  "List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses"
  addresses:[io_k8s_api_core_v1_NodeAddressResult]
  "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity."
  allocatable:[StringResultProp!]
  "Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
  capacity:[StringResultProp!]
  "Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition"
  conditions:[io_k8s_api_core_v1_NodeConditionResult]
  "NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource."
  config:io_k8s_api_core_v1_NodeConfigStatusResult
  "NodeDaemonEndpoints lists ports opened by daemons running on the Node."
  daemonEndpoints:io_k8s_api_core_v1_NodeDaemonEndpointsResult
  "List of container images on this node"
  images:[io_k8s_api_core_v1_ContainerImageResult]
  "NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
  nodeInfo:io_k8s_api_core_v1_NodeSystemInfoResult
  "NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated."
  phase:String
  "List of volumes that are attached to the node."
  volumesAttached:[io_k8s_api_core_v1_AttachedVolumeResult]
  "List of attachable volumes in use (mounted) by the node."
  volumesInUse:[String]
}
"NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
input io_k8s_api_core_v1_NodeSystemInfoInput {
  "The Architecture reported by the node"
  architecture:String
  "Boot ID reported by the node."
  bootID:String
  "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0)."
  containerRuntimeVersion:String
  "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."
  kernelVersion:String
  "KubeProxy Version reported by the node."
  kubeProxyVersion:String
  "Kubelet Version reported by the node."
  kubeletVersion:String
  "MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html"
  machineID:String
  "The Operating System reported by the node"
  operatingSystem:String
  "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy))."
  osImage:String
  "SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html"
  systemUUID:String
}
"NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
type io_k8s_api_core_v1_NodeSystemInfoResult {
  "The Architecture reported by the node"
  architecture:String
  "Boot ID reported by the node."
  bootID:String
  "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0)."
  containerRuntimeVersion:String
  "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."
  kernelVersion:String
  "KubeProxy Version reported by the node."
  kubeProxyVersion:String
  "Kubelet Version reported by the node."
  kubeletVersion:String
  "MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html"
  machineID:String
  "The Operating System reported by the node"
  operatingSystem:String
  "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy))."
  osImage:String
  "SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html"
  systemUUID:String
}
"ObjectFieldSelector selects an APIVersioned field of an object."
input io_k8s_api_core_v1_ObjectFieldSelectorInput {
  "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
  apiVersion:String
  "Path of the field to select in the specified API version."
  fieldPath:String
}
"ObjectFieldSelector selects an APIVersioned field of an object."
type io_k8s_api_core_v1_ObjectFieldSelectorResult {
  "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
  apiVersion:String
  "Path of the field to select in the specified API version."
  fieldPath:String
}
"ObjectReference contains enough information to let you inspect or modify the referred object."
input io_k8s_api_core_v1_ObjectReferenceInput {
  "API version of the referent."
  apiVersion:String
  "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
  fieldPath:String
  "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
  namespace:String
  "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
  resourceVersion:String
  "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
  uid:String
}
"ObjectReference contains enough information to let you inspect or modify the referred object."
type io_k8s_api_core_v1_ObjectReferenceResult {
  "API version of the referent."
  apiVersion:String
  "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
  fieldPath:String
  "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
  namespace:String
  "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
  resourceVersion:String
  "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
  uid:String
}
"PersistentVolumeClaimCondition contails details about state of pvc"
input io_k8s_api_core_v1_PersistentVolumeClaimConditionInput {
  lastProbeTime:String
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized."
  reason:String
  status:String
  type:String
}
"PersistentVolumeClaimCondition contails details about state of pvc"
type io_k8s_api_core_v1_PersistentVolumeClaimConditionResult {
  lastProbeTime:String
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized."
  reason:String
  status:String
  type:String
}
"PersistentVolumeClaim is a user's request for and claim to a persistent volume"
input io_k8s_api_core_v1_PersistentVolumeClaimInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes"
  spec:io_k8s_api_core_v1_PersistentVolumeClaimSpecInput
  "PersistentVolumeClaimStatus is the current status of a persistent volume claim."
  status:io_k8s_api_core_v1_PersistentVolumeClaimStatusInput
}
"PersistentVolumeClaimList is a list of PersistentVolumeClaim items."
type io_k8s_api_core_v1_PersistentVolumeClaimListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
  items:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PersistentVolumeClaim is a user's request for and claim to a persistent volume"
type io_k8s_api_core_v1_PersistentVolumeClaimResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes"
  spec:io_k8s_api_core_v1_PersistentVolumeClaimSpecResult
  "PersistentVolumeClaimStatus is the current status of a persistent volume claim."
  status:io_k8s_api_core_v1_PersistentVolumeClaimStatusResult
}
"PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes"
input io_k8s_api_core_v1_PersistentVolumeClaimSpecInput {
  "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
  accessModes:[String]
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
  storageClassName:String
  "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is an alpha feature and may change in the future."
  volumeMode:String
  "VolumeName is the binding reference to the PersistentVolume backing this claim."
  volumeName:String
}
"PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes"
type io_k8s_api_core_v1_PersistentVolumeClaimSpecResult {
  "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
  accessModes:[String]
  "ResourceRequirements describes the compute resource requirements."
  resources:io_k8s_api_core_v1_ResourceRequirementsResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
  storageClassName:String
  "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is an alpha feature and may change in the future."
  volumeMode:String
  "VolumeName is the binding reference to the PersistentVolume backing this claim."
  volumeName:String
}
"PersistentVolumeClaimStatus is the current status of a persistent volume claim."
input io_k8s_api_core_v1_PersistentVolumeClaimStatusInput {
  "AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
  accessModes:[String]
  "Represents the actual resources of the underlying volume."
  capacity:[StringInputProp!]
  "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'."
  conditions:[io_k8s_api_core_v1_PersistentVolumeClaimConditionInput]
  "Phase represents the current phase of PersistentVolumeClaim."
  phase:String
}
"PersistentVolumeClaimStatus is the current status of a persistent volume claim."
type io_k8s_api_core_v1_PersistentVolumeClaimStatusResult {
  "AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
  accessModes:[String]
  "Represents the actual resources of the underlying volume."
  capacity:[StringResultProp!]
  "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'."
  conditions:[io_k8s_api_core_v1_PersistentVolumeClaimConditionResult]
  "Phase represents the current phase of PersistentVolumeClaim."
  phase:String
}
"PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system)."
input io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceInput {
  "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
  claimName:String
  "Will force the ReadOnly setting in VolumeMounts. Default false."
  readOnly:Boolean
}
"PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system)."
type io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceResult {
  "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
  claimName:String
  "Will force the ReadOnly setting in VolumeMounts. Default false."
  readOnly:Boolean
}
"PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
input io_k8s_api_core_v1_PersistentVolumeInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PersistentVolumeSpec is the specification of a persistent volume."
  spec:io_k8s_api_core_v1_PersistentVolumeSpecInput
  "PersistentVolumeStatus is the current status of a persistent volume."
  status:io_k8s_api_core_v1_PersistentVolumeStatusInput
}
"PersistentVolumeList is a list of PersistentVolume items."
type io_k8s_api_core_v1_PersistentVolumeListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
  items:[io_k8s_api_core_v1_PersistentVolumeResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
type io_k8s_api_core_v1_PersistentVolumeResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PersistentVolumeSpec is the specification of a persistent volume."
  spec:io_k8s_api_core_v1_PersistentVolumeSpecResult
  "PersistentVolumeStatus is the current status of a persistent volume."
  status:io_k8s_api_core_v1_PersistentVolumeStatusResult
}
"PersistentVolumeSpec is the specification of a persistent volume."
input io_k8s_api_core_v1_PersistentVolumeSpecInput {
  "AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes"
  accessModes:[String]
  """
    Represents a Persistent Disk resource in AWS.
    
    An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
    """
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput
  "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceInput
  "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
  azureFile:io_k8s_api_core_v1_AzureFilePersistentVolumeSourceInput
  "A description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
  capacity:[StringInputProp!]
  "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
  cephfs:io_k8s_api_core_v1_CephFSPersistentVolumeSourceInput
  "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
  cinder:io_k8s_api_core_v1_CinderPersistentVolumeSourceInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  claimRef:io_k8s_api_core_v1_ObjectReferenceInput
  "Represents storage that is managed by an external CSI volume driver (Beta feature)"
  csi:io_k8s_api_core_v1_CSIPersistentVolumeSourceInput
  "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
  fc:io_k8s_api_core_v1_FCVolumeSourceInput
  "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin."
  flexVolume:io_k8s_api_core_v1_FlexPersistentVolumeSourceInput
  "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceInput
  """
    Represents a Persistent Disk resource in Google Compute Engine.
    
    A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
    """
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput
  "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceInput
  "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceInput
  "ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
  iscsi:io_k8s_api_core_v1_ISCSIPersistentVolumeSourceInput
  "Local represents directly-attached storage with node affinity (Beta feature)"
  local:io_k8s_api_core_v1_LocalVolumeSourceInput
  "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options"
  mountOptions:[String]
  "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
  nfs:io_k8s_api_core_v1_NFSVolumeSourceInput
  "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
  nodeAffinity:io_k8s_api_core_v1_VolumeNodeAffinityInput
  "What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming"
  persistentVolumeReclaimPolicy:String
  "Represents a Photon Controller persistent disk resource."
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput
  "PortworxVolumeSource represents a Portworx volume resource."
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceInput
  "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceInput
  "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
  rbd:io_k8s_api_core_v1_RBDPersistentVolumeSourceInput
  "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume"
  scaleIO:io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceInput
  "Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass."
  storageClassName:String
  "Represents a StorageOS persistent volume resource."
  storageos:io_k8s_api_core_v1_StorageOSPersistentVolumeSourceInput
  "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is an alpha feature and may change in the future."
  volumeMode:String
  "Represents a vSphere volume resource."
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput
}
"PersistentVolumeSpec is the specification of a persistent volume."
type io_k8s_api_core_v1_PersistentVolumeSpecResult {
  "AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes"
  accessModes:[String]
  """
    Represents a Persistent Disk resource in AWS.
    
    An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
    """
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult
  "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceResult
  "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
  azureFile:io_k8s_api_core_v1_AzureFilePersistentVolumeSourceResult
  "A description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
  capacity:[StringResultProp!]
  "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
  cephfs:io_k8s_api_core_v1_CephFSPersistentVolumeSourceResult
  "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
  cinder:io_k8s_api_core_v1_CinderPersistentVolumeSourceResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  claimRef:io_k8s_api_core_v1_ObjectReferenceResult
  "Represents storage that is managed by an external CSI volume driver (Beta feature)"
  csi:io_k8s_api_core_v1_CSIPersistentVolumeSourceResult
  "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
  fc:io_k8s_api_core_v1_FCVolumeSourceResult
  "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin."
  flexVolume:io_k8s_api_core_v1_FlexPersistentVolumeSourceResult
  "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceResult
  """
    Represents a Persistent Disk resource in Google Compute Engine.
    
    A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
    """
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult
  "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceResult
  "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceResult
  "ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
  iscsi:io_k8s_api_core_v1_ISCSIPersistentVolumeSourceResult
  "Local represents directly-attached storage with node affinity (Beta feature)"
  local:io_k8s_api_core_v1_LocalVolumeSourceResult
  "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options"
  mountOptions:[String]
  "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
  nfs:io_k8s_api_core_v1_NFSVolumeSourceResult
  "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
  nodeAffinity:io_k8s_api_core_v1_VolumeNodeAffinityResult
  "What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming"
  persistentVolumeReclaimPolicy:String
  "Represents a Photon Controller persistent disk resource."
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult
  "PortworxVolumeSource represents a Portworx volume resource."
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceResult
  "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceResult
  "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
  rbd:io_k8s_api_core_v1_RBDPersistentVolumeSourceResult
  "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume"
  scaleIO:io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceResult
  "Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass."
  storageClassName:String
  "Represents a StorageOS persistent volume resource."
  storageos:io_k8s_api_core_v1_StorageOSPersistentVolumeSourceResult
  "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is an alpha feature and may change in the future."
  volumeMode:String
  "Represents a vSphere volume resource."
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult
}
"PersistentVolumeStatus is the current status of a persistent volume."
input io_k8s_api_core_v1_PersistentVolumeStatusInput {
  "A human-readable message indicating details about why the volume is in this state."
  message:String
  "Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase"
  phase:String
  "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
  reason:String
}
"PersistentVolumeStatus is the current status of a persistent volume."
type io_k8s_api_core_v1_PersistentVolumeStatusResult {
  "A human-readable message indicating details about why the volume is in this state."
  message:String
  "Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase"
  phase:String
  "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
  reason:String
}
"Represents a Photon Controller persistent disk resource."
input io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "ID that identifies Photon Controller persistent disk"
  pdID:String
}
"Represents a Photon Controller persistent disk resource."
type io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "ID that identifies Photon Controller persistent disk"
  pdID:String
}
"Pod affinity is a group of inter pod affinity scheduling rules."
input io_k8s_api_core_v1_PodAffinityInput {
  "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermInput]
  "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermInput]
}
"Pod affinity is a group of inter pod affinity scheduling rules."
type io_k8s_api_core_v1_PodAffinityResult {
  "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermResult]
  "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermResult]
}
"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running"
input io_k8s_api_core_v1_PodAffinityTermInput {
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
  namespaces:[String]
  "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
  topologyKey:String
}
"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running"
type io_k8s_api_core_v1_PodAffinityTermResult {
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
  namespaces:[String]
  "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed."
  topologyKey:String
}
"Pod anti affinity is a group of inter pod anti affinity scheduling rules."
input io_k8s_api_core_v1_PodAntiAffinityInput {
  "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermInput]
  "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermInput]
}
"Pod anti affinity is a group of inter pod anti affinity scheduling rules."
type io_k8s_api_core_v1_PodAntiAffinityResult {
  "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermResult]
  "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermResult]
}
"PodCondition contains details for the current condition of this pod."
input io_k8s_api_core_v1_PodConditionInput {
  lastProbeTime:String
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  status:String
  "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  type:String
}
"PodCondition contains details for the current condition of this pod."
type io_k8s_api_core_v1_PodConditionResult {
  lastProbeTime:String
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  status:String
  "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  type:String
}
"PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
input io_k8s_api_core_v1_PodDNSConfigInput {
  "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed."
  nameservers:[String]
  "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy."
  options:[io_k8s_api_core_v1_PodDNSConfigOptionInput]
  "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed."
  searches:[String]
}
"PodDNSConfigOption defines DNS resolver options of a pod."
input io_k8s_api_core_v1_PodDNSConfigOptionInput {
  "Required."
  name:String
  value:String
}
"PodDNSConfigOption defines DNS resolver options of a pod."
type io_k8s_api_core_v1_PodDNSConfigOptionResult {
  "Required."
  name:String
  value:String
}
"PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
type io_k8s_api_core_v1_PodDNSConfigResult {
  "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed."
  nameservers:[String]
  "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy."
  options:[io_k8s_api_core_v1_PodDNSConfigOptionResult]
  "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed."
  searches:[String]
}
"Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts."
input io_k8s_api_core_v1_PodInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodSpec is a description of a pod."
  spec:io_k8s_api_core_v1_PodSpecInput
  "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane."
  status:io_k8s_api_core_v1_PodStatusInput
}
"PodList is a list of Pods."
type io_k8s_api_core_v1_PodListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md"
  items:[io_k8s_api_core_v1_PodResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PodReadinessGate contains the reference to a pod condition"
input io_k8s_api_core_v1_PodReadinessGateInput {
  "ConditionType refers to a condition in the pod's condition list with matching type."
  conditionType:String
}
"PodReadinessGate contains the reference to a pod condition"
type io_k8s_api_core_v1_PodReadinessGateResult {
  "ConditionType refers to a condition in the pod's condition list with matching type."
  conditionType:String
}
"Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts."
type io_k8s_api_core_v1_PodResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodSpec is a description of a pod."
  spec:io_k8s_api_core_v1_PodSpecResult
  "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane."
  status:io_k8s_api_core_v1_PodStatusResult
}
"PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext."
input io_k8s_api_core_v1_PodSecurityContextInput {
  """
    A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
    
    1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
    
    If unset, the Kubelet will not modify the ownership and permissions of any volume.
    """
  fsGroup:Int
  "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
  runAsGroup:Int
  "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsNonRoot:Boolean
  "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
  runAsUser:Int
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
  "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container."
  supplementalGroups:[Int]
  "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch."
  sysctls:[io_k8s_api_core_v1_SysctlInput]
}
"PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext."
type io_k8s_api_core_v1_PodSecurityContextResult {
  """
    A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
    
    1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
    
    If unset, the Kubelet will not modify the ownership and permissions of any volume.
    """
  fsGroup:Int
  "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
  runAsGroup:Int
  "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsNonRoot:Boolean
  "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
  runAsUser:Int
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
  "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container."
  supplementalGroups:[Int]
  "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch."
  sysctls:[io_k8s_api_core_v1_SysctlResult]
}
"PodSpec is a description of a pod."
input io_k8s_api_core_v1_PodSpecInput {
  "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
  activeDeadlineSeconds:Int
  "Affinity is a group of affinity scheduling rules."
  affinity:io_k8s_api_core_v1_AffinityInput
  "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
  automountServiceAccountToken:Boolean
  "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
  containers:[io_k8s_api_core_v1_ContainerInput]
  "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
  dnsConfig:io_k8s_api_core_v1_PodDNSConfigInput
  "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
  dnsPolicy:String
  "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods."
  hostAliases:[io_k8s_api_core_v1_HostAliasInput]
  "Use the host's ipc namespace. Optional: Default to false."
  hostIPC:Boolean
  "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
  hostNetwork:Boolean
  "Use the host's pid namespace. Optional: Default to false."
  hostPID:Boolean
  "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
  hostname:String
  "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceInput]
  "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"
  initContainers:[io_k8s_api_core_v1_ContainerInput]
  "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
  nodeName:String
  "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
  nodeSelector:[StringInputProp!]
  "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority."
  priority:Int
  "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default."
  priorityClassName:String
  "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md"
  readinessGates:[io_k8s_api_core_v1_PodReadinessGateInput]
  "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
  restartPolicy:String
  "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
  schedulerName:String
  "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext."
  securityContext:io_k8s_api_core_v1_PodSecurityContextInput
  "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
  serviceAccount:String
  "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
  serviceAccountName:String
  "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is alpha-level and is honored only by servers that enable the PodShareProcessNamespace feature."
  shareProcessNamespace:Boolean
  "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
  subdomain:String
  "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds."
  terminationGracePeriodSeconds:Int
  "If specified, the pod's tolerations."
  tolerations:[io_k8s_api_core_v1_TolerationInput]
  "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
  volumes:[io_k8s_api_core_v1_VolumeInput]
}
"PodSpec is a description of a pod."
type io_k8s_api_core_v1_PodSpecResult {
  "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
  activeDeadlineSeconds:Int
  "Affinity is a group of affinity scheduling rules."
  affinity:io_k8s_api_core_v1_AffinityResult
  "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
  automountServiceAccountToken:Boolean
  "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
  containers:[io_k8s_api_core_v1_ContainerResult]
  "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
  dnsConfig:io_k8s_api_core_v1_PodDNSConfigResult
  "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
  dnsPolicy:String
  "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods."
  hostAliases:[io_k8s_api_core_v1_HostAliasResult]
  "Use the host's ipc namespace. Optional: Default to false."
  hostIPC:Boolean
  "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
  hostNetwork:Boolean
  "Use the host's pid namespace. Optional: Default to false."
  hostPID:Boolean
  "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
  hostname:String
  "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceResult]
  "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"
  initContainers:[io_k8s_api_core_v1_ContainerResult]
  "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
  nodeName:String
  "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
  nodeSelector:[StringResultProp!]
  "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority."
  priority:Int
  "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default."
  priorityClassName:String
  "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md"
  readinessGates:[io_k8s_api_core_v1_PodReadinessGateResult]
  "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
  restartPolicy:String
  "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
  schedulerName:String
  "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext."
  securityContext:io_k8s_api_core_v1_PodSecurityContextResult
  "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
  serviceAccount:String
  "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
  serviceAccountName:String
  "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is alpha-level and is honored only by servers that enable the PodShareProcessNamespace feature."
  shareProcessNamespace:Boolean
  "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
  subdomain:String
  "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds."
  terminationGracePeriodSeconds:Int
  "If specified, the pod's tolerations."
  tolerations:[io_k8s_api_core_v1_TolerationResult]
  "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
  volumes:[io_k8s_api_core_v1_VolumeResult]
}
"PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane."
input io_k8s_api_core_v1_PodStatusInput {
  "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  conditions:[io_k8s_api_core_v1_PodConditionInput]
  "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
  containerStatuses:[io_k8s_api_core_v1_ContainerStatusInput]
  "IP address of the host to which the pod is assigned. Empty if not yet scheduled."
  hostIP:String
  "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
  initContainerStatuses:[io_k8s_api_core_v1_ContainerStatusInput]
  "A human readable message indicating details about why the pod is in this condition."
  message:String
  "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled."
  nominatedNodeName:String
  """
    The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:
    
    Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.
    
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
    """
  phase:String
  "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated."
  podIP:String
  "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md"
  qosClass:String
  "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'"
  reason:String
  startTime:String
}
"PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane."
type io_k8s_api_core_v1_PodStatusResult {
  "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
  conditions:[io_k8s_api_core_v1_PodConditionResult]
  "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
  containerStatuses:[io_k8s_api_core_v1_ContainerStatusResult]
  "IP address of the host to which the pod is assigned. Empty if not yet scheduled."
  hostIP:String
  "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
  initContainerStatuses:[io_k8s_api_core_v1_ContainerStatusResult]
  "A human readable message indicating details about why the pod is in this condition."
  message:String
  "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled."
  nominatedNodeName:String
  """
    The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:
    
    Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.
    
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
    """
  phase:String
  "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated."
  podIP:String
  "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md"
  qosClass:String
  "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'"
  reason:String
  startTime:String
}
"PodTemplate describes a template for creating copies of a predefined pod."
input io_k8s_api_core_v1_PodTemplateInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"PodTemplateList is a list of PodTemplates."
type io_k8s_api_core_v1_PodTemplateListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of pod templates"
  items:[io_k8s_api_core_v1_PodTemplateResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PodTemplate describes a template for creating copies of a predefined pod."
type io_k8s_api_core_v1_PodTemplateResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"PodTemplateSpec describes the data a pod should have when created from a template"
input io_k8s_api_core_v1_PodTemplateSpecInput {
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodSpec is a description of a pod."
  spec:io_k8s_api_core_v1_PodSpecInput
}
"PodTemplateSpec describes the data a pod should have when created from a template"
type io_k8s_api_core_v1_PodTemplateSpecResult {
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodSpec is a description of a pod."
  spec:io_k8s_api_core_v1_PodSpecResult
}
"PortworxVolumeSource represents a Portworx volume resource."
input io_k8s_api_core_v1_PortworxVolumeSourceInput {
  "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "VolumeID uniquely identifies a Portworx volume"
  volumeID:String
}
"PortworxVolumeSource represents a Portworx volume resource."
type io_k8s_api_core_v1_PortworxVolumeSourceResult {
  "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "VolumeID uniquely identifies a Portworx volume"
  volumeID:String
}
"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
input io_k8s_api_core_v1_PreferredSchedulingTermInput {
  "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
  preference:io_k8s_api_core_v1_NodeSelectorTermInput
  "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
  weight:Int
}
"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
type io_k8s_api_core_v1_PreferredSchedulingTermResult {
  "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm."
  preference:io_k8s_api_core_v1_NodeSelectorTermResult
  "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
  weight:Int
}
"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
input io_k8s_api_core_v1_ProbeInput {
  "ExecAction describes a \"run in container\" action."
  exec:io_k8s_api_core_v1_ExecActionInput
  "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."
  failureThreshold:Int
  "HTTPGetAction describes an action based on HTTP Get requests."
  httpGet:io_k8s_api_core_v1_HTTPGetActionInput
  "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
  initialDelaySeconds:Int
  "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1."
  periodSeconds:Int
  "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1."
  successThreshold:Int
  "TCPSocketAction describes an action based on opening a socket"
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionInput
  "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
  timeoutSeconds:Int
}
"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
type io_k8s_api_core_v1_ProbeResult {
  "ExecAction describes a \"run in container\" action."
  exec:io_k8s_api_core_v1_ExecActionResult
  "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."
  failureThreshold:Int
  "HTTPGetAction describes an action based on HTTP Get requests."
  httpGet:io_k8s_api_core_v1_HTTPGetActionResult
  "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
  initialDelaySeconds:Int
  "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1."
  periodSeconds:Int
  "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1."
  successThreshold:Int
  "TCPSocketAction describes an action based on opening a socket"
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionResult
  "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
  timeoutSeconds:Int
}
"Represents a projected volume source"
input io_k8s_api_core_v1_ProjectedVolumeSourceInput {
  "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "list of volume projections"
  sources:[io_k8s_api_core_v1_VolumeProjectionInput]
}
"Represents a projected volume source"
type io_k8s_api_core_v1_ProjectedVolumeSourceResult {
  "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "list of volume projections"
  sources:[io_k8s_api_core_v1_VolumeProjectionResult]
}
"Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
input io_k8s_api_core_v1_QuobyteVolumeSourceInput {
  "Group to map volume access to Default is no group"
  group:String
  "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
  readOnly:Boolean
  "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
  registry:String
  "User to map volume access to Defaults to serivceaccount user"
  user:String
  "Volume is a string that references an already created Quobyte volume by name."
  volume:String
}
"Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
type io_k8s_api_core_v1_QuobyteVolumeSourceResult {
  "Group to map volume access to Default is no group"
  group:String
  "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
  readOnly:Boolean
  "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
  registry:String
  "User to map volume access to Defaults to serivceaccount user"
  user:String
  "Volume is a string that references an already created Quobyte volume by name."
  volume:String
}
"Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_RBDPersistentVolumeSourceInput {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
  fsType:String
  "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  image:String
  "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  keyring:String
  "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  monitors:[String]
  "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  pool:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  user:String
}
"Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_RBDPersistentVolumeSourceResult {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
  fsType:String
  "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  image:String
  "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  keyring:String
  "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  monitors:[String]
  "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  pool:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  user:String
}
"Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
input io_k8s_api_core_v1_RBDVolumeSourceInput {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
  fsType:String
  "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  image:String
  "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  keyring:String
  "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  monitors:[String]
  "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  pool:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  user:String
}
"Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
type io_k8s_api_core_v1_RBDVolumeSourceResult {
  "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
  fsType:String
  "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  image:String
  "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  keyring:String
  "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  monitors:[String]
  "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  pool:String
  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
  user:String
}
"ReplicationControllerCondition describes the state of a replication controller at a certain point."
input io_k8s_api_core_v1_ReplicationControllerConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replication controller condition."
  type:String
}
"ReplicationControllerCondition describes the state of a replication controller at a certain point."
type io_k8s_api_core_v1_ReplicationControllerConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replication controller condition."
  type:String
}
"ReplicationController represents the configuration of a replication controller."
input io_k8s_api_core_v1_ReplicationControllerInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ReplicationControllerSpec is the specification of a replication controller."
  spec:io_k8s_api_core_v1_ReplicationControllerSpecInput
  "ReplicationControllerStatus represents the current status of a replication controller."
  status:io_k8s_api_core_v1_ReplicationControllerStatusInput
}
"ReplicationControllerList is a collection of replication controllers."
type io_k8s_api_core_v1_ReplicationControllerListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
  items:[io_k8s_api_core_v1_ReplicationControllerResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ReplicationController represents the configuration of a replication controller."
type io_k8s_api_core_v1_ReplicationControllerResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ReplicationControllerSpec is the specification of a replication controller."
  spec:io_k8s_api_core_v1_ReplicationControllerSpecResult
  "ReplicationControllerStatus represents the current status of a replication controller."
  status:io_k8s_api_core_v1_ReplicationControllerStatusResult
}
"ReplicationControllerSpec is the specification of a replication controller."
input io_k8s_api_core_v1_ReplicationControllerSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
  replicas:Int
  "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  selector:[StringInputProp!]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"ReplicationControllerSpec is the specification of a replication controller."
type io_k8s_api_core_v1_ReplicationControllerSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
  replicas:Int
  "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  selector:[StringResultProp!]
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"ReplicationControllerStatus represents the current status of a replication controller."
input io_k8s_api_core_v1_ReplicationControllerStatusInput {
  "The number of available replicas (ready for at least minReadySeconds) for this replication controller."
  availableReplicas:Int
  "Represents the latest available observations of a replication controller's current state."
  conditions:[io_k8s_api_core_v1_ReplicationControllerConditionInput]
  "The number of pods that have labels matching the labels of the pod template of the replication controller."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed replication controller."
  observedGeneration:Int
  "The number of ready replicas for this replication controller."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
  replicas:Int
}
"ReplicationControllerStatus represents the current status of a replication controller."
type io_k8s_api_core_v1_ReplicationControllerStatusResult {
  "The number of available replicas (ready for at least minReadySeconds) for this replication controller."
  availableReplicas:Int
  "Represents the latest available observations of a replication controller's current state."
  conditions:[io_k8s_api_core_v1_ReplicationControllerConditionResult]
  "The number of pods that have labels matching the labels of the pod template of the replication controller."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed replication controller."
  observedGeneration:Int
  "The number of ready replicas for this replication controller."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
  replicas:Int
}
"ResourceFieldSelector represents container resources (cpu, memory) and their output format"
input io_k8s_api_core_v1_ResourceFieldSelectorInput {
  "Container name: required for volumes, optional for env vars"
  containerName:String
  divisor:String
  "Required: resource to select"
  resource:String
}
"ResourceFieldSelector represents container resources (cpu, memory) and their output format"
type io_k8s_api_core_v1_ResourceFieldSelectorResult {
  "Container name: required for volumes, optional for env vars"
  containerName:String
  divisor:String
  "Required: resource to select"
  resource:String
}
"ResourceQuota sets aggregate quota restrictions enforced per namespace"
input io_k8s_api_core_v1_ResourceQuotaInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
  spec:io_k8s_api_core_v1_ResourceQuotaSpecInput
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  status:io_k8s_api_core_v1_ResourceQuotaStatusInput
}
"ResourceQuotaList is a list of ResourceQuota items."
type io_k8s_api_core_v1_ResourceQuotaListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
  items:[io_k8s_api_core_v1_ResourceQuotaResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ResourceQuota sets aggregate quota restrictions enforced per namespace"
type io_k8s_api_core_v1_ResourceQuotaResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
  spec:io_k8s_api_core_v1_ResourceQuotaSpecResult
  "ResourceQuotaStatus defines the enforced hard limits and observed use."
  status:io_k8s_api_core_v1_ResourceQuotaStatusResult
}
"ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
input io_k8s_api_core_v1_ResourceQuotaSpecInput {
  "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
  hard:[StringInputProp!]
  "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements."
  scopeSelector:io_k8s_api_core_v1_ScopeSelectorInput
  "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects."
  scopes:[String]
}
"ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
type io_k8s_api_core_v1_ResourceQuotaSpecResult {
  "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
  hard:[StringResultProp!]
  "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements."
  scopeSelector:io_k8s_api_core_v1_ScopeSelectorResult
  "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects."
  scopes:[String]
}
"ResourceQuotaStatus defines the enforced hard limits and observed use."
input io_k8s_api_core_v1_ResourceQuotaStatusInput {
  "Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
  hard:[StringInputProp!]
  "Used is the current observed total usage of the resource in the namespace."
  used:[StringInputProp!]
}
"ResourceQuotaStatus defines the enforced hard limits and observed use."
type io_k8s_api_core_v1_ResourceQuotaStatusResult {
  "Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
  hard:[StringResultProp!]
  "Used is the current observed total usage of the resource in the namespace."
  used:[StringResultProp!]
}
"ResourceRequirements describes the compute resource requirements."
input io_k8s_api_core_v1_ResourceRequirementsInput {
  "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
  limits:[StringInputProp!]
  "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
  requests:[StringInputProp!]
}
"ResourceRequirements describes the compute resource requirements."
type io_k8s_api_core_v1_ResourceRequirementsResult {
  "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
  limits:[StringResultProp!]
  "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
  requests:[StringResultProp!]
}
"SELinuxOptions are the labels to be applied to the container"
input io_k8s_api_core_v1_SELinuxOptionsInput {
  "Level is SELinux level label that applies to the container."
  level:String
  "Role is a SELinux role label that applies to the container."
  role:String
  "Type is a SELinux type label that applies to the container."
  type:String
  "User is a SELinux user label that applies to the container."
  user:String
}
"SELinuxOptions are the labels to be applied to the container"
type io_k8s_api_core_v1_SELinuxOptionsResult {
  "Level is SELinux level label that applies to the container."
  level:String
  "Role is a SELinux role label that applies to the container."
  role:String
  "Type is a SELinux type label that applies to the container."
  type:String
  "User is a SELinux user label that applies to the container."
  user:String
}
"ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume"
input io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "The host address of the ScaleIO API Gateway."
  gateway:String
  "The name of the ScaleIO Protection Domain for the configured storage."
  protectionDomain:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  "Flag to enable/disable SSL communication with Gateway, default false"
  sslEnabled:Boolean
  "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
  storageMode:String
  "The ScaleIO Storage Pool associated with the protection domain."
  storagePool:String
  "The name of the storage system as configured in ScaleIO."
  system:String
  "The name of a volume already created in the ScaleIO system that is associated with this volume source."
  volumeName:String
}
"ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume"
type io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "The host address of the ScaleIO API Gateway."
  gateway:String
  "The name of the ScaleIO Protection Domain for the configured storage."
  protectionDomain:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  "Flag to enable/disable SSL communication with Gateway, default false"
  sslEnabled:Boolean
  "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
  storageMode:String
  "The ScaleIO Storage Pool associated with the protection domain."
  storagePool:String
  "The name of the storage system as configured in ScaleIO."
  system:String
  "The name of a volume already created in the ScaleIO system that is associated with this volume source."
  volumeName:String
}
"ScaleIOVolumeSource represents a persistent ScaleIO volume"
input io_k8s_api_core_v1_ScaleIOVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "The host address of the ScaleIO API Gateway."
  gateway:String
  "The name of the ScaleIO Protection Domain for the configured storage."
  protectionDomain:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "Flag to enable/disable SSL communication with Gateway, default false"
  sslEnabled:Boolean
  "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
  storageMode:String
  "The ScaleIO Storage Pool associated with the protection domain."
  storagePool:String
  "The name of the storage system as configured in ScaleIO."
  system:String
  "The name of a volume already created in the ScaleIO system that is associated with this volume source."
  volumeName:String
}
"ScaleIOVolumeSource represents a persistent ScaleIO volume"
type io_k8s_api_core_v1_ScaleIOVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "The host address of the ScaleIO API Gateway."
  gateway:String
  "The name of the ScaleIO Protection Domain for the configured storage."
  protectionDomain:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "Flag to enable/disable SSL communication with Gateway, default false"
  sslEnabled:Boolean
  "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
  storageMode:String
  "The ScaleIO Storage Pool associated with the protection domain."
  storagePool:String
  "The name of the storage system as configured in ScaleIO."
  system:String
  "The name of a volume already created in the ScaleIO system that is associated with this volume source."
  volumeName:String
}
"A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements."
input io_k8s_api_core_v1_ScopeSelectorInput {
  "A list of scope selector requirements by scope of the resources."
  matchExpressions:[io_k8s_api_core_v1_ScopedResourceSelectorRequirementInput]
}
"A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements."
type io_k8s_api_core_v1_ScopeSelectorResult {
  "A list of scope selector requirements by scope of the resources."
  matchExpressions:[io_k8s_api_core_v1_ScopedResourceSelectorRequirementResult]
}
"A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values."
input io_k8s_api_core_v1_ScopedResourceSelectorRequirementInput {
  "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist."
  operator:String
  "The name of the scope that the selector applies to."
  scopeName:String
  "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
  values:[String]
}
"A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values."
type io_k8s_api_core_v1_ScopedResourceSelectorRequirementResult {
  "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist."
  operator:String
  "The name of the scope that the selector applies to."
  scopeName:String
  "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
  values:[String]
}
"""
SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
"""
input io_k8s_api_core_v1_SecretEnvSourceInput {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret must be defined"
  optional:Boolean
}
"""
SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
"""
type io_k8s_api_core_v1_SecretEnvSourceResult {
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret must be defined"
  optional:Boolean
}
"Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes."
input io_k8s_api_core_v1_SecretInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4"
  data:[StringInputProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API."
  stringData:[StringInputProp!]
  "Used to facilitate programmatic handling of secret data."
  type:String
}
"SecretKeySelector selects a key of a Secret."
input io_k8s_api_core_v1_SecretKeySelectorInput {
  "The key of the secret to select from.  Must be a valid secret key."
  key:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret or it's key must be defined"
  optional:Boolean
}
"SecretKeySelector selects a key of a Secret."
type io_k8s_api_core_v1_SecretKeySelectorResult {
  "The key of the secret to select from.  Must be a valid secret key."
  key:String
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret or it's key must be defined"
  optional:Boolean
}
"SecretList is a list of Secret."
type io_k8s_api_core_v1_SecretListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret"
  items:[io_k8s_api_core_v1_SecretResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
"""
input io_k8s_api_core_v1_SecretProjectionInput {
  "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathInput]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret or its key must be defined"
  optional:Boolean
}
"""
Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
"""
type io_k8s_api_core_v1_SecretProjectionResult {
  "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathResult]
  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Specify whether the Secret or its key must be defined"
  optional:Boolean
}
"SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
input io_k8s_api_core_v1_SecretReferenceInput {
  "Name is unique within a namespace to reference a secret resource."
  name:String
  "Namespace defines the space within which the secret name must be unique."
  namespace:String
}
"SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace"
type io_k8s_api_core_v1_SecretReferenceResult {
  "Name is unique within a namespace to reference a secret resource."
  name:String
  "Namespace defines the space within which the secret name must be unique."
  namespace:String
}
"Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes."
type io_k8s_api_core_v1_SecretResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4"
  data:[StringResultProp!]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API."
  stringData:[StringResultProp!]
  "Used to facilitate programmatic handling of secret data."
  type:String
}
"""
Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
"""
input io_k8s_api_core_v1_SecretVolumeSourceInput {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathInput]
  "Specify whether the Secret or it's keys must be defined"
  optional:Boolean
  "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
  secretName:String
}
"""
Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
"""
type io_k8s_api_core_v1_SecretVolumeSourceResult {
  "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
  defaultMode:Int
  "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
  items:[io_k8s_api_core_v1_KeyToPathResult]
  "Specify whether the Secret or it's keys must be defined"
  optional:Boolean
  "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
  secretName:String
}
"SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence."
input io_k8s_api_core_v1_SecurityContextInput {
  "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
  allowPrivilegeEscalation:Boolean
  "Adds and removes POSIX capabilities from running containers."
  capabilities:io_k8s_api_core_v1_CapabilitiesInput
  "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
  privileged:Boolean
  "Whether this container has a read-only root filesystem. Default is false."
  readOnlyRootFilesystem:Boolean
  "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsGroup:Int
  "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsNonRoot:Boolean
  "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsUser:Int
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
}
"SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence."
type io_k8s_api_core_v1_SecurityContextResult {
  "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
  allowPrivilegeEscalation:Boolean
  "Adds and removes POSIX capabilities from running containers."
  capabilities:io_k8s_api_core_v1_CapabilitiesResult
  "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
  privileged:Boolean
  "Whether this container has a read-only root filesystem. Default is false."
  readOnlyRootFilesystem:Boolean
  "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsGroup:Int
  "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsNonRoot:Boolean
  "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
  runAsUser:Int
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
}
"ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets"
input io_k8s_api_core_v1_ServiceAccountInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level."
  automountServiceAccountToken:Boolean
  "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod"
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceInput]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret"
  secrets:[io_k8s_api_core_v1_ObjectReferenceInput]
}
"ServiceAccountList is a list of ServiceAccount objects"
type io_k8s_api_core_v1_ServiceAccountListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
  items:[io_k8s_api_core_v1_ServiceAccountResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets"
type io_k8s_api_core_v1_ServiceAccountResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level."
  automountServiceAccountToken:Boolean
  "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod"
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret"
  secrets:[io_k8s_api_core_v1_ObjectReferenceResult]
}
"ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise)."
input io_k8s_api_core_v1_ServiceAccountTokenProjectionInput {
  "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver."
  audience:String
  "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes."
  expirationSeconds:Int
  "Path is the path relative to the mount point of the file to project the token into."
  path:String
}
"ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise)."
type io_k8s_api_core_v1_ServiceAccountTokenProjectionResult {
  "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver."
  audience:String
  "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes."
  expirationSeconds:Int
  "Path is the path relative to the mount point of the file to project the token into."
  path:String
}
"Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
input io_k8s_api_core_v1_ServiceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ServiceSpec describes the attributes that a user creates on a service."
  spec:io_k8s_api_core_v1_ServiceSpecInput
  "ServiceStatus represents the current status of a service."
  status:io_k8s_api_core_v1_ServiceStatusInput
}
"ServiceList holds a list of services."
type io_k8s_api_core_v1_ServiceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of services"
  items:[io_k8s_api_core_v1_ServiceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ServicePort contains information on service's port."
input io_k8s_api_core_v1_ServicePortInput {
  "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service."
  name:String
  "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
  nodePort:Int
  "The port that will be exposed by this service."
  port:Int
  "The IP protocol for this port. Supports \"TCP\" and \"UDP\". Default is TCP."
  protocol:String
  targetPort:String
}
"ServicePort contains information on service's port."
type io_k8s_api_core_v1_ServicePortResult {
  "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service."
  name:String
  "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
  nodePort:Int
  "The port that will be exposed by this service."
  port:Int
  "The IP protocol for this port. Supports \"TCP\" and \"UDP\". Default is TCP."
  protocol:String
  targetPort:String
}
"Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
type io_k8s_api_core_v1_ServiceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ServiceSpec describes the attributes that a user creates on a service."
  spec:io_k8s_api_core_v1_ServiceSpecResult
  "ServiceStatus represents the current status of a service."
  status:io_k8s_api_core_v1_ServiceStatusResult
}
"ServiceSpec describes the attributes that a user creates on a service."
input io_k8s_api_core_v1_ServiceSpecInput {
  "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  clusterIP:String
  "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system."
  externalIPs:[String]
  "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName."
  externalName:String
  "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading."
  externalTrafficPolicy:String
  "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local."
  healthCheckNodePort:Int
  "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature."
  loadBalancerIP:String
  "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/"
  loadBalancerSourceRanges:[String]
  "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  ports:[io_k8s_api_core_v1_ServicePortInput]
  "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery."
  publishNotReadyAddresses:Boolean
  "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/"
  selector:[StringInputProp!]
  "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  sessionAffinity:String
  "SessionAffinityConfig represents the configurations of session affinity."
  sessionAffinityConfig:io_k8s_api_core_v1_SessionAffinityConfigInput
  "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types"
  type:String
}
"ServiceSpec describes the attributes that a user creates on a service."
type io_k8s_api_core_v1_ServiceSpecResult {
  "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  clusterIP:String
  "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system."
  externalIPs:[String]
  "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName."
  externalName:String
  "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading."
  externalTrafficPolicy:String
  "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local."
  healthCheckNodePort:Int
  "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature."
  loadBalancerIP:String
  "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/"
  loadBalancerSourceRanges:[String]
  "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  ports:[io_k8s_api_core_v1_ServicePortResult]
  "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery."
  publishNotReadyAddresses:Boolean
  "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/"
  selector:[StringResultProp!]
  "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
  sessionAffinity:String
  "SessionAffinityConfig represents the configurations of session affinity."
  sessionAffinityConfig:io_k8s_api_core_v1_SessionAffinityConfigResult
  "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types"
  type:String
}
"ServiceStatus represents the current status of a service."
input io_k8s_api_core_v1_ServiceStatusInput {
  "LoadBalancerStatus represents the status of a load-balancer."
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusInput
}
"ServiceStatus represents the current status of a service."
type io_k8s_api_core_v1_ServiceStatusResult {
  "LoadBalancerStatus represents the status of a load-balancer."
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusResult
}
"SessionAffinityConfig represents the configurations of session affinity."
input io_k8s_api_core_v1_SessionAffinityConfigInput {
  "ClientIPConfig represents the configurations of Client IP based session affinity."
  clientIP:io_k8s_api_core_v1_ClientIPConfigInput
}
"SessionAffinityConfig represents the configurations of session affinity."
type io_k8s_api_core_v1_SessionAffinityConfigResult {
  "ClientIPConfig represents the configurations of Client IP based session affinity."
  clientIP:io_k8s_api_core_v1_ClientIPConfigResult
}
"Represents a StorageOS persistent volume resource."
input io_k8s_api_core_v1_StorageOSPersistentVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  secretRef:io_k8s_api_core_v1_ObjectReferenceInput
  "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace."
  volumeName:String
  "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created."
  volumeNamespace:String
}
"Represents a StorageOS persistent volume resource."
type io_k8s_api_core_v1_StorageOSPersistentVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  secretRef:io_k8s_api_core_v1_ObjectReferenceResult
  "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace."
  volumeName:String
  "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created."
  volumeNamespace:String
}
"Represents a StorageOS persistent volume resource."
input io_k8s_api_core_v1_StorageOSVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace."
  volumeName:String
  "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created."
  volumeNamespace:String
}
"Represents a StorageOS persistent volume resource."
type io_k8s_api_core_v1_StorageOSVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
  readOnly:Boolean
  "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace."
  volumeName:String
  "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created."
  volumeNamespace:String
}
"Sysctl defines a kernel parameter to be set"
input io_k8s_api_core_v1_SysctlInput {
  "Name of a property to set"
  name:String
  "Value of a property to set"
  value:String
}
"Sysctl defines a kernel parameter to be set"
type io_k8s_api_core_v1_SysctlResult {
  "Name of a property to set"
  name:String
  "Value of a property to set"
  value:String
}
"TCPSocketAction describes an action based on opening a socket"
input io_k8s_api_core_v1_TCPSocketActionInput {
  "Optional: Host name to connect to, defaults to the pod IP."
  host:String
  port:String
}
"TCPSocketAction describes an action based on opening a socket"
type io_k8s_api_core_v1_TCPSocketActionResult {
  "Optional: Host name to connect to, defaults to the pod IP."
  host:String
  port:String
}
"The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint."
input io_k8s_api_core_v1_TaintInput {
  "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
  effect:String
  "Required. The taint key to be applied to a node."
  key:String
  timeAdded:String
  "Required. The taint value corresponding to the taint key."
  value:String
}
"The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint."
type io_k8s_api_core_v1_TaintResult {
  "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
  effect:String
  "Required. The taint key to be applied to a node."
  key:String
  timeAdded:String
  "Required. The taint value corresponding to the taint key."
  value:String
}
"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>."
input io_k8s_api_core_v1_TolerationInput {
  "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
  effect:String
  "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys."
  key:String
  "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category."
  operator:String
  "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system."
  tolerationSeconds:Int
  "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string."
  value:String
}
"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>."
type io_k8s_api_core_v1_TolerationResult {
  "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
  effect:String
  "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys."
  key:String
  "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category."
  operator:String
  "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system."
  tolerationSeconds:Int
  "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string."
  value:String
}
"A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future."
input io_k8s_api_core_v1_TopologySelectorLabelRequirementInput {
  "The label key that the selector applies to."
  key:String
  "An array of string values. One value must match the label to be selected. Each entry in Values is ORed."
  values:[String]
}
"A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future."
type io_k8s_api_core_v1_TopologySelectorLabelRequirementResult {
  "The label key that the selector applies to."
  key:String
  "An array of string values. One value must match the label to be selected. Each entry in Values is ORed."
  values:[String]
}
"A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future."
input io_k8s_api_core_v1_TopologySelectorTermInput {
  "A list of topology selector requirements by labels."
  matchLabelExpressions:[io_k8s_api_core_v1_TopologySelectorLabelRequirementInput]
}
"A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future."
type io_k8s_api_core_v1_TopologySelectorTermResult {
  "A list of topology selector requirements by labels."
  matchLabelExpressions:[io_k8s_api_core_v1_TopologySelectorLabelRequirementResult]
}
"volumeDevice describes a mapping of a raw block device within a container."
input io_k8s_api_core_v1_VolumeDeviceInput {
  "devicePath is the path inside of the container that the device will be mapped to."
  devicePath:String
  "name must match the name of a persistentVolumeClaim in the pod"
  name:String
}
"volumeDevice describes a mapping of a raw block device within a container."
type io_k8s_api_core_v1_VolumeDeviceResult {
  "devicePath is the path inside of the container that the device will be mapped to."
  devicePath:String
  "name must match the name of a persistentVolumeClaim in the pod"
  name:String
}
"Volume represents a named volume in a pod that may be accessed by any container in the pod."
input io_k8s_api_core_v1_VolumeInput {
  """
    Represents a Persistent Disk resource in AWS.
    
    An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
    """
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput
  "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceInput
  "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
  azureFile:io_k8s_api_core_v1_AzureFileVolumeSourceInput
  "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
  cephfs:io_k8s_api_core_v1_CephFSVolumeSourceInput
  "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
  cinder:io_k8s_api_core_v1_CinderVolumeSourceInput
  """
    Adapts a ConfigMap into a volume.
    
    The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
    """
  configMap:io_k8s_api_core_v1_ConfigMapVolumeSourceInput
  "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling."
  downwardAPI:io_k8s_api_core_v1_DownwardAPIVolumeSourceInput
  "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling."
  emptyDir:io_k8s_api_core_v1_EmptyDirVolumeSourceInput
  "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
  fc:io_k8s_api_core_v1_FCVolumeSourceInput
  "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
  flexVolume:io_k8s_api_core_v1_FlexVolumeSourceInput
  "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceInput
  """
    Represents a Persistent Disk resource in Google Compute Engine.
    
    A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
    """
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput
  """
    Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
    
    DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
    """
  gitRepo:io_k8s_api_core_v1_GitRepoVolumeSourceInput
  "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceInput
  "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceInput
  "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
  iscsi:io_k8s_api_core_v1_ISCSIVolumeSourceInput
  "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
  nfs:io_k8s_api_core_v1_NFSVolumeSourceInput
  "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system)."
  persistentVolumeClaim:io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceInput
  "Represents a Photon Controller persistent disk resource."
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput
  "PortworxVolumeSource represents a Portworx volume resource."
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceInput
  "Represents a projected volume source"
  projected:io_k8s_api_core_v1_ProjectedVolumeSourceInput
  "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceInput
  "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
  rbd:io_k8s_api_core_v1_RBDVolumeSourceInput
  "ScaleIOVolumeSource represents a persistent ScaleIO volume"
  scaleIO:io_k8s_api_core_v1_ScaleIOVolumeSourceInput
  """
    Adapts a Secret into a volume.
    
    The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
    """
  secret:io_k8s_api_core_v1_SecretVolumeSourceInput
  "Represents a StorageOS persistent volume resource."
  storageos:io_k8s_api_core_v1_StorageOSVolumeSourceInput
  "Represents a vSphere volume resource."
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput
}
"VolumeMount describes a mounting of a Volume within a container."
input io_k8s_api_core_v1_VolumeMountInput {
  "Path within the container at which the volume should be mounted.  Must not contain ':'."
  mountPath:String
  "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
  mountPropagation:String
  "This must match the Name of a Volume."
  name:String
  "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
  readOnly:Boolean
  "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
  subPath:String
}
"VolumeMount describes a mounting of a Volume within a container."
type io_k8s_api_core_v1_VolumeMountResult {
  "Path within the container at which the volume should be mounted.  Must not contain ':'."
  mountPath:String
  "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10."
  mountPropagation:String
  "This must match the Name of a Volume."
  name:String
  "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
  readOnly:Boolean
  "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
  subPath:String
}
"VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
input io_k8s_api_core_v1_VolumeNodeAffinityInput {
  "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
  required:io_k8s_api_core_v1_NodeSelectorInput
}
"VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
type io_k8s_api_core_v1_VolumeNodeAffinityResult {
  "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms."
  required:io_k8s_api_core_v1_NodeSelectorResult
}
"Projection that may be projected along with other supported volume types"
input io_k8s_api_core_v1_VolumeProjectionInput {
  """
    Adapts a ConfigMap into a projected volume.
    
    The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
    """
  configMap:io_k8s_api_core_v1_ConfigMapProjectionInput
  "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode."
  downwardAPI:io_k8s_api_core_v1_DownwardAPIProjectionInput
  """
    Adapts a secret into a projected volume.
    
    The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
    """
  secret:io_k8s_api_core_v1_SecretProjectionInput
  "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise)."
  serviceAccountToken:io_k8s_api_core_v1_ServiceAccountTokenProjectionInput
}
"Projection that may be projected along with other supported volume types"
type io_k8s_api_core_v1_VolumeProjectionResult {
  """
    Adapts a ConfigMap into a projected volume.
    
    The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
    """
  configMap:io_k8s_api_core_v1_ConfigMapProjectionResult
  "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode."
  downwardAPI:io_k8s_api_core_v1_DownwardAPIProjectionResult
  """
    Adapts a secret into a projected volume.
    
    The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
    """
  secret:io_k8s_api_core_v1_SecretProjectionResult
  "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise)."
  serviceAccountToken:io_k8s_api_core_v1_ServiceAccountTokenProjectionResult
}
"Volume represents a named volume in a pod that may be accessed by any container in the pod."
type io_k8s_api_core_v1_VolumeResult {
  """
    Represents a Persistent Disk resource in AWS.
    
    An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
    """
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult
  "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceResult
  "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
  azureFile:io_k8s_api_core_v1_AzureFileVolumeSourceResult
  "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
  cephfs:io_k8s_api_core_v1_CephFSVolumeSourceResult
  "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling."
  cinder:io_k8s_api_core_v1_CinderVolumeSourceResult
  """
    Adapts a ConfigMap into a volume.
    
    The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
    """
  configMap:io_k8s_api_core_v1_ConfigMapVolumeSourceResult
  "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling."
  downwardAPI:io_k8s_api_core_v1_DownwardAPIVolumeSourceResult
  "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling."
  emptyDir:io_k8s_api_core_v1_EmptyDirVolumeSourceResult
  "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling."
  fc:io_k8s_api_core_v1_FCVolumeSourceResult
  "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
  flexVolume:io_k8s_api_core_v1_FlexVolumeSourceResult
  "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling."
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceResult
  """
    Represents a Persistent Disk resource in Google Compute Engine.
    
    A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
    """
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult
  """
    Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
    
    DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
    """
  gitRepo:io_k8s_api_core_v1_GitRepoVolumeSourceResult
  "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling."
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceResult
  "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling."
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceResult
  "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling."
  iscsi:io_k8s_api_core_v1_ISCSIVolumeSourceResult
  "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
  name:String
  "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling."
  nfs:io_k8s_api_core_v1_NFSVolumeSourceResult
  "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system)."
  persistentVolumeClaim:io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceResult
  "Represents a Photon Controller persistent disk resource."
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult
  "PortworxVolumeSource represents a Portworx volume resource."
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceResult
  "Represents a projected volume source"
  projected:io_k8s_api_core_v1_ProjectedVolumeSourceResult
  "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling."
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceResult
  "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling."
  rbd:io_k8s_api_core_v1_RBDVolumeSourceResult
  "ScaleIOVolumeSource represents a persistent ScaleIO volume"
  scaleIO:io_k8s_api_core_v1_ScaleIOVolumeSourceResult
  """
    Adapts a Secret into a volume.
    
    The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
    """
  secret:io_k8s_api_core_v1_SecretVolumeSourceResult
  "Represents a StorageOS persistent volume resource."
  storageos:io_k8s_api_core_v1_StorageOSVolumeSourceResult
  "Represents a vSphere volume resource."
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult
}
"Represents a vSphere volume resource."
input io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
  storagePolicyID:String
  "Storage Policy Based Management (SPBM) profile name."
  storagePolicyName:String
  "Path that identifies vSphere volume vmdk"
  volumePath:String
}
"Represents a vSphere volume resource."
type io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult {
  "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
  fsType:String
  "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
  storagePolicyID:String
  "Storage Policy Based Management (SPBM) profile name."
  storagePolicyName:String
  "Path that identifies vSphere volume vmdk"
  volumePath:String
}
"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
input io_k8s_api_core_v1_WeightedPodAffinityTermInput {
  "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running"
  podAffinityTerm:io_k8s_api_core_v1_PodAffinityTermInput
  "weight associated with matching the corresponding podAffinityTerm, in the range 1-100."
  weight:Int
}
"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
type io_k8s_api_core_v1_WeightedPodAffinityTermResult {
  "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running"
  podAffinityTerm:io_k8s_api_core_v1_PodAffinityTermResult
  "weight associated with matching the corresponding podAffinityTerm, in the range 1-100."
  weight:Int
}
"Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system."
input io_k8s_api_events_v1beta1_EventInput {
  "What action was taken/failed regarding to the regarding object."
  action:String
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Deprecated field assuring backward compatibility with core.v1 Event type"
  deprecatedCount:Int
  deprecatedFirstTimestamp:String
  deprecatedLastTimestamp:String
  "EventSource contains information for an event."
  deprecatedSource:io_k8s_api_core_v1_EventSourceInput
  eventTime:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB."
  note:String
  "Why the action was taken."
  reason:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  regarding:io_k8s_api_core_v1_ObjectReferenceInput
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  related:io_k8s_api_core_v1_ObjectReferenceInput
  "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`."
  reportingController:String
  "ID of the controller instance, e.g. `kubelet-xyzf`."
  reportingInstance:String
  "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
  series:io_k8s_api_events_v1beta1_EventSeriesInput
  "Type of this event (Normal, Warning), new types could be added in the future."
  type:String
}
"EventList is a list of Event objects."
type io_k8s_api_events_v1beta1_EventListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of schema objects."
  items:[io_k8s_api_events_v1beta1_EventResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system."
type io_k8s_api_events_v1beta1_EventResult {
  "What action was taken/failed regarding to the regarding object."
  action:String
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Deprecated field assuring backward compatibility with core.v1 Event type"
  deprecatedCount:Int
  deprecatedFirstTimestamp:String
  deprecatedLastTimestamp:String
  "EventSource contains information for an event."
  deprecatedSource:io_k8s_api_core_v1_EventSourceResult
  eventTime:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB."
  note:String
  "Why the action was taken."
  reason:String
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  regarding:io_k8s_api_core_v1_ObjectReferenceResult
  "ObjectReference contains enough information to let you inspect or modify the referred object."
  related:io_k8s_api_core_v1_ObjectReferenceResult
  "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`."
  reportingController:String
  "ID of the controller instance, e.g. `kubelet-xyzf`."
  reportingInstance:String
  "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
  series:io_k8s_api_events_v1beta1_EventSeriesResult
  "Type of this event (Normal, Warning), new types could be added in the future."
  type:String
}
"EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
input io_k8s_api_events_v1beta1_EventSeriesInput {
  "Number of occurrences in this series up to the last heartbeat time"
  count:Int
  lastObservedTime:String
  "Information whether this series is ongoing or finished."
  state:String
}
"EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time."
type io_k8s_api_events_v1beta1_EventSeriesResult {
  "Number of occurrences in this series up to the last heartbeat time"
  count:Int
  lastObservedTime:String
  "Information whether this series is ongoing or finished."
  state:String
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used. Deprecated: use AllowedFlexVolume from policy API Group instead."
input io_k8s_api_extensions_v1beta1_AllowedFlexVolumeInput {
  "driver is the name of the Flexvolume driver."
  driver:String
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used. Deprecated: use AllowedFlexVolume from policy API Group instead."
type io_k8s_api_extensions_v1beta1_AllowedFlexVolumeResult {
  "driver is the name of the Flexvolume driver."
  driver:String
}
"AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined. Deprecated: use AllowedHostPath from policy API Group instead."
input io_k8s_api_extensions_v1beta1_AllowedHostPathInput {
  """
    pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
    
    Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
    """
  pathPrefix:String
  "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly."
  readOnly:Boolean
}
"AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined. Deprecated: use AllowedHostPath from policy API Group instead."
type io_k8s_api_extensions_v1beta1_AllowedHostPathResult {
  """
    pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
    
    Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
    """
  pathPrefix:String
  "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly."
  readOnly:Boolean
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
input io_k8s_api_extensions_v1beta1_DaemonSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DaemonSetCondition describes the state of a DaemonSet at a certain point."
type io_k8s_api_extensions_v1beta1_DaemonSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of DaemonSet condition."
  type:String
}
"DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
input io_k8s_api_extensions_v1beta1_DaemonSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_extensions_v1beta1_DaemonSetSpecInput
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_extensions_v1beta1_DaemonSetStatusInput
}
"DaemonSetList is a collection of daemon sets."
type io_k8s_api_extensions_v1beta1_DaemonSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "A list of daemon sets."
  items:[io_k8s_api_extensions_v1beta1_DaemonSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
type io_k8s_api_extensions_v1beta1_DaemonSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DaemonSetSpec is the specification of a daemon set."
  spec:io_k8s_api_extensions_v1beta1_DaemonSetSpecResult
  "DaemonSetStatus represents the current status of a daemon set."
  status:io_k8s_api_extensions_v1beta1_DaemonSetStatusResult
}
"DaemonSetSpec is the specification of a daemon set."
input io_k8s_api_extensions_v1beta1_DaemonSetSpecInput {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  "DEPRECATED. A sequence number representing a specific generation of the template. Populated by the system. It can be set only during the creation."
  templateGeneration:Int
  updateStrategy:io_k8s_api_extensions_v1beta1_DaemonSetUpdateStrategyInput
}
"DaemonSetSpec is the specification of a daemon set."
type io_k8s_api_extensions_v1beta1_DaemonSetSpecResult {
  "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)."
  minReadySeconds:Int
  "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10."
  revisionHistoryLimit:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  "DEPRECATED. A sequence number representing a specific generation of the template. Populated by the system. It can be set only during the creation."
  templateGeneration:Int
  updateStrategy:io_k8s_api_extensions_v1beta1_DaemonSetUpdateStrategyResult
}
"DaemonSetStatus represents the current status of a daemon set."
input io_k8s_api_extensions_v1beta1_DaemonSetStatusInput {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_extensions_v1beta1_DaemonSetConditionInput]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
"DaemonSetStatus represents the current status of a daemon set."
type io_k8s_api_extensions_v1beta1_DaemonSetStatusResult {
  "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision."
  collisionCount:Int
  "Represents the latest available observations of a DaemonSet's current state."
  conditions:[io_k8s_api_extensions_v1beta1_DaemonSetConditionResult]
  "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  currentNumberScheduled:Int
  "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  desiredNumberScheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberAvailable:Int
  "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
  numberMisscheduled:Int
  "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready."
  numberReady:Int
  "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)"
  numberUnavailable:Int
  "The most recent generation observed by the daemon set controller."
  observedGeneration:Int
  "The total number of nodes that are running updated daemon pod"
  updatedNumberScheduled:Int
}
input io_k8s_api_extensions_v1beta1_DaemonSetUpdateStrategyInput {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_extensions_v1beta1_RollingUpdateDaemonSetInput
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is OnDelete."
  type:String
}
type io_k8s_api_extensions_v1beta1_DaemonSetUpdateStrategyResult {
  "Spec to control the desired behavior of daemon set rolling update."
  rollingUpdate:io_k8s_api_extensions_v1beta1_RollingUpdateDaemonSetResult
  "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is OnDelete."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
input io_k8s_api_extensions_v1beta1_DeploymentConditionInput {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DeploymentCondition describes the state of a deployment at a certain point."
type io_k8s_api_extensions_v1beta1_DeploymentConditionResult {
  lastTransitionTime:String
  lastUpdateTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of deployment condition."
  type:String
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
input io_k8s_api_extensions_v1beta1_DeploymentInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_extensions_v1beta1_DeploymentSpecInput
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_extensions_v1beta1_DeploymentStatusInput
}
"DeploymentList is a list of Deployments."
type io_k8s_api_extensions_v1beta1_DeploymentListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Deployments."
  items:[io_k8s_api_extensions_v1beta1_DeploymentResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
type io_k8s_api_extensions_v1beta1_DeploymentResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DeploymentSpec is the specification of the desired behavior of the Deployment."
  spec:io_k8s_api_extensions_v1beta1_DeploymentSpecResult
  "DeploymentStatus is the most recently observed status of the Deployment."
  status:io_k8s_api_extensions_v1beta1_DeploymentStatusResult
}
"DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."
input io_k8s_api_extensions_v1beta1_DeploymentRollbackInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Required: This must match the Name of a deployment."
  name:String
  "DEPRECATED."
  rollbackTo:io_k8s_api_extensions_v1beta1_RollbackConfigInput
  "The annotations to be updated to a deployment"
  updatedAnnotations:[StringInputProp!]
}
"DEPRECATED. DeploymentRollback stores the information required to rollback a deployment."
type io_k8s_api_extensions_v1beta1_DeploymentRollbackResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Required: This must match the Name of a deployment."
  name:String
  "DEPRECATED."
  rollbackTo:io_k8s_api_extensions_v1beta1_RollbackConfigResult
  "The annotations to be updated to a deployment"
  updatedAnnotations:[StringResultProp!]
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
input io_k8s_api_extensions_v1beta1_DeploymentSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused and will not be processed by the deployment controller."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified."
  revisionHistoryLimit:Int
  "DEPRECATED."
  rollbackTo:io_k8s_api_extensions_v1beta1_RollbackConfigInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_extensions_v1beta1_DeploymentStrategyInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"DeploymentSpec is the specification of the desired behavior of the Deployment."
type io_k8s_api_extensions_v1beta1_DeploymentSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Indicates that the deployment is paused and will not be processed by the deployment controller."
  paused:Boolean
  "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default."
  progressDeadlineSeconds:Int
  "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
  replicas:Int
  "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified."
  revisionHistoryLimit:Int
  "DEPRECATED."
  rollbackTo:io_k8s_api_extensions_v1beta1_RollbackConfigResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "DeploymentStrategy describes how to replace existing pods with new ones."
  strategy:io_k8s_api_extensions_v1beta1_DeploymentStrategyResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"DeploymentStatus is the most recently observed status of the Deployment."
input io_k8s_api_extensions_v1beta1_DeploymentStatusInput {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_extensions_v1beta1_DeploymentConditionInput]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStatus is the most recently observed status of the Deployment."
type io_k8s_api_extensions_v1beta1_DeploymentStatusResult {
  "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment."
  availableReplicas:Int
  "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet."
  collisionCount:Int
  "Represents the latest available observations of a deployment's current state."
  conditions:[io_k8s_api_extensions_v1beta1_DeploymentConditionResult]
  "The generation observed by the deployment controller."
  observedGeneration:Int
  "Total number of ready pods targeted by this deployment."
  readyReplicas:Int
  "Total number of non-terminated pods targeted by this deployment (their labels match the selector)."
  replicas:Int
  "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created."
  unavailableReplicas:Int
  "Total number of non-terminated pods targeted by this deployment that have the desired template spec."
  updatedReplicas:Int
}
"DeploymentStrategy describes how to replace existing pods with new ones."
input io_k8s_api_extensions_v1beta1_DeploymentStrategyInput {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_extensions_v1beta1_RollingUpdateDeploymentInput
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"DeploymentStrategy describes how to replace existing pods with new ones."
type io_k8s_api_extensions_v1beta1_DeploymentStrategyResult {
  "Spec to control the desired behavior of rolling update."
  rollingUpdate:io_k8s_api_extensions_v1beta1_RollingUpdateDeploymentResult
  "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
  type:String
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."
input io_k8s_api_extensions_v1beta1_FSGroupStrategyOptionsInput {
  "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate what FSGroup is used in the SecurityContext."
  rule:String
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."
type io_k8s_api_extensions_v1beta1_FSGroupStrategyOptionsResult {
  "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate what FSGroup is used in the SecurityContext."
  rule:String
}
"HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend."
input io_k8s_api_extensions_v1beta1_HTTPIngressPathInput {
  "IngressBackend describes all endpoints for a given service and port."
  backend:io_k8s_api_extensions_v1beta1_IngressBackendInput
  "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend."
  path:String
}
"HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend."
type io_k8s_api_extensions_v1beta1_HTTPIngressPathResult {
  "IngressBackend describes all endpoints for a given service and port."
  backend:io_k8s_api_extensions_v1beta1_IngressBackendResult
  "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend."
  path:String
}
"HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."
input io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueInput {
  "A collection of paths that map requests to backends."
  paths:[io_k8s_api_extensions_v1beta1_HTTPIngressPathInput]
}
"HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."
type io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueResult {
  "A collection of paths that map requests to backends."
  paths:[io_k8s_api_extensions_v1beta1_HTTPIngressPathResult]
}
"HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead."
input io_k8s_api_extensions_v1beta1_HostPortRangeInput {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead."
type io_k8s_api_extensions_v1beta1_HostPortRangeResult {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead."
input io_k8s_api_extensions_v1beta1_IDRangeInput {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead."
type io_k8s_api_extensions_v1beta1_IDRangeResult {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
input io_k8s_api_extensions_v1beta1_IPBlockInput {
  "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
  cidr:String
  "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range"
  except:[String]
}
"DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
type io_k8s_api_extensions_v1beta1_IPBlockResult {
  "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
  cidr:String
  "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range"
  except:[String]
}
"IngressBackend describes all endpoints for a given service and port."
input io_k8s_api_extensions_v1beta1_IngressBackendInput {
  "Specifies the name of the referenced service."
  serviceName:String
  servicePort:String
}
"IngressBackend describes all endpoints for a given service and port."
type io_k8s_api_extensions_v1beta1_IngressBackendResult {
  "Specifies the name of the referenced service."
  serviceName:String
  servicePort:String
}
"Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc."
input io_k8s_api_extensions_v1beta1_IngressInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "IngressSpec describes the Ingress the user wishes to exist."
  spec:io_k8s_api_extensions_v1beta1_IngressSpecInput
  "IngressStatus describe the current state of the Ingress."
  status:io_k8s_api_extensions_v1beta1_IngressStatusInput
}
"IngressList is a collection of Ingress."
type io_k8s_api_extensions_v1beta1_IngressListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of Ingress."
  items:[io_k8s_api_extensions_v1beta1_IngressResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc."
type io_k8s_api_extensions_v1beta1_IngressResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "IngressSpec describes the Ingress the user wishes to exist."
  spec:io_k8s_api_extensions_v1beta1_IngressSpecResult
  "IngressStatus describe the current state of the Ingress."
  status:io_k8s_api_extensions_v1beta1_IngressStatusResult
}
"IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue."
input io_k8s_api_extensions_v1beta1_IngressRuleInput {
  """
    Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
    	  IP in the Spec of the parent Ingress.
    2. The `:` delimiter is not respected because ports are not allowed.
    	  Currently the port of an Ingress is implicitly :80 for http and
    	  :443 for https.
    Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
    """
  host:String
  "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."
  http:io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueInput
}
"IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue."
type io_k8s_api_extensions_v1beta1_IngressRuleResult {
  """
    Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
    	  IP in the Spec of the parent Ingress.
    2. The `:` delimiter is not respected because ports are not allowed.
    	  Currently the port of an Ingress is implicitly :80 for http and
    	  :443 for https.
    Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
    """
  host:String
  "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'."
  http:io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueResult
}
"IngressSpec describes the Ingress the user wishes to exist."
input io_k8s_api_extensions_v1beta1_IngressSpecInput {
  "IngressBackend describes all endpoints for a given service and port."
  backend:io_k8s_api_extensions_v1beta1_IngressBackendInput
  "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend."
  rules:[io_k8s_api_extensions_v1beta1_IngressRuleInput]
  "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI."
  tls:[io_k8s_api_extensions_v1beta1_IngressTLSInput]
}
"IngressSpec describes the Ingress the user wishes to exist."
type io_k8s_api_extensions_v1beta1_IngressSpecResult {
  "IngressBackend describes all endpoints for a given service and port."
  backend:io_k8s_api_extensions_v1beta1_IngressBackendResult
  "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend."
  rules:[io_k8s_api_extensions_v1beta1_IngressRuleResult]
  "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI."
  tls:[io_k8s_api_extensions_v1beta1_IngressTLSResult]
}
"IngressStatus describe the current state of the Ingress."
input io_k8s_api_extensions_v1beta1_IngressStatusInput {
  "LoadBalancerStatus represents the status of a load-balancer."
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusInput
}
"IngressStatus describe the current state of the Ingress."
type io_k8s_api_extensions_v1beta1_IngressStatusResult {
  "LoadBalancerStatus represents the status of a load-balancer."
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusResult
}
"IngressTLS describes the transport layer security associated with an Ingress."
input io_k8s_api_extensions_v1beta1_IngressTLSInput {
  "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified."
  hosts:[String]
  "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing."
  secretName:String
}
"IngressTLS describes the transport layer security associated with an Ingress."
type io_k8s_api_extensions_v1beta1_IngressTLSResult {
  "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified."
  hosts:[String]
  "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing."
  secretName:String
}
"DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"
input io_k8s_api_extensions_v1beta1_NetworkPolicyEgressRuleInput {
  "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_extensions_v1beta1_NetworkPolicyPortInput]
  "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list."
  to:[io_k8s_api_extensions_v1beta1_NetworkPolicyPeerInput]
}
"DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"
type io_k8s_api_extensions_v1beta1_NetworkPolicyEgressRuleResult {
  "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_extensions_v1beta1_NetworkPolicyPortResult]
  "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list."
  to:[io_k8s_api_extensions_v1beta1_NetworkPolicyPeerResult]
}
"DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is deprecated by networking/v1/NetworkPolicyIngressRule. This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from."
input io_k8s_api_extensions_v1beta1_NetworkPolicyIngressRuleInput {
  "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list."
  from:[io_k8s_api_extensions_v1beta1_NetworkPolicyPeerInput]
  "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_extensions_v1beta1_NetworkPolicyPortInput]
}
"DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is deprecated by networking/v1/NetworkPolicyIngressRule. This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from."
type io_k8s_api_extensions_v1beta1_NetworkPolicyIngressRuleResult {
  "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list."
  from:[io_k8s_api_extensions_v1beta1_NetworkPolicyPeerResult]
  "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_extensions_v1beta1_NetworkPolicyPortResult]
}
"DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a set of Pods"
input io_k8s_api_extensions_v1beta1_NetworkPolicyInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."
  spec:io_k8s_api_extensions_v1beta1_NetworkPolicySpecInput
}
"DEPRECATED 1.9 - This group version of NetworkPolicyList is deprecated by networking/v1/NetworkPolicyList. Network Policy List is a list of NetworkPolicy objects."
type io_k8s_api_extensions_v1beta1_NetworkPolicyListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of schema objects."
  items:[io_k8s_api_extensions_v1beta1_NetworkPolicyResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer."
input io_k8s_api_extensions_v1beta1_NetworkPolicyPeerInput {
  "DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
  ipBlock:io_k8s_api_extensions_v1beta1_IPBlockInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
"DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer."
type io_k8s_api_extensions_v1beta1_NetworkPolicyPeerResult {
  "DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
  ipBlock:io_k8s_api_extensions_v1beta1_IPBlockResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
"DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort."
input io_k8s_api_extensions_v1beta1_NetworkPolicyPortInput {
  port:String
  "Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP."
  protocol:String
}
"DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort."
type io_k8s_api_extensions_v1beta1_NetworkPolicyPortResult {
  port:String
  "Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP."
  protocol:String
}
"DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a set of Pods"
type io_k8s_api_extensions_v1beta1_NetworkPolicyResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."
  spec:io_k8s_api_extensions_v1beta1_NetworkPolicySpecResult
}
"DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."
input io_k8s_api_extensions_v1beta1_NetworkPolicySpecInput {
  "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8"
  egress:[io_k8s_api_extensions_v1beta1_NetworkPolicyEgressRuleInput]
  "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)."
  ingress:[io_k8s_api_extensions_v1beta1_NetworkPolicyIngressRuleInput]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8"
  policyTypes:[String]
}
"DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec."
type io_k8s_api_extensions_v1beta1_NetworkPolicySpecResult {
  "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8"
  egress:[io_k8s_api_extensions_v1beta1_NetworkPolicyEgressRuleResult]
  "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)."
  ingress:[io_k8s_api_extensions_v1beta1_NetworkPolicyIngressRuleResult]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8"
  policyTypes:[String]
}
"PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead."
input io_k8s_api_extensions_v1beta1_PodSecurityPolicyInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."
  spec:io_k8s_api_extensions_v1beta1_PodSecurityPolicySpecInput
}
"PodSecurityPolicyList is a list of PodSecurityPolicy objects. Deprecated: use PodSecurityPolicyList from policy API Group instead."
type io_k8s_api_extensions_v1beta1_PodSecurityPolicyListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of schema objects."
  items:[io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead."
type io_k8s_api_extensions_v1beta1_PodSecurityPolicyResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."
  spec:io_k8s_api_extensions_v1beta1_PodSecurityPolicySpecResult
}
"PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."
input io_k8s_api_extensions_v1beta1_PodSecurityPolicySpecInput {
  "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities."
  allowedCapabilities:[String]
  "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field."
  allowedFlexVolumes:[io_k8s_api_extensions_v1beta1_AllowedFlexVolumeInput]
  "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used."
  allowedHostPaths:[io_k8s_api_extensions_v1beta1_AllowedHostPathInput]
  """
    allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list."
  defaultAddCapabilities:[String]
  "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."
  fsGroup:io_k8s_api_extensions_v1beta1_FSGroupStrategyOptionsInput
  "hostIPC determines if the policy allows the use of HostIPC in the pod spec."
  hostIPC:Boolean
  "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  hostNetwork:Boolean
  "hostPID determines if the policy allows the use of HostPID in the pod spec."
  hostPID:Boolean
  "hostPorts determines which host port ranges are allowed to be exposed."
  hostPorts:[io_k8s_api_extensions_v1beta1_HostPortRangeInput]
  "privileged determines if a pod can request to be run as privileged."
  privileged:Boolean
  "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."
  runAsUser:io_k8s_api_extensions_v1beta1_RunAsUserStrategyOptionsInput
  "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."
  seLinux:io_k8s_api_extensions_v1beta1_SELinuxStrategyOptionsInput
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."
  supplementalGroups:io_k8s_api_extensions_v1beta1_SupplementalGroupsStrategyOptionsInput
  "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'."
  volumes:[String]
}
"PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead."
type io_k8s_api_extensions_v1beta1_PodSecurityPolicySpecResult {
  "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities."
  allowedCapabilities:[String]
  "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field."
  allowedFlexVolumes:[io_k8s_api_extensions_v1beta1_AllowedFlexVolumeResult]
  "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used."
  allowedHostPaths:[io_k8s_api_extensions_v1beta1_AllowedHostPathResult]
  """
    allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list."
  defaultAddCapabilities:[String]
  "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead."
  fsGroup:io_k8s_api_extensions_v1beta1_FSGroupStrategyOptionsResult
  "hostIPC determines if the policy allows the use of HostIPC in the pod spec."
  hostIPC:Boolean
  "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  hostNetwork:Boolean
  "hostPID determines if the policy allows the use of HostPID in the pod spec."
  hostPID:Boolean
  "hostPorts determines which host port ranges are allowed to be exposed."
  hostPorts:[io_k8s_api_extensions_v1beta1_HostPortRangeResult]
  "privileged determines if a pod can request to be run as privileged."
  privileged:Boolean
  "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."
  runAsUser:io_k8s_api_extensions_v1beta1_RunAsUserStrategyOptionsResult
  "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."
  seLinux:io_k8s_api_extensions_v1beta1_SELinuxStrategyOptionsResult
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."
  supplementalGroups:io_k8s_api_extensions_v1beta1_SupplementalGroupsStrategyOptionsResult
  "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'."
  volumes:[String]
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
input io_k8s_api_extensions_v1beta1_ReplicaSetConditionInput {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"ReplicaSetCondition describes the state of a replica set at a certain point."
type io_k8s_api_extensions_v1beta1_ReplicaSetConditionResult {
  lastTransitionTime:String
  "A human readable message indicating details about the transition."
  message:String
  "The reason for the condition's last transition."
  reason:String
  "Status of the condition, one of True, False, Unknown."
  status:String
  "Type of replica set condition."
  type:String
}
"DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
input io_k8s_api_extensions_v1beta1_ReplicaSetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_extensions_v1beta1_ReplicaSetSpecInput
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_extensions_v1beta1_ReplicaSetStatusInput
}
"ReplicaSetList is a collection of ReplicaSets."
type io_k8s_api_extensions_v1beta1_ReplicaSetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
  items:[io_k8s_api_extensions_v1beta1_ReplicaSetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
type io_k8s_api_extensions_v1beta1_ReplicaSetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "ReplicaSetSpec is the specification of a ReplicaSet."
  spec:io_k8s_api_extensions_v1beta1_ReplicaSetSpecResult
  "ReplicaSetStatus represents the current status of a ReplicaSet."
  status:io_k8s_api_extensions_v1beta1_ReplicaSetStatusResult
}
"ReplicaSetSpec is the specification of a ReplicaSet."
input io_k8s_api_extensions_v1beta1_ReplicaSetSpecInput {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
"ReplicaSetSpec is the specification of a ReplicaSet."
type io_k8s_api_extensions_v1beta1_ReplicaSetSpecResult {
  "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)"
  minReadySeconds:Int
  "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "PodTemplateSpec describes the data a pod should have when created from a template"
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
input io_k8s_api_extensions_v1beta1_ReplicaSetStatusInput {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_extensions_v1beta1_ReplicaSetConditionInput]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"ReplicaSetStatus represents the current status of a ReplicaSet."
type io_k8s_api_extensions_v1beta1_ReplicaSetStatusResult {
  "The number of available replicas (ready for at least minReadySeconds) for this replica set."
  availableReplicas:Int
  "Represents the latest available observations of a replica set's current state."
  conditions:[io_k8s_api_extensions_v1beta1_ReplicaSetConditionResult]
  "The number of pods that have labels matching the labels of the pod template of the replicaset."
  fullyLabeledReplicas:Int
  "ObservedGeneration reflects the generation of the most recently observed ReplicaSet."
  observedGeneration:Int
  "The number of ready replicas for this replica set."
  readyReplicas:Int
  "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
  replicas:Int
}
"DEPRECATED."
input io_k8s_api_extensions_v1beta1_RollbackConfigInput {
  "The revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"DEPRECATED."
type io_k8s_api_extensions_v1beta1_RollbackConfigResult {
  "The revision to rollback to. If set to 0, rollback to the last revision."
  revision:Int
}
"Spec to control the desired behavior of daemon set rolling update."
input io_k8s_api_extensions_v1beta1_RollingUpdateDaemonSetInput {
  maxUnavailable:String
}
"Spec to control the desired behavior of daemon set rolling update."
type io_k8s_api_extensions_v1beta1_RollingUpdateDaemonSetResult {
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
input io_k8s_api_extensions_v1beta1_RollingUpdateDeploymentInput {
  maxSurge:String
  maxUnavailable:String
}
"Spec to control the desired behavior of rolling update."
type io_k8s_api_extensions_v1beta1_RollingUpdateDeploymentResult {
  maxSurge:String
  maxUnavailable:String
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."
input io_k8s_api_extensions_v1beta1_RunAsUserStrategyOptionsInput {
  "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate the allowable RunAsUser values that may be set."
  rule:String
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead."
type io_k8s_api_extensions_v1beta1_RunAsUserStrategyOptionsResult {
  "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate the allowable RunAsUser values that may be set."
  rule:String
}
"SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."
input io_k8s_api_extensions_v1beta1_SELinuxStrategyOptionsInput {
  "rule is the strategy that will dictate the allowable labels that may be set."
  rule:String
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
}
"SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead."
type io_k8s_api_extensions_v1beta1_SELinuxStrategyOptionsResult {
  "rule is the strategy that will dictate the allowable labels that may be set."
  rule:String
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
}
"represents a scaling request for a resource."
input io_k8s_api_extensions_v1beta1_ScaleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "describes the attributes of a scale subresource"
  spec:io_k8s_api_extensions_v1beta1_ScaleSpecInput
  "represents the current status of a scale subresource."
  status:io_k8s_api_extensions_v1beta1_ScaleStatusInput
}
"represents a scaling request for a resource."
type io_k8s_api_extensions_v1beta1_ScaleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "describes the attributes of a scale subresource"
  spec:io_k8s_api_extensions_v1beta1_ScaleSpecResult
  "represents the current status of a scale subresource."
  status:io_k8s_api_extensions_v1beta1_ScaleStatusResult
}
"describes the attributes of a scale subresource"
input io_k8s_api_extensions_v1beta1_ScaleSpecInput {
  "desired number of instances for the scaled object."
  replicas:Int
}
"describes the attributes of a scale subresource"
type io_k8s_api_extensions_v1beta1_ScaleSpecResult {
  "desired number of instances for the scaled object."
  replicas:Int
}
"represents the current status of a scale subresource."
input io_k8s_api_extensions_v1beta1_ScaleStatusInput {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringInputProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"represents the current status of a scale subresource."
type io_k8s_api_extensions_v1beta1_ScaleStatusResult {
  "actual number of observed instances of the scaled object."
  replicas:Int
  "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
  selector:[StringResultProp!]
  "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
  targetSelector:String
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."
input io_k8s_api_extensions_v1beta1_SupplementalGroupsStrategyOptionsInput {
  "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  rule:String
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead."
type io_k8s_api_extensions_v1beta1_SupplementalGroupsStrategyOptionsResult {
  "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_extensions_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  rule:String
}
"IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
input io_k8s_api_networking_v1_IPBlockInput {
  "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
  cidr:String
  "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range"
  except:[String]
}
"IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
type io_k8s_api_networking_v1_IPBlockResult {
  "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
  cidr:String
  "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range"
  except:[String]
}
"NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"
input io_k8s_api_networking_v1_NetworkPolicyEgressRuleInput {
  "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortInput]
  "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list."
  to:[io_k8s_api_networking_v1_NetworkPolicyPeerInput]
}
"NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8"
type io_k8s_api_networking_v1_NetworkPolicyEgressRuleResult {
  "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortResult]
  "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list."
  to:[io_k8s_api_networking_v1_NetworkPolicyPeerResult]
}
"NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from."
input io_k8s_api_networking_v1_NetworkPolicyIngressRuleInput {
  "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list."
  from:[io_k8s_api_networking_v1_NetworkPolicyPeerInput]
  "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortInput]
}
"NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from."
type io_k8s_api_networking_v1_NetworkPolicyIngressRuleResult {
  "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list."
  from:[io_k8s_api_networking_v1_NetworkPolicyPeerResult]
  "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortResult]
}
"NetworkPolicy describes what network traffic is allowed for a set of Pods"
input io_k8s_api_networking_v1_NetworkPolicyInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "NetworkPolicySpec provides the specification of a NetworkPolicy"
  spec:io_k8s_api_networking_v1_NetworkPolicySpecInput
}
"NetworkPolicyList is a list of NetworkPolicy objects."
type io_k8s_api_networking_v1_NetworkPolicyListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of schema objects."
  items:[io_k8s_api_networking_v1_NetworkPolicyResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed"
input io_k8s_api_networking_v1_NetworkPolicyPeerInput {
  "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
  ipBlock:io_k8s_api_networking_v1_IPBlockInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed"
type io_k8s_api_networking_v1_NetworkPolicyPeerResult {
  "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule."
  ipBlock:io_k8s_api_networking_v1_IPBlockResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
"NetworkPolicyPort describes a port to allow traffic on"
input io_k8s_api_networking_v1_NetworkPolicyPortInput {
  port:String
  "The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP."
  protocol:String
}
"NetworkPolicyPort describes a port to allow traffic on"
type io_k8s_api_networking_v1_NetworkPolicyPortResult {
  port:String
  "The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP."
  protocol:String
}
"NetworkPolicy describes what network traffic is allowed for a set of Pods"
type io_k8s_api_networking_v1_NetworkPolicyResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "NetworkPolicySpec provides the specification of a NetworkPolicy"
  spec:io_k8s_api_networking_v1_NetworkPolicySpecResult
}
"NetworkPolicySpec provides the specification of a NetworkPolicy"
input io_k8s_api_networking_v1_NetworkPolicySpecInput {
  "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8"
  egress:[io_k8s_api_networking_v1_NetworkPolicyEgressRuleInput]
  "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)"
  ingress:[io_k8s_api_networking_v1_NetworkPolicyIngressRuleInput]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8"
  policyTypes:[String]
}
"NetworkPolicySpec provides the specification of a NetworkPolicy"
type io_k8s_api_networking_v1_NetworkPolicySpecResult {
  "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8"
  egress:[io_k8s_api_networking_v1_NetworkPolicyEgressRuleResult]
  "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)"
  ingress:[io_k8s_api_networking_v1_NetworkPolicyIngressRuleResult]
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8"
  policyTypes:[String]
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used."
input io_k8s_api_policy_v1beta1_AllowedFlexVolumeInput {
  "driver is the name of the Flexvolume driver."
  driver:String
}
"AllowedFlexVolume represents a single Flexvolume that is allowed to be used."
type io_k8s_api_policy_v1beta1_AllowedFlexVolumeResult {
  "driver is the name of the Flexvolume driver."
  driver:String
}
"AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined."
input io_k8s_api_policy_v1beta1_AllowedHostPathInput {
  """
    pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
    
    Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
    """
  pathPrefix:String
  "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly."
  readOnly:Boolean
}
"AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined."
type io_k8s_api_policy_v1beta1_AllowedHostPathResult {
  """
    pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
    
    Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
    """
  pathPrefix:String
  "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly."
  readOnly:Boolean
}
"Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions."
input io_k8s_api_policy_v1beta1_EvictionInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DeleteOptions may be provided when deleting an API object."
  deleteOptions:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
"Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions."
type io_k8s_api_policy_v1beta1_EvictionResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "DeleteOptions may be provided when deleting an API object."
  deleteOptions:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
input io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsInput {
  "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate what FSGroup is used in the SecurityContext."
  rule:String
}
"FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
type io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsResult {
  "ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate what FSGroup is used in the SecurityContext."
  rule:String
}
"HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined."
input io_k8s_api_policy_v1beta1_HostPortRangeInput {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined."
type io_k8s_api_policy_v1beta1_HostPortRangeResult {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"IDRange provides a min/max of an allowed range of IDs."
input io_k8s_api_policy_v1beta1_IDRangeInput {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"IDRange provides a min/max of an allowed range of IDs."
type io_k8s_api_policy_v1beta1_IDRangeResult {
  "max is the end of the range, inclusive."
  max:Int
  "min is the start of the range, inclusive."
  min:Int
}
"PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."
  spec:io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecInput
  "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system."
  status:io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusInput
}
"PodDisruptionBudgetList is a collection of PodDisruptionBudgets."
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."
  spec:io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecResult
  "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system."
  status:io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusResult
}
"PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecInput {
  maxUnavailable:String
  minAvailable:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
"PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecResult {
  maxUnavailable:String
  minAvailable:String
  "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
"PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system."
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusInput {
  "current number of healthy pods"
  currentHealthy:Int
  "minimum desired number of healthy pods"
  desiredHealthy:Int
  "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions."
  disruptedPods:[StringInputProp!]
  "Number of pod disruptions that are currently allowed."
  disruptionsAllowed:Int
  "total number of pods counted by this disruption budget"
  expectedPods:Int
  "Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation."
  observedGeneration:Int
}
"PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system."
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusResult {
  "current number of healthy pods"
  currentHealthy:Int
  "minimum desired number of healthy pods"
  desiredHealthy:Int
  "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions."
  disruptedPods:[StringResultProp!]
  "Number of pod disruptions that are currently allowed."
  disruptionsAllowed:Int
  "total number of pods counted by this disruption budget"
  expectedPods:Int
  "Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation."
  observedGeneration:Int
}
"PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container."
input io_k8s_api_policy_v1beta1_PodSecurityPolicyInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "PodSecurityPolicySpec defines the policy enforced."
  spec:io_k8s_api_policy_v1beta1_PodSecurityPolicySpecInput
}
"PodSecurityPolicyList is a list of PodSecurityPolicy objects."
type io_k8s_api_policy_v1beta1_PodSecurityPolicyListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is a list of schema objects."
  items:[io_k8s_api_policy_v1beta1_PodSecurityPolicyResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container."
type io_k8s_api_policy_v1beta1_PodSecurityPolicyResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "PodSecurityPolicySpec defines the policy enforced."
  spec:io_k8s_api_policy_v1beta1_PodSecurityPolicySpecResult
}
"PodSecurityPolicySpec defines the policy enforced."
input io_k8s_api_policy_v1beta1_PodSecurityPolicySpecInput {
  "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities."
  allowedCapabilities:[String]
  "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field."
  allowedFlexVolumes:[io_k8s_api_policy_v1beta1_AllowedFlexVolumeInput]
  "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used."
  allowedHostPaths:[io_k8s_api_policy_v1beta1_AllowedHostPathInput]
  """
    allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list."
  defaultAddCapabilities:[String]
  "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
  fsGroup:io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsInput
  "hostIPC determines if the policy allows the use of HostIPC in the pod spec."
  hostIPC:Boolean
  "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  hostNetwork:Boolean
  "hostPID determines if the policy allows the use of HostPID in the pod spec."
  hostPID:Boolean
  "hostPorts determines which host port ranges are allowed to be exposed."
  hostPorts:[io_k8s_api_policy_v1beta1_HostPortRangeInput]
  "privileged determines if a pod can request to be run as privileged."
  privileged:Boolean
  "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
  runAsUser:io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsInput
  "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy."
  seLinux:io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsInput
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
  supplementalGroups:io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsInput
  "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'."
  volumes:[String]
}
"PodSecurityPolicySpec defines the policy enforced."
type io_k8s_api_policy_v1beta1_PodSecurityPolicySpecResult {
  "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true."
  allowPrivilegeEscalation:Boolean
  "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities."
  allowedCapabilities:[String]
  "allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field."
  allowedFlexVolumes:[io_k8s_api_policy_v1beta1_AllowedFlexVolumeResult]
  "allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used."
  allowedHostPaths:[io_k8s_api_policy_v1beta1_AllowedHostPathResult]
  """
    allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
    
    Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
    """
  allowedUnsafeSysctls:[String]
  "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list."
  defaultAddCapabilities:[String]
  "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process."
  defaultAllowPrivilegeEscalation:Boolean
  """
    forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
    
    Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
    """
  forbiddenSysctls:[String]
  "FSGroupStrategyOptions defines the strategy type and options used to create the strategy."
  fsGroup:io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsResult
  "hostIPC determines if the policy allows the use of HostIPC in the pod spec."
  hostIPC:Boolean
  "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
  hostNetwork:Boolean
  "hostPID determines if the policy allows the use of HostPID in the pod spec."
  hostPID:Boolean
  "hostPorts determines which host port ranges are allowed to be exposed."
  hostPorts:[io_k8s_api_policy_v1beta1_HostPortRangeResult]
  "privileged determines if a pod can request to be run as privileged."
  privileged:Boolean
  "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
  readOnlyRootFilesystem:Boolean
  "requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
  requiredDropCapabilities:[String]
  "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
  runAsUser:io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsResult
  "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy."
  seLinux:io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsResult
  "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
  supplementalGroups:io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsResult
  "volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'."
  volumes:[String]
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
input io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsInput {
  "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate the allowable RunAsUser values that may be set."
  rule:String
}
"RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy."
type io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsResult {
  "ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate the allowable RunAsUser values that may be set."
  rule:String
}
"SELinuxStrategyOptions defines the strategy type and any options used to create the strategy."
input io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsInput {
  "rule is the strategy that will dictate the allowable labels that may be set."
  rule:String
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
}
"SELinuxStrategyOptions defines the strategy type and any options used to create the strategy."
type io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsResult {
  "rule is the strategy that will dictate the allowable labels that may be set."
  rule:String
  "SELinuxOptions are the labels to be applied to the container"
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
input io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsInput {
  "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  rule:String
}
"SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy."
type io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsResult {
  "ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs."
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext."
  rule:String
}
"AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
input io_k8s_api_rbac_v1_AggregationRuleInput {
  "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
}
"AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
type io_k8s_api_rbac_v1_AggregationRuleResult {
  "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject."
input io_k8s_api_rbac_v1_ClusterRoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1_RoleRefInput
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1_SubjectInput]
}
"ClusterRoleBindingList is a collection of ClusterRoleBindings"
type io_k8s_api_rbac_v1_ClusterRoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoleBindings"
  items:[io_k8s_api_rbac_v1_ClusterRoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject."
type io_k8s_api_rbac_v1_ClusterRoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1_RoleRefResult
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1_SubjectResult]
}
"ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
input io_k8s_api_rbac_v1_ClusterRoleInput {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleInput
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[io_k8s_api_rbac_v1_PolicyRuleInput]
}
"ClusterRoleList is a collection of ClusterRoles"
type io_k8s_api_rbac_v1_ClusterRoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoles"
  items:[io_k8s_api_rbac_v1_ClusterRoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
type io_k8s_api_rbac_v1_ClusterRoleResult {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleResult
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[io_k8s_api_rbac_v1_PolicyRuleResult]
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
input io_k8s_api_rbac_v1_PolicyRuleInput {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
  apiGroups:[String]
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
type io_k8s_api_rbac_v1_PolicyRuleResult {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
  apiGroups:[String]
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace."
input io_k8s_api_rbac_v1_RoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1_RoleRefInput
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1_SubjectInput]
}
"RoleBindingList is a collection of RoleBindings"
type io_k8s_api_rbac_v1_RoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of RoleBindings"
  items:[io_k8s_api_rbac_v1_RoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace."
type io_k8s_api_rbac_v1_RoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1_RoleRefResult
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1_SubjectResult]
}
"Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
input io_k8s_api_rbac_v1_RoleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this Role"
  rules:[io_k8s_api_rbac_v1_PolicyRuleInput]
}
"RoleList is a collection of Roles"
type io_k8s_api_rbac_v1_RoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of Roles"
  items:[io_k8s_api_rbac_v1_RoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleRef contains information that points to the role being used"
input io_k8s_api_rbac_v1_RoleRefInput {
  "APIGroup is the group for the resource being referenced"
  apiGroup:String
  "Kind is the type of resource being referenced"
  kind:String
  "Name is the name of resource being referenced"
  name:String
}
"RoleRef contains information that points to the role being used"
type io_k8s_api_rbac_v1_RoleRefResult {
  "APIGroup is the group for the resource being referenced"
  apiGroup:String
  "Kind is the type of resource being referenced"
  kind:String
  "Name is the name of resource being referenced"
  name:String
}
"Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
type io_k8s_api_rbac_v1_RoleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this Role"
  rules:[io_k8s_api_rbac_v1_PolicyRuleResult]
}
"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names."
input io_k8s_api_rbac_v1_SubjectInput {
  "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
  apiGroup:String
  "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
  kind:String
  "Name of the object being referenced."
  name:String
  "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
  namespace:String
}
"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names."
type io_k8s_api_rbac_v1_SubjectResult {
  "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
  apiGroup:String
  "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
  kind:String
  "Name of the object being referenced."
  name:String
  "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
  namespace:String
}
"AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
input io_k8s_api_rbac_v1beta1_AggregationRuleInput {
  "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
}
"AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
type io_k8s_api_rbac_v1beta1_AggregationRuleResult {
  "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject."
input io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefInput
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1beta1_SubjectInput]
}
"ClusterRoleBindingList is a collection of ClusterRoleBindings"
type io_k8s_api_rbac_v1beta1_ClusterRoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoleBindings"
  items:[io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject."
type io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefResult
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1beta1_SubjectResult]
}
"ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
input io_k8s_api_rbac_v1beta1_ClusterRoleInput {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1beta1_AggregationRuleInput
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleInput]
}
"ClusterRoleList is a collection of ClusterRoles"
type io_k8s_api_rbac_v1beta1_ClusterRoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of ClusterRoles"
  items:[io_k8s_api_rbac_v1beta1_ClusterRoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
type io_k8s_api_rbac_v1beta1_ClusterRoleResult {
  "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole"
  aggregationRule:io_k8s_api_rbac_v1beta1_AggregationRuleResult
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this ClusterRole"
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleResult]
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
input io_k8s_api_rbac_v1beta1_PolicyRuleInput {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
  apiGroups:[String]
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
type io_k8s_api_rbac_v1beta1_PolicyRuleResult {
  "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
  apiGroups:[String]
  "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
  nonResourceURLs:[String]
  "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
  resourceNames:[String]
  "Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups."
  resources:[String]
  "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
  verbs:[String]
}
"RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace."
input io_k8s_api_rbac_v1beta1_RoleBindingInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefInput
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1beta1_SubjectInput]
}
"RoleBindingList is a collection of RoleBindings"
type io_k8s_api_rbac_v1beta1_RoleBindingListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of RoleBindings"
  items:[io_k8s_api_rbac_v1beta1_RoleBindingResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace."
type io_k8s_api_rbac_v1beta1_RoleBindingResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "RoleRef contains information that points to the role being used"
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefResult
  "Subjects holds references to the objects the role applies to."
  subjects:[io_k8s_api_rbac_v1beta1_SubjectResult]
}
"Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
input io_k8s_api_rbac_v1beta1_RoleInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Rules holds all the PolicyRules for this Role"
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleInput]
}
"RoleList is a collection of Roles"
type io_k8s_api_rbac_v1beta1_RoleListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is a list of Roles"
  items:[io_k8s_api_rbac_v1beta1_RoleResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"RoleRef contains information that points to the role being used"
input io_k8s_api_rbac_v1beta1_RoleRefInput {
  "APIGroup is the group for the resource being referenced"
  apiGroup:String
  "Kind is the type of resource being referenced"
  kind:String
  "Name is the name of resource being referenced"
  name:String
}
"RoleRef contains information that points to the role being used"
type io_k8s_api_rbac_v1beta1_RoleRefResult {
  "APIGroup is the group for the resource being referenced"
  apiGroup:String
  "Kind is the type of resource being referenced"
  kind:String
  "Name is the name of resource being referenced"
  name:String
}
"Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
type io_k8s_api_rbac_v1beta1_RoleResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Rules holds all the PolicyRules for this Role"
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleResult]
}
"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names."
input io_k8s_api_rbac_v1beta1_SubjectInput {
  "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
  apiGroup:String
  "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
  kind:String
  "Name of the object being referenced."
  name:String
  "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
  namespace:String
}
"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names."
type io_k8s_api_rbac_v1beta1_SubjectResult {
  "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
  apiGroup:String
  "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
  kind:String
  "Name of the object being referenced."
  name:String
  "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
  namespace:String
}
"PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer."
input io_k8s_api_scheduling_v1beta1_PriorityClassInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "description is an arbitrary string that usually provides guidelines on when this priority class should be used."
  description:String
  "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority."
  globalDefault:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec."
  value:Int
}
"PriorityClassList is a collection of priority classes."
type io_k8s_api_scheduling_v1beta1_PriorityClassListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "items is the list of PriorityClasses"
  items:[io_k8s_api_scheduling_v1beta1_PriorityClassResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer."
type io_k8s_api_scheduling_v1beta1_PriorityClassResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "description is an arbitrary string that usually provides guidelines on when this priority class should be used."
  description:String
  "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority."
  globalDefault:Boolean
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec."
  value:Int
}
"""
StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.

StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
"""
input io_k8s_api_storage_v1_StorageClassInput {
  "AllowVolumeExpansion shows whether the storage class allow volume expand"
  allowVolumeExpansion:Boolean
  "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature."
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermInput]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid."
  mountOptions:[String]
  "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
  parameters:[StringInputProp!]
  "Provisioner indicates the type of the provisioner."
  provisioner:String
  "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete."
  reclaimPolicy:String
  "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature."
  volumeBindingMode:String
}
"StorageClassList is a collection of storage classes."
type io_k8s_api_storage_v1_StorageClassListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of StorageClasses"
  items:[io_k8s_api_storage_v1_StorageClassResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.

StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
"""
type io_k8s_api_storage_v1_StorageClassResult {
  "AllowVolumeExpansion shows whether the storage class allow volume expand"
  allowVolumeExpansion:Boolean
  "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature."
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermResult]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid."
  mountOptions:[String]
  "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
  parameters:[StringResultProp!]
  "Provisioner indicates the type of the provisioner."
  provisioner:String
  "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete."
  reclaimPolicy:String
  "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature."
  volumeBindingMode:String
}
"""
StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.

StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
"""
input io_k8s_api_storage_v1beta1_StorageClassInput {
  "AllowVolumeExpansion shows whether the storage class allow volume expand"
  allowVolumeExpansion:Boolean
  "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature."
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermInput]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid."
  mountOptions:[String]
  "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
  parameters:[StringInputProp!]
  "Provisioner indicates the type of the provisioner."
  provisioner:String
  "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete."
  reclaimPolicy:String
  "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature."
  volumeBindingMode:String
}
"StorageClassList is a collection of storage classes."
type io_k8s_api_storage_v1beta1_StorageClassListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of StorageClasses"
  items:[io_k8s_api_storage_v1beta1_StorageClassResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.

StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
"""
type io_k8s_api_storage_v1beta1_StorageClassResult {
  "AllowVolumeExpansion shows whether the storage class allow volume expand"
  allowVolumeExpansion:Boolean
  "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature."
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermResult]
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid."
  mountOptions:[String]
  "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
  parameters:[StringResultProp!]
  "Provisioner indicates the type of the provisioner."
  provisioner:String
  "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete."
  reclaimPolicy:String
  "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature."
  volumeBindingMode:String
}
"""
VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.

VolumeAttachment objects are non-namespaced.
"""
input io_k8s_api_storage_v1beta1_VolumeAttachmentInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "VolumeAttachmentSpec is the specification of a VolumeAttachment request."
  spec:io_k8s_api_storage_v1beta1_VolumeAttachmentSpecInput
  "VolumeAttachmentStatus is the status of a VolumeAttachment request."
  status:io_k8s_api_storage_v1beta1_VolumeAttachmentStatusInput
}
"VolumeAttachmentList is a collection of VolumeAttachment objects."
type io_k8s_api_storage_v1beta1_VolumeAttachmentListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Items is the list of VolumeAttachments"
  items:[io_k8s_api_storage_v1beta1_VolumeAttachmentResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"""
VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.

VolumeAttachment objects are non-namespaced.
"""
type io_k8s_api_storage_v1beta1_VolumeAttachmentResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "VolumeAttachmentSpec is the specification of a VolumeAttachment request."
  spec:io_k8s_api_storage_v1beta1_VolumeAttachmentSpecResult
  "VolumeAttachmentStatus is the status of a VolumeAttachment request."
  status:io_k8s_api_storage_v1beta1_VolumeAttachmentStatusResult
}
"VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set."
input io_k8s_api_storage_v1beta1_VolumeAttachmentSourceInput {
  "Name of the persistent volume to attach."
  persistentVolumeName:String
}
"VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set."
type io_k8s_api_storage_v1beta1_VolumeAttachmentSourceResult {
  "Name of the persistent volume to attach."
  persistentVolumeName:String
}
"VolumeAttachmentSpec is the specification of a VolumeAttachment request."
input io_k8s_api_storage_v1beta1_VolumeAttachmentSpecInput {
  "Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName()."
  attacher:String
  "The node that the volume should be attached to."
  nodeName:String
  "VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set."
  source:io_k8s_api_storage_v1beta1_VolumeAttachmentSourceInput
}
"VolumeAttachmentSpec is the specification of a VolumeAttachment request."
type io_k8s_api_storage_v1beta1_VolumeAttachmentSpecResult {
  "Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName()."
  attacher:String
  "The node that the volume should be attached to."
  nodeName:String
  "VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set."
  source:io_k8s_api_storage_v1beta1_VolumeAttachmentSourceResult
}
"VolumeAttachmentStatus is the status of a VolumeAttachment request."
input io_k8s_api_storage_v1beta1_VolumeAttachmentStatusInput {
  "VolumeError captures an error encountered during a volume operation."
  attachError:io_k8s_api_storage_v1beta1_VolumeErrorInput
  "Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher."
  attached:Boolean
  "Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher."
  attachmentMetadata:[StringInputProp!]
  "VolumeError captures an error encountered during a volume operation."
  detachError:io_k8s_api_storage_v1beta1_VolumeErrorInput
}
"VolumeAttachmentStatus is the status of a VolumeAttachment request."
type io_k8s_api_storage_v1beta1_VolumeAttachmentStatusResult {
  "VolumeError captures an error encountered during a volume operation."
  attachError:io_k8s_api_storage_v1beta1_VolumeErrorResult
  "Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher."
  attached:Boolean
  "Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher."
  attachmentMetadata:[StringResultProp!]
  "VolumeError captures an error encountered during a volume operation."
  detachError:io_k8s_api_storage_v1beta1_VolumeErrorResult
}
"VolumeError captures an error encountered during a volume operation."
input io_k8s_api_storage_v1beta1_VolumeErrorInput {
  "String detailing the error encountered during Attach or Detach operation. This string maybe logged, so it should not contain sensitive information."
  message:String
  time:String
}
"VolumeError captures an error encountered during a volume operation."
type io_k8s_api_storage_v1beta1_VolumeErrorResult {
  "String detailing the error encountered during Attach or Detach operation. This string maybe logged, so it should not contain sensitive information."
  message:String
  time:String
}
"APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis."
type io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "groups is a list of APIGroup."
  groups:[io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
}
"APIGroup contains the name, the supported versions, and the preferred version of a group."
type io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "name is the name of the group."
  name:String
  "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility."
  preferredVersion:io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult
  "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP."
  serverAddressByClientCIDRs:[io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult]
  "versions are the versions supported in this group."
  versions:[io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult]
}
"APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced."
type io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "groupVersion is the group and version this APIResourceList is for."
  groupVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "resources contains the name of the resources and if they are namespaced."
  resources:[io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceResult]
}
"APIResource specifies the name of a resource and whether it is namespaced."
type io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceResult {
  "categories is a list of the grouped resources this resource belongs to (e.g. 'all')"
  categories:[String]
  "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\"."
  group:String
  "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"
  kind:String
  "name is the plural name of the resource."
  name:String
  "namespaced indicates if a resource is namespaced or not."
  namespaced:Boolean
  "shortNames is a list of suggested short names of the resource."
  shortNames:[String]
  "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface."
  singularName:String
  "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)"
  verbs:[String]
  "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\"."
  version:String
}
"APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API."
type io_k8s_apimachinery_pkg_apis_meta_v1_APIVersionsResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP."
  serverAddressByClientCIDRs:[io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult]
  "versions are the api versions that are available."
  versions:[String]
}
"DeleteOptions may be provided when deleting an API object."
input io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
  gracePeriodSeconds:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
  orphanDependents:Boolean
  "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."
  preconditions:io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsInput
  "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
  propagationPolicy:String
}
"DeleteOptions may be provided when deleting an API object."
type io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
  gracePeriodSeconds:Int
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
  orphanDependents:Boolean
  "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."
  preconditions:io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsResult
  "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
  propagationPolicy:String
}
"GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility."
type io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult {
  "groupVersion specifies the API group and version in the form \"group/version\""
  groupVersion:String
  "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion."
  version:String
}
"Initializer is information about an initializer that has not yet completed."
input io_k8s_apimachinery_pkg_apis_meta_v1_InitializerInput {
  "name of the process that is responsible for initializing this object."
  name:String
}
"Initializer is information about an initializer that has not yet completed."
type io_k8s_apimachinery_pkg_apis_meta_v1_InitializerResult {
  "name of the process that is responsible for initializing this object."
  name:String
}
"Initializers tracks the progress of initialization."
input io_k8s_apimachinery_pkg_apis_meta_v1_InitializersInput {
  "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients."
  pending:[io_k8s_apimachinery_pkg_apis_meta_v1_InitializerInput]
  "Status is a return value for calls that don't return other objects."
  result:io_k8s_apimachinery_pkg_apis_meta_v1_StatusInput
}
"Initializers tracks the progress of initialization."
type io_k8s_apimachinery_pkg_apis_meta_v1_InitializersResult {
  "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients."
  pending:[io_k8s_apimachinery_pkg_apis_meta_v1_InitializerResult]
  "Status is a return value for calls that don't return other objects."
  result:io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
}
"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
input io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput {
  "matchExpressions is a list of label selector requirements. The requirements are ANDed."
  matchExpressions:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementInput]
  "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
  matchLabels:[StringInputProp!]
}
"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
input io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementInput {
  "key is the label key that the selector applies to."
  key:String
  "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
  operator:String
  "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
  values:[String]
}
"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
type io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementResult {
  "key is the label key that the selector applies to."
  key:String
  "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
  operator:String
  "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
  values:[String]
}
"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects."
type io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult {
  "matchExpressions is a list of label selector requirements. The requirements are ANDed."
  matchExpressions:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementResult]
  "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
  matchLabels:[StringResultProp!]
}
"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
input io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaInput {
  "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
  continue:String
  "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
  resourceVersion:String
  "selfLink is a URL representing this object. Populated by the system. Read-only."
  selfLink:String
}
"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
type io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult {
  "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
  continue:String
  "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
  resourceVersion:String
  "selfLink is a URL representing this object. Populated by the system. Read-only."
  selfLink:String
}
"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
input io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput {
  "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
  annotations:[StringInputProp!]
  "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
  clusterName:String
  creationTimestamp:String
  "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
  deletionGracePeriodSeconds:Int
  deletionTimestamp:String
  "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
  finalizers:[String]
  """
    GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
    
    If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
    
    Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
    """
  generateName:String
  "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
  generation:Int
  "Initializers tracks the progress of initialization."
  initializers:io_k8s_apimachinery_pkg_apis_meta_v1_InitializersInput
  "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
  labels:[StringInputProp!]
  "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
  """
    Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
    
    Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    """
  namespace:String
  "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
  ownerReferences:[io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceInput]
  """
    An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
    
    Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    """
  resourceVersion:String
  "SelfLink is a URL representing this object. Populated by the system. Read-only."
  selfLink:String
  """
    UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
    
    Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """
  uid:String
}
"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
type io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult {
  "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
  annotations:[StringResultProp!]
  "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
  clusterName:String
  creationTimestamp:String
  "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
  deletionGracePeriodSeconds:Int
  deletionTimestamp:String
  "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
  finalizers:[String]
  """
    GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
    
    If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
    
    Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
    """
  generateName:String
  "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
  generation:Int
  "Initializers tracks the progress of initialization."
  initializers:io_k8s_apimachinery_pkg_apis_meta_v1_InitializersResult
  "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
  labels:[StringResultProp!]
  "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
  """
    Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
    
    Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    """
  namespace:String
  "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
  ownerReferences:[io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceResult]
  """
    An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
    
    Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    """
  resourceVersion:String
  "SelfLink is a URL representing this object. Populated by the system. Read-only."
  selfLink:String
  """
    UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
    
    Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """
  uid:String
}
"OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
input io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceInput {
  "API version of the referent."
  apiVersion:String
  "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
  blockOwnerDeletion:Boolean
  "If true, this reference points to the managing controller."
  controller:Boolean
  "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
  "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
  uid:String
}
"OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
type io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceResult {
  "API version of the referent."
  apiVersion:String
  "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
  blockOwnerDeletion:Boolean
  "If true, this reference points to the managing controller."
  controller:Boolean
  "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
  name:String
  "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
  uid:String
}
"Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."
input io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsInput {
  "Specifies the target UID."
  uid:String
}
"Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."
type io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsResult {
  "Specifies the target UID."
  uid:String
}
"ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match."
type io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult {
  "The CIDR with which clients can match their IP to figure out the server address that they should use."
  clientCIDR:String
  "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port."
  serverAddress:String
}
"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
input io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseInput {
  """
    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
    
    Examples:
      "name" - the field "name" on the current resource
      "items[0].name" - the field "name" on the first array entry in "items"
    """
  field:String
  "A human-readable description of the cause of the error.  This field may be presented as-is to a reader."
  message:String
  "A machine-readable description of the cause of the error. If this value is empty there is no information available."
  reason:String
}
"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseResult {
  """
    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
    
    Examples:
      "name" - the field "name" on the current resource
      "items[0].name" - the field "name" on the first array entry in "items"
    """
  field:String
  "A human-readable description of the cause of the error.  This field may be presented as-is to a reader."
  message:String
  "A machine-readable description of the cause of the error. If this value is empty there is no information available."
  reason:String
}
"StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined."
input io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsInput {
  "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes."
  causes:[io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseInput]
  "The group attribute of the resource associated with the status StatusReason."
  group:String
  "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
  name:String
  "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action."
  retryAfterSeconds:Int
  "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
  uid:String
}
"StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined."
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsResult {
  "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes."
  causes:[io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseResult]
  "The group attribute of the resource associated with the status StatusReason."
  group:String
  "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
  name:String
  "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action."
  retryAfterSeconds:Int
  "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
  uid:String
}
"Status is a return value for calls that don't return other objects."
input io_k8s_apimachinery_pkg_apis_meta_v1_StatusInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Suggested HTTP return code for this status, 0 if not set."
  code:Int
  "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined."
  details:io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsInput
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "A human-readable description of the status of this operation."
  message:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaInput
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it."
  reason:String
  "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
  status:String
}
"Status is a return value for calls that don't return other objects."
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Suggested HTTP return code for this status, 0 if not set."
  code:Int
  "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined."
  details:io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsResult
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "A human-readable description of the status of this operation."
  message:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
  "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it."
  reason:String
  "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
  status:String
}
"Event represents a single event to a watched resource."
type io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult {
  """
    RawExtension is used to hold extensions in external versions.
    
    To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
    
    // Internal package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.Object `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // External package: type MyAPIObject struct {
    	runtime.TypeMeta `json:",inline"`
    	MyPlugin runtime.RawExtension `json:"myPlugin"`
    } type PluginA struct {
    	AOption string `json:"aOption"`
    }
    
    // On the wire, the JSON will look something like this: {
    	"kind":"MyAPIObject",
    	"apiVersion":"v1",
    	"myPlugin": {
    		"kind":"PluginA",
    		"aOption":"foo",
    	},
    }
    
    So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    """
  object:io_k8s_apimachinery_pkg_runtime_RawExtensionResult
  type:String
}
"""
RawExtension is used to hold extensions in external versions.

To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.

// Internal package: type MyAPIObject struct {
	runtime.TypeMeta `json:",inline"`
	MyPlugin runtime.Object `json:"myPlugin"`
} type PluginA struct {
	AOption string `json:"aOption"`
}

// External package: type MyAPIObject struct {
	runtime.TypeMeta `json:",inline"`
	MyPlugin runtime.RawExtension `json:"myPlugin"`
} type PluginA struct {
	AOption string `json:"aOption"`
}

// On the wire, the JSON will look something like this: {
	"kind":"MyAPIObject",
	"apiVersion":"v1",
	"myPlugin": {
		"kind":"PluginA",
		"aOption":"foo",
	},
}

So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
"""
input io_k8s_apimachinery_pkg_runtime_RawExtensionInput {
  "Raw is the underlying serialization of this object."
  Raw:String
}
"""
RawExtension is used to hold extensions in external versions.

To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.

// Internal package: type MyAPIObject struct {
	runtime.TypeMeta `json:",inline"`
	MyPlugin runtime.Object `json:"myPlugin"`
} type PluginA struct {
	AOption string `json:"aOption"`
}

// External package: type MyAPIObject struct {
	runtime.TypeMeta `json:",inline"`
	MyPlugin runtime.RawExtension `json:"myPlugin"`
} type PluginA struct {
	AOption string `json:"aOption"`
}

// On the wire, the JSON will look something like this: {
	"kind":"MyAPIObject",
	"apiVersion":"v1",
	"myPlugin": {
		"kind":"PluginA",
		"aOption":"foo",
	},
}

So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
"""
type io_k8s_apimachinery_pkg_runtime_RawExtensionResult {
  "Raw is the underlying serialization of this object."
  Raw:String
}
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionInput {
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition."
  type:String
}
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionResult {
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition."
  type:String
}
"APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecInput
  "APIServiceStatus contains derived information about an API server"
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusInput
}
"APIServiceList is a list of APIService objects."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecResult
  "APIServiceStatus contains derived information about an API server"
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusResult
}
"APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecInput {
  "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate."
  caBundle:String
  "Group is the API group name this server hosts"
  group:String
  "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s"
  groupPriorityMinimum:Int
  "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead."
  insecureSkipTLSVerify:Boolean
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceInput
  "Version is the API version this server hosts.  For example, \"v1\""
  version:String
  "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10."
  versionPriority:Int
}
"APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecResult {
  "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate."
  caBundle:String
  "Group is the API group name this server hosts"
  group:String
  "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s"
  groupPriorityMinimum:Int
  "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead."
  insecureSkipTLSVerify:Boolean
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceResult
  "Version is the API version this server hosts.  For example, \"v1\""
  version:String
  "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10."
  versionPriority:Int
}
"APIServiceStatus contains derived information about an API server"
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusInput {
  "Current service state of apiService."
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionInput]
}
"APIServiceStatus contains derived information about an API server"
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusResult {
  "Current service state of apiService."
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionResult]
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceInput {
  "Name is the name of the service"
  name:String
  "Namespace is the namespace of the service"
  namespace:String
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceResult {
  "Name is the name of the service"
  name:String
  "Namespace is the namespace of the service"
  namespace:String
}
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionInput {
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition."
  type:String
}
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionResult {
  lastTransitionTime:String
  "Human-readable message indicating details about last transition."
  message:String
  "Unique, one-word, CamelCase reason for the condition's last transition."
  reason:String
  "Status is the status of the condition. Can be True, False, Unknown."
  status:String
  "Type is the type of the condition."
  type:String
}
"APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecInput
  "APIServiceStatus contains derived information about an API server"
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusInput
}
"APIServiceList is a list of APIService objects."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceListResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  items:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult]
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
"APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult {
  "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
  apiVersion:String
  "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
  kind:String
  "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecResult
  "APIServiceStatus contains derived information about an API server"
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusResult
}
"APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecInput {
  "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate."
  caBundle:String
  "Group is the API group name this server hosts"
  group:String
  "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s"
  groupPriorityMinimum:Int
  "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead."
  insecureSkipTLSVerify:Boolean
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceInput
  "Version is the API version this server hosts.  For example, \"v1\""
  version:String
  "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10."
  versionPriority:Int
}
"APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification."
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecResult {
  "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate."
  caBundle:String
  "Group is the API group name this server hosts"
  group:String
  "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s"
  groupPriorityMinimum:Int
  "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead."
  insecureSkipTLSVerify:Boolean
  "ServiceReference holds a reference to Service.legacy.k8s.io"
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceResult
  "Version is the API version this server hosts.  For example, \"v1\""
  version:String
  "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10."
  versionPriority:Int
}
"APIServiceStatus contains derived information about an API server"
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusInput {
  "Current service state of apiService."
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionInput]
}
"APIServiceStatus contains derived information about an API server"
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusResult {
  "Current service state of apiService."
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionResult]
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceInput {
  "Name is the name of the service"
  name:String
  "Namespace is the namespace of the service"
  namespace:String
}
"ServiceReference holds a reference to Service.legacy.k8s.io"
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceResult {
  "Name is the name of the service"
  name:String
  "Namespace is the namespace of the service"
  namespace:String
}
schema {
  mutation: Mutation
  query: Query
}
